#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMS.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BAPA2")]
	public partial class OMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChannel(Channel instance);
    partial void UpdateChannel(Channel instance);
    partial void DeleteChannel(Channel instance);
    partial void InsertChannelType(ChannelType instance);
    partial void UpdateChannelType(ChannelType instance);
    partial void DeleteChannelType(ChannelType instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertReferenceType(ReferenceType instance);
    partial void UpdateReferenceType(ReferenceType instance);
    partial void DeleteReferenceType(ReferenceType instance);
    partial void InsertStockTransactionType(StockTransactionType instance);
    partial void UpdateStockTransactionType(StockTransactionType instance);
    partial void DeleteStockTransactionType(StockTransactionType instance);
    partial void InsertInv_Category(Inv_Category instance);
    partial void UpdateInv_Category(Inv_Category instance);
    partial void DeleteInv_Category(Inv_Category instance);
    partial void InsertInv_Department(Inv_Department instance);
    partial void UpdateInv_Department(Inv_Department instance);
    partial void DeleteInv_Department(Inv_Department instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertMeasurementUnit(MeasurementUnit instance);
    partial void UpdateMeasurementUnit(MeasurementUnit instance);
    partial void DeleteMeasurementUnit(MeasurementUnit instance);
    partial void InsertStockDetail(StockDetail instance);
    partial void UpdateStockDetail(StockDetail instance);
    partial void DeleteStockDetail(StockDetail instance);
    partial void InsertEmployeeDailyShifting(EmployeeDailyShifting instance);
    partial void UpdateEmployeeDailyShifting(EmployeeDailyShifting instance);
    partial void DeleteEmployeeDailyShifting(EmployeeDailyShifting instance);
    partial void InsertShifting(Shifting instance);
    partial void UpdateShifting(Shifting instance);
    partial void DeleteShifting(Shifting instance);
    partial void InsertHRM_Employee(HRM_Employee instance);
    partial void UpdateHRM_Employee(HRM_Employee instance);
    partial void DeleteHRM_Employee(HRM_Employee instance);
    partial void InsertStockMaster(StockMaster instance);
    partial void UpdateStockMaster(StockMaster instance);
    partial void DeleteStockMaster(StockMaster instance);
    partial void InsertAcc_Class(Acc_Class instance);
    partial void UpdateAcc_Class(Acc_Class instance);
    partial void DeleteAcc_Class(Acc_Class instance);
    partial void InsertAcc_ChartOfAccountSupplier(Acc_ChartOfAccountSupplier instance);
    partial void UpdateAcc_ChartOfAccountSupplier(Acc_ChartOfAccountSupplier instance);
    partial void DeleteAcc_ChartOfAccountSupplier(Acc_ChartOfAccountSupplier instance);
    partial void InsertAcc_ChartOfAccountCustomer(Acc_ChartOfAccountCustomer instance);
    partial void UpdateAcc_ChartOfAccountCustomer(Acc_ChartOfAccountCustomer instance);
    partial void DeleteAcc_ChartOfAccountCustomer(Acc_ChartOfAccountCustomer instance);
    partial void InsertSystemRole(SystemRole instance);
    partial void UpdateSystemRole(SystemRole instance);
    partial void DeleteSystemRole(SystemRole instance);
    partial void InsertPagesOnRole(PagesOnRole instance);
    partial void UpdatePagesOnRole(PagesOnRole instance);
    partial void DeletePagesOnRole(PagesOnRole instance);
    partial void InsertPagesOnUser(PagesOnUser instance);
    partial void UpdatePagesOnUser(PagesOnUser instance);
    partial void DeletePagesOnUser(PagesOnUser instance);
    partial void InsertSystemPage(SystemPage instance);
    partial void UpdateSystemPage(SystemPage instance);
    partial void DeleteSystemPage(SystemPage instance);
    partial void InsertSystemModule(SystemModule instance);
    partial void UpdateSystemModule(SystemModule instance);
    partial void DeleteSystemModule(SystemModule instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertFinancialYear(FinancialYear instance);
    partial void UpdateFinancialYear(FinancialYear instance);
    partial void DeleteFinancialYear(FinancialYear instance);
    partial void InsertBranchInfo(BranchInfo instance);
    partial void UpdateBranchInfo(BranchInfo instance);
    partial void DeleteBranchInfo(BranchInfo instance);
    partial void InsertSystemUser(SystemUser instance);
    partial void UpdateSystemUser(SystemUser instance);
    partial void DeleteSystemUser(SystemUser instance);
    partial void InsertAcc_BankTransaction(Acc_BankTransaction instance);
    partial void UpdateAcc_BankTransaction(Acc_BankTransaction instance);
    partial void DeleteAcc_BankTransaction(Acc_BankTransaction instance);
    partial void InsertAcc_Bank(Acc_Bank instance);
    partial void UpdateAcc_Bank(Acc_Bank instance);
    partial void DeleteAcc_Bank(Acc_Bank instance);
    partial void InsertAcc_BankAccount(Acc_BankAccount instance);
    partial void UpdateAcc_BankAccount(Acc_BankAccount instance);
    partial void DeleteAcc_BankAccount(Acc_BankAccount instance);
    partial void InsertAcc_BankBranch(Acc_BankBranch instance);
    partial void UpdateAcc_BankBranch(Acc_BankBranch instance);
    partial void DeleteAcc_BankBranch(Acc_BankBranch instance);
    partial void InsertAcc_BankLinkToChartOfAccount(Acc_BankLinkToChartOfAccount instance);
    partial void UpdateAcc_BankLinkToChartOfAccount(Acc_BankLinkToChartOfAccount instance);
    partial void DeleteAcc_BankLinkToChartOfAccount(Acc_BankLinkToChartOfAccount instance);
    partial void InsertAcc_ChequeBook(Acc_ChequeBook instance);
    partial void UpdateAcc_ChequeBook(Acc_ChequeBook instance);
    partial void DeleteAcc_ChequeBook(Acc_ChequeBook instance);
    partial void InsertAcc_ChequeLeaf(Acc_ChequeLeaf instance);
    partial void UpdateAcc_ChequeLeaf(Acc_ChequeLeaf instance);
    partial void DeleteAcc_ChequeLeaf(Acc_ChequeLeaf instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertAcc_TransactionMaster(Acc_TransactionMaster instance);
    partial void UpdateAcc_TransactionMaster(Acc_TransactionMaster instance);
    partial void DeleteAcc_TransactionMaster(Acc_TransactionMaster instance);
    partial void InsertAcc_TransactionDetail(Acc_TransactionDetail instance);
    partial void UpdateAcc_TransactionDetail(Acc_TransactionDetail instance);
    partial void DeleteAcc_TransactionDetail(Acc_TransactionDetail instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertAirlinesCommission(AirlinesCommission instance);
    partial void UpdateAirlinesCommission(AirlinesCommission instance);
    partial void DeleteAirlinesCommission(AirlinesCommission instance);
    partial void InsertTicketClass(TicketClass instance);
    partial void UpdateTicketClass(TicketClass instance);
    partial void DeleteTicketClass(TicketClass instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertTicketSaleDetail(TicketSaleDetail instance);
    partial void UpdateTicketSaleDetail(TicketSaleDetail instance);
    partial void DeleteTicketSaleDetail(TicketSaleDetail instance);
    partial void InsertAcc_ChartOfAccount(Acc_ChartOfAccount instance);
    partial void UpdateAcc_ChartOfAccount(Acc_ChartOfAccount instance);
    partial void DeleteAcc_ChartOfAccount(Acc_ChartOfAccount instance);
    partial void InsertTicketSale(TicketSale instance);
    partial void UpdateTicketSale(TicketSale instance);
    partial void DeleteTicketSale(TicketSale instance);
    partial void InsertCompanyInfo(CompanyInfo instance);
    partial void UpdateCompanyInfo(CompanyInfo instance);
    partial void DeleteCompanyInfo(CompanyInfo instance);
    partial void InsertAssetInformation(AssetInformation instance);
    partial void UpdateAssetInformation(AssetInformation instance);
    partial void DeleteAssetInformation(AssetInformation instance);
    partial void InsertAssetDepriciationRatio(AssetDepriciationRatio instance);
    partial void UpdateAssetDepriciationRatio(AssetDepriciationRatio instance);
    partial void DeleteAssetDepriciationRatio(AssetDepriciationRatio instance);
    partial void InsertAsset_Type(Asset_Type instance);
    partial void UpdateAsset_Type(Asset_Type instance);
    partial void DeleteAsset_Type(Asset_Type instance);
    partial void InsertCompanyType(CompanyType instance);
    partial void UpdateCompanyType(CompanyType instance);
    partial void DeleteCompanyType(CompanyType instance);
    partial void InsertCompanyCategory(CompanyCategory instance);
    partial void UpdateCompanyCategory(CompanyCategory instance);
    partial void DeleteCompanyCategory(CompanyCategory instance);
    partial void InsertIns_DocumentType(Ins_DocumentType instance);
    partial void UpdateIns_DocumentType(Ins_DocumentType instance);
    partial void DeleteIns_DocumentType(Ins_DocumentType instance);
    partial void InsertIns_ItemCategory(Ins_ItemCategory instance);
    partial void UpdateIns_ItemCategory(Ins_ItemCategory instance);
    partial void DeleteIns_ItemCategory(Ins_ItemCategory instance);
    partial void InsertIns_MemberVerification(Ins_MemberVerification instance);
    partial void UpdateIns_MemberVerification(Ins_MemberVerification instance);
    partial void DeleteIns_MemberVerification(Ins_MemberVerification instance);
    partial void InsertIns_MemberVerificationDetail(Ins_MemberVerificationDetail instance);
    partial void UpdateIns_MemberVerificationDetail(Ins_MemberVerificationDetail instance);
    partial void DeleteIns_MemberVerificationDetail(Ins_MemberVerificationDetail instance);
    partial void InsertIns_VerificationType(Ins_VerificationType instance);
    partial void UpdateIns_VerificationType(Ins_VerificationType instance);
    partial void DeleteIns_VerificationType(Ins_VerificationType instance);
    partial void InsertMemberDocument(MemberDocument instance);
    partial void UpdateMemberDocument(MemberDocument instance);
    partial void DeleteMemberDocument(MemberDocument instance);
    partial void InsertBusinessType(BusinessType instance);
    partial void UpdateBusinessType(BusinessType instance);
    partial void DeleteBusinessType(BusinessType instance);
    partial void InsertIns_MemberShipFee(Ins_MemberShipFee instance);
    partial void UpdateIns_MemberShipFee(Ins_MemberShipFee instance);
    partial void DeleteIns_MemberShipFee(Ins_MemberShipFee instance);
    partial void InsertIns_Item(Ins_Item instance);
    partial void UpdateIns_Item(Ins_Item instance);
    partial void DeleteIns_Item(Ins_Item instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertIns_ChaFormInvoice(Ins_ChaFormInvoice instance);
    partial void UpdateIns_ChaFormInvoice(Ins_ChaFormInvoice instance);
    partial void DeleteIns_ChaFormInvoice(Ins_ChaFormInvoice instance);
    partial void InsertIns_ChaFormDeclineReson(Ins_ChaFormDeclineReson instance);
    partial void UpdateIns_ChaFormDeclineReson(Ins_ChaFormDeclineReson instance);
    partial void DeleteIns_ChaFormDeclineReson(Ins_ChaFormDeclineReson instance);
    partial void InsertIns_BapaIncome(Ins_BapaIncome instance);
    partial void UpdateIns_BapaIncome(Ins_BapaIncome instance);
    partial void DeleteIns_BapaIncome(Ins_BapaIncome instance);
    partial void InsertIns_MemberPayment(Ins_MemberPayment instance);
    partial void UpdateIns_MemberPayment(Ins_MemberPayment instance);
    partial void DeleteIns_MemberPayment(Ins_MemberPayment instance);
    partial void InsertIns_MemberPaymentDetail(Ins_MemberPaymentDetail instance);
    partial void UpdateIns_MemberPaymentDetail(Ins_MemberPaymentDetail instance);
    partial void DeleteIns_MemberPaymentDetail(Ins_MemberPaymentDetail instance);
    partial void InsertIns_MembershipExpireInfo(Ins_MembershipExpireInfo instance);
    partial void UpdateIns_MembershipExpireInfo(Ins_MembershipExpireInfo instance);
    partial void DeleteIns_MembershipExpireInfo(Ins_MembershipExpireInfo instance);
    partial void InsertAcc_ChartOfAccountMember(Acc_ChartOfAccountMember instance);
    partial void UpdateAcc_ChartOfAccountMember(Acc_ChartOfAccountMember instance);
    partial void DeleteAcc_ChartOfAccountMember(Acc_ChartOfAccountMember instance);
    partial void InsertIns_ChaForm(Ins_ChaForm instance);
    partial void UpdateIns_ChaForm(Ins_ChaForm instance);
    partial void DeleteIns_ChaForm(Ins_ChaForm instance);
    partial void InsertIns_MemberItem(Ins_MemberItem instance);
    partial void UpdateIns_MemberItem(Ins_MemberItem instance);
    partial void DeleteIns_MemberItem(Ins_MemberItem instance);
    partial void InsertInv_Detail(Inv_Detail instance);
    partial void UpdateInv_Detail(Inv_Detail instance);
    partial void DeleteInv_Detail(Inv_Detail instance);
    partial void InsertIns_InvoiceEnclosedDocument(Ins_InvoiceEnclosedDocument instance);
    partial void UpdateIns_InvoiceEnclosedDocument(Ins_InvoiceEnclosedDocument instance);
    partial void DeleteIns_InvoiceEnclosedDocument(Ins_InvoiceEnclosedDocument instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertInv_Master(Inv_Master instance);
    partial void UpdateInv_Master(Inv_Master instance);
    partial void DeleteInv_Master(Inv_Master instance);
    #endregion
		
		public OMSDataContext() : 
				base(global::OMS.DAL.Properties.Settings.Default.BAPA2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public OMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Channel> Channels
		{
			get
			{
				return this.GetTable<Channel>();
			}
		}
		
		public System.Data.Linq.Table<ChannelType> ChannelTypes
		{
			get
			{
				return this.GetTable<ChannelType>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<ReferenceType> ReferenceTypes
		{
			get
			{
				return this.GetTable<ReferenceType>();
			}
		}
		
		public System.Data.Linq.Table<StockTransactionType> StockTransactionTypes
		{
			get
			{
				return this.GetTable<StockTransactionType>();
			}
		}
		
		public System.Data.Linq.Table<Inv_Category> Inv_Categories
		{
			get
			{
				return this.GetTable<Inv_Category>();
			}
		}
		
		public System.Data.Linq.Table<Inv_Department> Inv_Departments
		{
			get
			{
				return this.GetTable<Inv_Department>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<MeasurementUnit> MeasurementUnits
		{
			get
			{
				return this.GetTable<MeasurementUnit>();
			}
		}
		
		public System.Data.Linq.Table<StockDetail> StockDetails
		{
			get
			{
				return this.GetTable<StockDetail>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDailyShifting> EmployeeDailyShiftings
		{
			get
			{
				return this.GetTable<EmployeeDailyShifting>();
			}
		}
		
		public System.Data.Linq.Table<Shifting> Shiftings
		{
			get
			{
				return this.GetTable<Shifting>();
			}
		}
		
		public System.Data.Linq.Table<HRM_Employee> HRM_Employees
		{
			get
			{
				return this.GetTable<HRM_Employee>();
			}
		}
		
		public System.Data.Linq.Table<StockMaster> StockMasters
		{
			get
			{
				return this.GetTable<StockMaster>();
			}
		}
		
		public System.Data.Linq.Table<Acc_Class> Acc_Classes
		{
			get
			{
				return this.GetTable<Acc_Class>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChartOfAccountSupplier> Acc_ChartOfAccountSuppliers
		{
			get
			{
				return this.GetTable<Acc_ChartOfAccountSupplier>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChartOfAccountCustomer> Acc_ChartOfAccountCustomers
		{
			get
			{
				return this.GetTable<Acc_ChartOfAccountCustomer>();
			}
		}
		
		public System.Data.Linq.Table<SystemRole> SystemRoles
		{
			get
			{
				return this.GetTable<SystemRole>();
			}
		}
		
		public System.Data.Linq.Table<PagesOnRole> PagesOnRoles
		{
			get
			{
				return this.GetTable<PagesOnRole>();
			}
		}
		
		public System.Data.Linq.Table<PagesOnUser> PagesOnUsers
		{
			get
			{
				return this.GetTable<PagesOnUser>();
			}
		}
		
		public System.Data.Linq.Table<SystemPage> SystemPages
		{
			get
			{
				return this.GetTable<SystemPage>();
			}
		}
		
		public System.Data.Linq.Table<SystemModule> SystemModules
		{
			get
			{
				return this.GetTable<SystemModule>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<FinancialYear> FinancialYears
		{
			get
			{
				return this.GetTable<FinancialYear>();
			}
		}
		
		public System.Data.Linq.Table<BranchInfo> BranchInfos
		{
			get
			{
				return this.GetTable<BranchInfo>();
			}
		}
		
		public System.Data.Linq.Table<SystemUser> SystemUsers
		{
			get
			{
				return this.GetTable<SystemUser>();
			}
		}
		
		public System.Data.Linq.Table<Acc_BankTransaction> Acc_BankTransactions
		{
			get
			{
				return this.GetTable<Acc_BankTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Acc_Bank> Acc_Banks
		{
			get
			{
				return this.GetTable<Acc_Bank>();
			}
		}
		
		public System.Data.Linq.Table<Acc_BankAccount> Acc_BankAccounts
		{
			get
			{
				return this.GetTable<Acc_BankAccount>();
			}
		}
		
		public System.Data.Linq.Table<Acc_BankBranch> Acc_BankBranches
		{
			get
			{
				return this.GetTable<Acc_BankBranch>();
			}
		}
		
		public System.Data.Linq.Table<Acc_BankLinkToChartOfAccount> Acc_BankLinkToChartOfAccounts
		{
			get
			{
				return this.GetTable<Acc_BankLinkToChartOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChequeBook> Acc_ChequeBooks
		{
			get
			{
				return this.GetTable<Acc_ChequeBook>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChequeLeaf> Acc_ChequeLeafs
		{
			get
			{
				return this.GetTable<Acc_ChequeLeaf>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Acc_TransactionMaster> Acc_TransactionMasters
		{
			get
			{
				return this.GetTable<Acc_TransactionMaster>();
			}
		}
		
		public System.Data.Linq.Table<Acc_TransactionDetail> Acc_TransactionDetails
		{
			get
			{
				return this.GetTable<Acc_TransactionDetail>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<AirlinesCommission> AirlinesCommissions
		{
			get
			{
				return this.GetTable<AirlinesCommission>();
			}
		}
		
		public System.Data.Linq.Table<TicketClass> TicketClasses
		{
			get
			{
				return this.GetTable<TicketClass>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<TicketSaleDetail> TicketSaleDetails
		{
			get
			{
				return this.GetTable<TicketSaleDetail>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChartOfAccount> Acc_ChartOfAccounts
		{
			get
			{
				return this.GetTable<Acc_ChartOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<TicketSale> TicketSales
		{
			get
			{
				return this.GetTable<TicketSale>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfos
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<AssetInformation> AssetInformations
		{
			get
			{
				return this.GetTable<AssetInformation>();
			}
		}
		
		public System.Data.Linq.Table<AssetDepriciationRatio> AssetDepriciationRatios
		{
			get
			{
				return this.GetTable<AssetDepriciationRatio>();
			}
		}
		
		public System.Data.Linq.Table<Asset_Type> Asset_Types
		{
			get
			{
				return this.GetTable<Asset_Type>();
			}
		}
		
		public System.Data.Linq.Table<CompanyType> CompanyTypes
		{
			get
			{
				return this.GetTable<CompanyType>();
			}
		}
		
		public System.Data.Linq.Table<CompanyCategory> CompanyCategories
		{
			get
			{
				return this.GetTable<CompanyCategory>();
			}
		}
		
		public System.Data.Linq.Table<Ins_DocumentType> Ins_DocumentTypes
		{
			get
			{
				return this.GetTable<Ins_DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<Ins_ItemCategory> Ins_ItemCategories
		{
			get
			{
				return this.GetTable<Ins_ItemCategory>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberVerification> Ins_MemberVerifications
		{
			get
			{
				return this.GetTable<Ins_MemberVerification>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberVerificationDetail> Ins_MemberVerificationDetails
		{
			get
			{
				return this.GetTable<Ins_MemberVerificationDetail>();
			}
		}
		
		public System.Data.Linq.Table<Ins_VerificationType> Ins_VerificationTypes
		{
			get
			{
				return this.GetTable<Ins_VerificationType>();
			}
		}
		
		public System.Data.Linq.Table<MemberDocument> MemberDocuments
		{
			get
			{
				return this.GetTable<MemberDocument>();
			}
		}
		
		public System.Data.Linq.Table<BusinessType> BusinessTypes
		{
			get
			{
				return this.GetTable<BusinessType>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberShipFee> Ins_MemberShipFees
		{
			get
			{
				return this.GetTable<Ins_MemberShipFee>();
			}
		}
		
		public System.Data.Linq.Table<Ins_Item> Ins_Items
		{
			get
			{
				return this.GetTable<Ins_Item>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Ins_ChaFormInvoice> Ins_ChaFormInvoices
		{
			get
			{
				return this.GetTable<Ins_ChaFormInvoice>();
			}
		}
		
		public System.Data.Linq.Table<Ins_ChaFormDeclineReson> Ins_ChaFormDeclineResons
		{
			get
			{
				return this.GetTable<Ins_ChaFormDeclineReson>();
			}
		}
		
		public System.Data.Linq.Table<Ins_BapaIncome> Ins_BapaIncomes
		{
			get
			{
				return this.GetTable<Ins_BapaIncome>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberPayment> Ins_MemberPayments
		{
			get
			{
				return this.GetTable<Ins_MemberPayment>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberPaymentDetail> Ins_MemberPaymentDetails
		{
			get
			{
				return this.GetTable<Ins_MemberPaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MembershipExpireInfo> Ins_MembershipExpireInfos
		{
			get
			{
				return this.GetTable<Ins_MembershipExpireInfo>();
			}
		}
		
		public System.Data.Linq.Table<Acc_ChartOfAccountMember> Acc_ChartOfAccountMembers
		{
			get
			{
				return this.GetTable<Acc_ChartOfAccountMember>();
			}
		}
		
		public System.Data.Linq.Table<Ins_ChaForm> Ins_ChaForms
		{
			get
			{
				return this.GetTable<Ins_ChaForm>();
			}
		}
		
		public System.Data.Linq.Table<Ins_MemberItem> Ins_MemberItems
		{
			get
			{
				return this.GetTable<Ins_MemberItem>();
			}
		}
		
		public System.Data.Linq.Table<Inv_Detail> Inv_Details
		{
			get
			{
				return this.GetTable<Inv_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Ins_InvoiceEnclosedDocument> Ins_InvoiceEnclosedDocuments
		{
			get
			{
				return this.GetTable<Ins_InvoiceEnclosedDocument>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Inv_Master> Inv_Masters
		{
			get
			{
				return this.GetTable<Inv_Master>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Channel")]
	public partial class Channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Address;
		
		private long _ParentID;
		
		private int _ChannelTypeID;
		
		private long _CityID;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Web;
		
		private string _ContactPerson;
		
		private string _ContactPersonAddress;
		
		private string _ContactPersonPhone;
		
		private string _ContactPersonMobile;
		
		private string _ContactPersonEmail;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<ChannelType> _ChannelType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnParentIDChanging(long value);
    partial void OnParentIDChanged();
    partial void OnChannelTypeIDChanging(int value);
    partial void OnChannelTypeIDChanged();
    partial void OnCityIDChanging(long value);
    partial void OnCityIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPersonAddressChanging(string value);
    partial void OnContactPersonAddressChanged();
    partial void OnContactPersonPhoneChanging(string value);
    partial void OnContactPersonPhoneChanged();
    partial void OnContactPersonMobileChanging(string value);
    partial void OnContactPersonMobileChanged();
    partial void OnContactPersonEmailChanging(string value);
    partial void OnContactPersonEmailChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Channel()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._ChannelType = default(EntityRef<ChannelType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt NOT NULL")]
		public long ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelTypeID", DbType="Int NOT NULL")]
		public int ChannelTypeID
		{
			get
			{
				return this._ChannelTypeID;
			}
			set
			{
				if ((this._ChannelTypeID != value))
				{
					if (this._ChannelType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChannelTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelTypeID = value;
					this.SendPropertyChanged("ChannelTypeID");
					this.OnChannelTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="BigInt NOT NULL")]
		public long CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactPersonAddress
		{
			get
			{
				return this._ContactPersonAddress;
			}
			set
			{
				if ((this._ContactPersonAddress != value))
				{
					this.OnContactPersonAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonAddress = value;
					this.SendPropertyChanged("ContactPersonAddress");
					this.OnContactPersonAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonPhone
		{
			get
			{
				return this._ContactPersonPhone;
			}
			set
			{
				if ((this._ContactPersonPhone != value))
				{
					this.OnContactPersonPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonPhone = value;
					this.SendPropertyChanged("ContactPersonPhone");
					this.OnContactPersonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonMobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonMobile
		{
			get
			{
				return this._ContactPersonMobile;
			}
			set
			{
				if ((this._ContactPersonMobile != value))
				{
					this.OnContactPersonMobileChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonMobile = value;
					this.SendPropertyChanged("ContactPersonMobile");
					this.OnContactPersonMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonEmail
		{
			get
			{
				return this._ContactPersonEmail;
			}
			set
			{
				if ((this._ContactPersonEmail != value))
				{
					this.OnContactPersonEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonEmail = value;
					this.SendPropertyChanged("ContactPersonEmail");
					this.OnContactPersonEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_Order", Storage="_Orders", ThisKey="IID", OtherKey="ChannelID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChannelType_Channel", Storage="_ChannelType", ThisKey="ChannelTypeID", OtherKey="IID", IsForeignKey=true)]
		public ChannelType ChannelType
		{
			get
			{
				return this._ChannelType.Entity;
			}
			set
			{
				ChannelType previousValue = this._ChannelType.Entity;
				if (((previousValue != value) 
							|| (this._ChannelType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChannelType.Entity = null;
						previousValue.Channels.Remove(this);
					}
					this._ChannelType.Entity = value;
					if ((value != null))
					{
						value.Channels.Add(this);
						this._ChannelTypeID = value.IID;
					}
					else
					{
						this._ChannelTypeID = default(int);
					}
					this.SendPropertyChanged("ChannelType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Channel = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Channel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChannelType")]
	public partial class ChannelType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private string _Description;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Channel> _Channels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public ChannelType()
		{
			this._Channels = new EntitySet<Channel>(new Action<Channel>(this.attach_Channels), new Action<Channel>(this.detach_Channels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChannelType_Channel", Storage="_Channels", ThisKey="IID", OtherKey="ChannelTypeID")]
		public EntitySet<Channel> Channels
		{
			get
			{
				return this._Channels;
			}
			set
			{
				this._Channels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Channels(Channel entity)
		{
			this.SendPropertyChanging();
			entity.ChannelType = this;
		}
		
		private void detach_Channels(Channel entity)
		{
			this.SendPropertyChanging();
			entity.ChannelType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private long _StateID;
		
		private long _CountryID;
		
		private int _IsRemoved;
		
		private EntityRef<State> _State;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(long value);
    partial void OnStateIDChanged();
    partial void OnCountryIDChanging(long value);
    partial void OnCountryIDChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public City()
		{
			this._State = default(EntityRef<State>);
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="BigInt NOT NULL")]
		public long StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt NOT NULL")]
		public long CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="StateID", OtherKey="IID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateID = value.IID;
					}
					else
					{
						this._StateID = default(long);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_City", Storage="_Country", ThisKey="CountryID", OtherKey="IID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._CountryID = value.IID;
					}
					else
					{
						this._CountryID = default(long);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private long _CountryID;
		
		private long _IsRemoved;
		
		private EntitySet<City> _Cities;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIDChanging(long value);
    partial void OnCountryIDChanged();
    partial void OnIsRemovedChanging(long value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public State()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt NOT NULL")]
		public long CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="BigInt NOT NULL")]
		public long IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="IID", OtherKey="StateID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_Country", ThisKey="CountryID", OtherKey="IID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._CountryID = value.IID;
					}
					else
					{
						this._CountryID = default(long);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _OrderNo;
		
		private long _ChannelID;
		
		private System.DateTime _Date;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Channel> _Channel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnChannelIDChanging(long value);
    partial void OnChannelIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Order()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Channel = default(EntityRef<Channel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelID", DbType="BigInt NOT NULL")]
		public long ChannelID
		{
			get
			{
				return this._ChannelID;
			}
			set
			{
				if ((this._ChannelID != value))
				{
					if (this._Channel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChannelIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelID = value;
					this.SendPropertyChanged("ChannelID");
					this.OnChannelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="IID", OtherKey="OrderID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_Order", Storage="_Channel", ThisKey="ChannelID", OtherKey="IID", IsForeignKey=true)]
		public Channel Channel
		{
			get
			{
				return this._Channel.Entity;
			}
			set
			{
				Channel previousValue = this._Channel.Entity;
				if (((previousValue != value) 
							|| (this._Channel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Channel.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Channel.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ChannelID = value.IID;
					}
					else
					{
						this._ChannelID = default(long);
					}
					this.SendPropertyChanged("Channel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _OrderID;
		
		private long _ItemID;
		
		private decimal _Quantity;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(long value);
    partial void OnItemIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Order = default(EntityRef<Order>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL")]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="BigInt NOT NULL")]
		public long ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(9,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="IID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._OrderID = value.IID;
					}
					else
					{
						this._OrderID = default(long);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_OrderDetail", Storage="_Item", ThisKey="ItemID", OtherKey="IID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._ItemID = value.IID;
					}
					else
					{
						this._ItemID = default(long);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferenceType")]
	public partial class ReferenceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private EntitySet<StockMaster> _StockMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ReferenceType()
		{
			this._StockMasters = new EntitySet<StockMaster>(new Action<StockMaster>(this.attach_StockMasters), new Action<StockMaster>(this.detach_StockMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferenceType_StockMaster", Storage="_StockMasters", ThisKey="IID", OtherKey="ReferenceTypeID")]
		public EntitySet<StockMaster> StockMasters
		{
			get
			{
				return this._StockMasters;
			}
			set
			{
				this._StockMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.ReferenceType = this;
		}
		
		private void detach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.ReferenceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockTransactionType")]
	public partial class StockTransactionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private EntitySet<StockMaster> _StockMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StockTransactionType()
		{
			this._StockMasters = new EntitySet<StockMaster>(new Action<StockMaster>(this.attach_StockMasters), new Action<StockMaster>(this.detach_StockMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockTransactionType_StockMaster", Storage="_StockMasters", ThisKey="IID", OtherKey="StockTransactionTypeID")]
		public EntitySet<StockMaster> StockMasters
		{
			get
			{
				return this._StockMasters;
			}
			set
			{
				this._StockMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.StockTransactionType = this;
		}
		
		private void detach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.StockTransactionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inv_Category")]
	public partial class Inv_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private long _DepartmentID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Inv_Department> _Inv_Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDepartmentIDChanging(long value);
    partial void OnDepartmentIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Inv_Category()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Inv_Department = default(EntityRef<Inv_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="BigInt NOT NULL")]
		public long DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Inv_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Category_Item", Storage="_Items", ThisKey="IID", OtherKey="CategoryID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Department_Inv_Category", Storage="_Inv_Department", ThisKey="DepartmentID", OtherKey="IID", IsForeignKey=true)]
		public Inv_Department Inv_Department
		{
			get
			{
				return this._Inv_Department.Entity;
			}
			set
			{
				Inv_Department previousValue = this._Inv_Department.Entity;
				if (((previousValue != value) 
							|| (this._Inv_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inv_Department.Entity = null;
						previousValue.Inv_Categories.Remove(this);
					}
					this._Inv_Department.Entity = value;
					if ((value != null))
					{
						value.Inv_Categories.Add(this);
						this._DepartmentID = value.IID;
					}
					else
					{
						this._DepartmentID = default(long);
					}
					this.SendPropertyChanged("Inv_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Category = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inv_Department")]
	public partial class Inv_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Inv_Category> _Inv_Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Inv_Department()
		{
			this._Inv_Categories = new EntitySet<Inv_Category>(new Action<Inv_Category>(this.attach_Inv_Categories), new Action<Inv_Category>(this.detach_Inv_Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Department_Inv_Category", Storage="_Inv_Categories", ThisKey="IID", OtherKey="DepartmentID")]
		public EntitySet<Inv_Category> Inv_Categories
		{
			get
			{
				return this._Inv_Categories;
			}
			set
			{
				this._Inv_Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inv_Categories(Inv_Category entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Department = this;
		}
		
		private void detach_Inv_Categories(Inv_Category entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private int _MeasurementUnitID;
		
		private long _CategoryID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<StockDetail> _StockDetails;
		
		private EntityRef<Inv_Category> _Inv_Category;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnMeasurementUnitIDChanging(int value);
    partial void OnMeasurementUnitIDChanged();
    partial void OnCategoryIDChanging(long value);
    partial void OnCategoryIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Item()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._StockDetails = new EntitySet<StockDetail>(new Action<StockDetail>(this.attach_StockDetails), new Action<StockDetail>(this.detach_StockDetails));
			this._Inv_Category = default(EntityRef<Inv_Category>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnitID", DbType="Int NOT NULL")]
		public int MeasurementUnitID
		{
			get
			{
				return this._MeasurementUnitID;
			}
			set
			{
				if ((this._MeasurementUnitID != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasurementUnitIDChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnitID = value;
					this.SendPropertyChanged("MeasurementUnitID");
					this.OnMeasurementUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="BigInt NOT NULL")]
		public long CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Inv_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_OrderDetail", Storage="_OrderDetails", ThisKey="IID", OtherKey="ItemID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StockDetail", Storage="_StockDetails", ThisKey="IID", OtherKey="ItemID")]
		public EntitySet<StockDetail> StockDetails
		{
			get
			{
				return this._StockDetails;
			}
			set
			{
				this._StockDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Category_Item", Storage="_Inv_Category", ThisKey="CategoryID", OtherKey="IID", IsForeignKey=true)]
		public Inv_Category Inv_Category
		{
			get
			{
				return this._Inv_Category.Entity;
			}
			set
			{
				Inv_Category previousValue = this._Inv_Category.Entity;
				if (((previousValue != value) 
							|| (this._Inv_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inv_Category.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Inv_Category.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._CategoryID = value.IID;
					}
					else
					{
						this._CategoryID = default(long);
					}
					this.SendPropertyChanged("Inv_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Item", Storage="_MeasurementUnit", ThisKey="MeasurementUnitID", OtherKey="IID", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._MeasurementUnitID = value.IID;
					}
					else
					{
						this._MeasurementUnitID = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_StockDetails(StockDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_StockDetails(StockDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasurementUnit")]
	public partial class MeasurementUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private string _Unit;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Item> _Items;
		
		private EntitySet<Ins_Item> _Ins_Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public MeasurementUnit()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Ins_Items = new EntitySet<Ins_Item>(new Action<Ins_Item>(this.attach_Ins_Items), new Action<Ins_Item>(this.detach_Ins_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Item", Storage="_Items", ThisKey="IID", OtherKey="MeasurementUnitID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Ins_Item", Storage="_Ins_Items", ThisKey="IID", OtherKey="MeasurementUnitID")]
		public EntitySet<Ins_Item> Ins_Items
		{
			get
			{
				return this._Ins_Items;
			}
			set
			{
				this._Ins_Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
		
		private void attach_Ins_Items(Ins_Item entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_Ins_Items(Ins_Item entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockDetail")]
	public partial class StockDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _StockMasterID;
		
		private string _BatchNo;
		
		private long _ItemID;
		
		private decimal _Quantity;
		
		private decimal _CostPrice;
		
		private decimal _SellPrice;
		
		private decimal _Discount;
		
		private decimal _VAT;
		
		private System.DateTime _ExpiryDate;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private int _IsRemoved;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<StockMaster> _StockMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnStockMasterIDChanging(long value);
    partial void OnStockMasterIDChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnItemIDChanging(long value);
    partial void OnItemIDChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostPriceChanging(decimal value);
    partial void OnCostPriceChanged();
    partial void OnSellPriceChanging(decimal value);
    partial void OnSellPriceChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public StockDetail()
		{
			this._Item = default(EntityRef<Item>);
			this._StockMaster = default(EntityRef<StockMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockMasterID", DbType="BigInt NOT NULL")]
		public long StockMasterID
		{
			get
			{
				return this._StockMasterID;
			}
			set
			{
				if ((this._StockMasterID != value))
				{
					if (this._StockMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockMasterIDChanging(value);
					this.SendPropertyChanging();
					this._StockMasterID = value;
					this.SendPropertyChanged("StockMasterID");
					this.OnStockMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="BigInt NOT NULL")]
		public long ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,3) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPrice", DbType="Decimal(18,3) NOT NULL")]
		public decimal CostPrice
		{
			get
			{
				return this._CostPrice;
			}
			set
			{
				if ((this._CostPrice != value))
				{
					this.OnCostPriceChanging(value);
					this.SendPropertyChanging();
					this._CostPrice = value;
					this.SendPropertyChanged("CostPrice");
					this.OnCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Decimal(18,3) NOT NULL")]
		public decimal SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this.OnSellPriceChanging(value);
					this.SendPropertyChanging();
					this._SellPrice = value;
					this.SendPropertyChanged("SellPrice");
					this.OnSellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,3) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,3) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StockDetail", Storage="_Item", ThisKey="ItemID", OtherKey="IID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.StockDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.StockDetails.Add(this);
						this._ItemID = value.IID;
					}
					else
					{
						this._ItemID = default(long);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockMaster_StockDetail", Storage="_StockMaster", ThisKey="StockMasterID", OtherKey="IID", IsForeignKey=true)]
		public StockMaster StockMaster
		{
			get
			{
				return this._StockMaster.Entity;
			}
			set
			{
				StockMaster previousValue = this._StockMaster.Entity;
				if (((previousValue != value) 
							|| (this._StockMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StockMaster.Entity = null;
						previousValue.StockDetails.Remove(this);
					}
					this._StockMaster.Entity = value;
					if ((value != null))
					{
						value.StockDetails.Add(this);
						this._StockMasterID = value.IID;
					}
					else
					{
						this._StockMasterID = default(long);
					}
					this.SendPropertyChanged("StockMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDailyShifting")]
	public partial class EmployeeDailyShifting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private int _ShiftingID;
		
		private long _EmployeeID;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Shifting> _Shifting;
		
		private EntityRef<HRM_Employee> _HRM_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnShiftingIDChanging(int value);
    partial void OnShiftingIDChanged();
    partial void OnEmployeeIDChanging(long value);
    partial void OnEmployeeIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public EmployeeDailyShifting()
		{
			this._Shifting = default(EntityRef<Shifting>);
			this._HRM_Employee = default(EntityRef<HRM_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftingID", DbType="Int NOT NULL")]
		public int ShiftingID
		{
			get
			{
				return this._ShiftingID;
			}
			set
			{
				if ((this._ShiftingID != value))
				{
					if (this._Shifting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftingIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftingID = value;
					this.SendPropertyChanged("ShiftingID");
					this.OnShiftingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="BigInt NOT NULL")]
		public long EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._HRM_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shifting_EmployeeDailyShifting", Storage="_Shifting", ThisKey="ShiftingID", OtherKey="IID", IsForeignKey=true)]
		public Shifting Shifting
		{
			get
			{
				return this._Shifting.Entity;
			}
			set
			{
				Shifting previousValue = this._Shifting.Entity;
				if (((previousValue != value) 
							|| (this._Shifting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shifting.Entity = null;
						previousValue.EmployeeDailyShiftings.Remove(this);
					}
					this._Shifting.Entity = value;
					if ((value != null))
					{
						value.EmployeeDailyShiftings.Add(this);
						this._ShiftingID = value.IID;
					}
					else
					{
						this._ShiftingID = default(int);
					}
					this.SendPropertyChanged("Shifting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HRM_Employee_EmployeeDailyShifting", Storage="_HRM_Employee", ThisKey="EmployeeID", OtherKey="IID", IsForeignKey=true)]
		public HRM_Employee HRM_Employee
		{
			get
			{
				return this._HRM_Employee.Entity;
			}
			set
			{
				HRM_Employee previousValue = this._HRM_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HRM_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HRM_Employee.Entity = null;
						previousValue.EmployeeDailyShiftings.Remove(this);
					}
					this._HRM_Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeDailyShiftings.Add(this);
						this._EmployeeID = value.IID;
					}
					else
					{
						this._EmployeeID = default(long);
					}
					this.SendPropertyChanged("HRM_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shifting")]
	public partial class Shifting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private EntitySet<EmployeeDailyShifting> _EmployeeDailyShiftings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    #endregion
		
		public Shifting()
		{
			this._EmployeeDailyShiftings = new EntitySet<EmployeeDailyShifting>(new Action<EmployeeDailyShifting>(this.attach_EmployeeDailyShiftings), new Action<EmployeeDailyShifting>(this.detach_EmployeeDailyShiftings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shifting_EmployeeDailyShifting", Storage="_EmployeeDailyShiftings", ThisKey="IID", OtherKey="ShiftingID")]
		public EntitySet<EmployeeDailyShifting> EmployeeDailyShiftings
		{
			get
			{
				return this._EmployeeDailyShiftings;
			}
			set
			{
				this._EmployeeDailyShiftings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeDailyShiftings(EmployeeDailyShifting entity)
		{
			this.SendPropertyChanging();
			entity.Shifting = this;
		}
		
		private void detach_EmployeeDailyShiftings(EmployeeDailyShifting entity)
		{
			this.SendPropertyChanging();
			entity.Shifting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HRM_Employee")]
	public partial class HRM_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _EmployeeCode;
		
		private long _DesignationID;
		
		private long _DepartmentID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private string _MotherName;
		
		private string _PresentAddress;
		
		private string _PermanentAddress;
		
		private System.DateTime _DateOfBirth;
		
		private string _PalceOfBirth;
		
		private string _NationalIDNo;
		
		private string _PassportNo;
		
		private string _Nationality;
		
		private int _Religion;
		
		private System.DateTime _JoinDate;
		
		private int _Sex;
		
		private int _MaritalStatus;
		
		private bool _IsRegular;
		
		private string _BloodGroup;
		
		private string _PhoneOffice;
		
		private string _PhoneResidence;
		
		private string _CellNo;
		
		private string _Email;
		
		private string _Notes;
		
		private long _ReportsTo;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<EmployeeDailyShifting> _EmployeeDailyShiftings;
		
		private EntitySet<StockMaster> _StockMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDesignationIDChanging(long value);
    partial void OnDesignationIDChanged();
    partial void OnDepartmentIDChanging(long value);
    partial void OnDepartmentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnMotherNameChanging(string value);
    partial void OnMotherNameChanged();
    partial void OnPresentAddressChanging(string value);
    partial void OnPresentAddressChanged();
    partial void OnPermanentAddressChanging(string value);
    partial void OnPermanentAddressChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnPalceOfBirthChanging(string value);
    partial void OnPalceOfBirthChanged();
    partial void OnNationalIDNoChanging(string value);
    partial void OnNationalIDNoChanged();
    partial void OnPassportNoChanging(string value);
    partial void OnPassportNoChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnReligionChanging(int value);
    partial void OnReligionChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    partial void OnMaritalStatusChanging(int value);
    partial void OnMaritalStatusChanged();
    partial void OnIsRegularChanging(bool value);
    partial void OnIsRegularChanged();
    partial void OnBloodGroupChanging(string value);
    partial void OnBloodGroupChanged();
    partial void OnPhoneOfficeChanging(string value);
    partial void OnPhoneOfficeChanged();
    partial void OnPhoneResidenceChanging(string value);
    partial void OnPhoneResidenceChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReportsToChanging(long value);
    partial void OnReportsToChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public HRM_Employee()
		{
			this._EmployeeDailyShiftings = new EntitySet<EmployeeDailyShifting>(new Action<EmployeeDailyShifting>(this.attach_EmployeeDailyShiftings), new Action<EmployeeDailyShifting>(this.detach_EmployeeDailyShiftings));
			this._StockMasters = new EntitySet<StockMaster>(new Action<StockMaster>(this.attach_StockMasters), new Action<StockMaster>(this.detach_StockMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", DbType="BigInt NOT NULL")]
		public long DesignationID
		{
			get
			{
				return this._DesignationID;
			}
			set
			{
				if ((this._DesignationID != value))
				{
					this.OnDesignationIDChanging(value);
					this.SendPropertyChanging();
					this._DesignationID = value;
					this.SendPropertyChanged("DesignationID");
					this.OnDesignationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="BigInt NOT NULL")]
		public long DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MotherName
		{
			get
			{
				return this._MotherName;
			}
			set
			{
				if ((this._MotherName != value))
				{
					this.OnMotherNameChanging(value);
					this.SendPropertyChanging();
					this._MotherName = value;
					this.SendPropertyChanged("MotherName");
					this.OnMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentAddress", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string PresentAddress
		{
			get
			{
				return this._PresentAddress;
			}
			set
			{
				if ((this._PresentAddress != value))
				{
					this.OnPresentAddressChanging(value);
					this.SendPropertyChanging();
					this._PresentAddress = value;
					this.SendPropertyChanged("PresentAddress");
					this.OnPresentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentAddress", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string PermanentAddress
		{
			get
			{
				return this._PermanentAddress;
			}
			set
			{
				if ((this._PermanentAddress != value))
				{
					this.OnPermanentAddressChanging(value);
					this.SendPropertyChanging();
					this._PermanentAddress = value;
					this.SendPropertyChanged("PermanentAddress");
					this.OnPermanentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PalceOfBirth", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PalceOfBirth
		{
			get
			{
				return this._PalceOfBirth;
			}
			set
			{
				if ((this._PalceOfBirth != value))
				{
					this.OnPalceOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PalceOfBirth = value;
					this.SendPropertyChanged("PalceOfBirth");
					this.OnPalceOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalIDNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NationalIDNo
		{
			get
			{
				return this._NationalIDNo;
			}
			set
			{
				if ((this._NationalIDNo != value))
				{
					this.OnNationalIDNoChanging(value);
					this.SendPropertyChanging();
					this._NationalIDNo = value;
					this.SendPropertyChanged("NationalIDNo");
					this.OnNationalIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PassportNo
		{
			get
			{
				return this._PassportNo;
			}
			set
			{
				if ((this._PassportNo != value))
				{
					this.OnPassportNoChanging(value);
					this.SendPropertyChanging();
					this._PassportNo = value;
					this.SendPropertyChanged("PassportNo");
					this.OnPassportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="Int NOT NULL")]
		public int Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="Int NOT NULL")]
		public int MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRegular", DbType="Bit NOT NULL")]
		public bool IsRegular
		{
			get
			{
				return this._IsRegular;
			}
			set
			{
				if ((this._IsRegular != value))
				{
					this.OnIsRegularChanging(value);
					this.SendPropertyChanging();
					this._IsRegular = value;
					this.SendPropertyChanged("IsRegular");
					this.OnIsRegularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this.OnBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._BloodGroup = value;
					this.SendPropertyChanged("BloodGroup");
					this.OnBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneOffice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneOffice
		{
			get
			{
				return this._PhoneOffice;
			}
			set
			{
				if ((this._PhoneOffice != value))
				{
					this.OnPhoneOfficeChanging(value);
					this.SendPropertyChanging();
					this._PhoneOffice = value;
					this.SendPropertyChanged("PhoneOffice");
					this.OnPhoneOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneResidence", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneResidence
		{
			get
			{
				return this._PhoneResidence;
			}
			set
			{
				if ((this._PhoneResidence != value))
				{
					this.OnPhoneResidenceChanging(value);
					this.SendPropertyChanging();
					this._PhoneResidence = value;
					this.SendPropertyChanged("PhoneResidence");
					this.OnPhoneResidenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportsTo", DbType="BigInt NOT NULL")]
		public long ReportsTo
		{
			get
			{
				return this._ReportsTo;
			}
			set
			{
				if ((this._ReportsTo != value))
				{
					this.OnReportsToChanging(value);
					this.SendPropertyChanging();
					this._ReportsTo = value;
					this.SendPropertyChanged("ReportsTo");
					this.OnReportsToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HRM_Employee_EmployeeDailyShifting", Storage="_EmployeeDailyShiftings", ThisKey="IID", OtherKey="EmployeeID")]
		public EntitySet<EmployeeDailyShifting> EmployeeDailyShiftings
		{
			get
			{
				return this._EmployeeDailyShiftings;
			}
			set
			{
				this._EmployeeDailyShiftings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HRM_Employee_StockMaster", Storage="_StockMasters", ThisKey="IID", OtherKey="PurchaseOrSaleBy")]
		public EntitySet<StockMaster> StockMasters
		{
			get
			{
				return this._StockMasters;
			}
			set
			{
				this._StockMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeDailyShiftings(EmployeeDailyShifting entity)
		{
			this.SendPropertyChanging();
			entity.HRM_Employee = this;
		}
		
		private void detach_EmployeeDailyShiftings(EmployeeDailyShifting entity)
		{
			this.SendPropertyChanging();
			entity.HRM_Employee = null;
		}
		
		private void attach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.HRM_Employee = this;
		}
		
		private void detach_StockMasters(StockMaster entity)
		{
			this.SendPropertyChanging();
			entity.HRM_Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockMaster")]
	public partial class StockMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private int _StockTransactionTypeID;
		
		private int _ReferenceTypeID;
		
		private long _ReferenceID;
		
		private long _PurchaseOrSaleBy;
		
		private System.DateTime _Date;
		
		private string _TransactionNo;
		
		private string _BillNo;
		
		private decimal _TotalDiscount;
		
		private decimal _SpecialDiscount;
		
		private decimal _TotalVAT;
		
		private decimal _TotalAmount;
		
		private decimal _TotalPaidAmount;
		
		private decimal _TotalDueAmount;
		
		private bool _Hold;
		
		private long _StoreID;
		
		private int _FinancialYearID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private int _IsRemoved;
		
		private EntitySet<StockDetail> _StockDetails;
		
		private EntityRef<HRM_Employee> _HRM_Employee;
		
		private EntityRef<ReferenceType> _ReferenceType;
		
		private EntityRef<StockTransactionType> _StockTransactionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnStockTransactionTypeIDChanging(int value);
    partial void OnStockTransactionTypeIDChanged();
    partial void OnReferenceTypeIDChanging(int value);
    partial void OnReferenceTypeIDChanged();
    partial void OnReferenceIDChanging(long value);
    partial void OnReferenceIDChanged();
    partial void OnPurchaseOrSaleByChanging(long value);
    partial void OnPurchaseOrSaleByChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnSpecialDiscountChanging(decimal value);
    partial void OnSpecialDiscountChanged();
    partial void OnTotalVATChanging(decimal value);
    partial void OnTotalVATChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnTotalPaidAmountChanging(decimal value);
    partial void OnTotalPaidAmountChanged();
    partial void OnTotalDueAmountChanging(decimal value);
    partial void OnTotalDueAmountChanged();
    partial void OnHoldChanging(bool value);
    partial void OnHoldChanged();
    partial void OnStoreIDChanging(long value);
    partial void OnStoreIDChanged();
    partial void OnFinancialYearIDChanging(int value);
    partial void OnFinancialYearIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public StockMaster()
		{
			this._StockDetails = new EntitySet<StockDetail>(new Action<StockDetail>(this.attach_StockDetails), new Action<StockDetail>(this.detach_StockDetails));
			this._HRM_Employee = default(EntityRef<HRM_Employee>);
			this._ReferenceType = default(EntityRef<ReferenceType>);
			this._StockTransactionType = default(EntityRef<StockTransactionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockTransactionTypeID", DbType="Int NOT NULL")]
		public int StockTransactionTypeID
		{
			get
			{
				return this._StockTransactionTypeID;
			}
			set
			{
				if ((this._StockTransactionTypeID != value))
				{
					if (this._StockTransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockTransactionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._StockTransactionTypeID = value;
					this.SendPropertyChanged("StockTransactionTypeID");
					this.OnStockTransactionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceTypeID", DbType="Int NOT NULL")]
		public int ReferenceTypeID
		{
			get
			{
				return this._ReferenceTypeID;
			}
			set
			{
				if ((this._ReferenceTypeID != value))
				{
					if (this._ReferenceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceTypeID = value;
					this.SendPropertyChanged("ReferenceTypeID");
					this.OnReferenceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="BigInt NOT NULL")]
		public long ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrSaleBy", DbType="BigInt NOT NULL")]
		public long PurchaseOrSaleBy
		{
			get
			{
				return this._PurchaseOrSaleBy;
			}
			set
			{
				if ((this._PurchaseOrSaleBy != value))
				{
					if (this._HRM_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrSaleByChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrSaleBy = value;
					this.SendPropertyChanged("PurchaseOrSaleBy");
					this.OnPurchaseOrSaleByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionNo
		{
			get
			{
				return this._TransactionNo;
			}
			set
			{
				if ((this._TransactionNo != value))
				{
					this.OnTransactionNoChanging(value);
					this.SendPropertyChanging();
					this._TransactionNo = value;
					this.SendPropertyChanged("TransactionNo");
					this.OnTransactionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialDiscount", DbType="Decimal(18,3) NOT NULL")]
		public decimal SpecialDiscount
		{
			get
			{
				return this._SpecialDiscount;
			}
			set
			{
				if ((this._SpecialDiscount != value))
				{
					this.OnSpecialDiscountChanging(value);
					this.SendPropertyChanging();
					this._SpecialDiscount = value;
					this.SendPropertyChanged("SpecialDiscount");
					this.OnSpecialDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVAT", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalVAT
		{
			get
			{
				return this._TotalVAT;
			}
			set
			{
				if ((this._TotalVAT != value))
				{
					this.OnTotalVATChanging(value);
					this.SendPropertyChanging();
					this._TotalVAT = value;
					this.SendPropertyChanged("TotalVAT");
					this.OnTotalVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaidAmount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalPaidAmount
		{
			get
			{
				return this._TotalPaidAmount;
			}
			set
			{
				if ((this._TotalPaidAmount != value))
				{
					this.OnTotalPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPaidAmount = value;
					this.SendPropertyChanged("TotalPaidAmount");
					this.OnTotalPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDueAmount", DbType="Decimal(18,3) NOT NULL")]
		public decimal TotalDueAmount
		{
			get
			{
				return this._TotalDueAmount;
			}
			set
			{
				if ((this._TotalDueAmount != value))
				{
					this.OnTotalDueAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDueAmount = value;
					this.SendPropertyChanged("TotalDueAmount");
					this.OnTotalDueAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hold", DbType="Bit NOT NULL")]
		public bool Hold
		{
			get
			{
				return this._Hold;
			}
			set
			{
				if ((this._Hold != value))
				{
					this.OnHoldChanging(value);
					this.SendPropertyChanging();
					this._Hold = value;
					this.SendPropertyChanged("Hold");
					this.OnHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="BigInt NOT NULL")]
		public long StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialYearID", DbType="Int NOT NULL")]
		public int FinancialYearID
		{
			get
			{
				return this._FinancialYearID;
			}
			set
			{
				if ((this._FinancialYearID != value))
				{
					this.OnFinancialYearIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialYearID = value;
					this.SendPropertyChanged("FinancialYearID");
					this.OnFinancialYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockMaster_StockDetail", Storage="_StockDetails", ThisKey="IID", OtherKey="StockMasterID")]
		public EntitySet<StockDetail> StockDetails
		{
			get
			{
				return this._StockDetails;
			}
			set
			{
				this._StockDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HRM_Employee_StockMaster", Storage="_HRM_Employee", ThisKey="PurchaseOrSaleBy", OtherKey="IID", IsForeignKey=true)]
		public HRM_Employee HRM_Employee
		{
			get
			{
				return this._HRM_Employee.Entity;
			}
			set
			{
				HRM_Employee previousValue = this._HRM_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HRM_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HRM_Employee.Entity = null;
						previousValue.StockMasters.Remove(this);
					}
					this._HRM_Employee.Entity = value;
					if ((value != null))
					{
						value.StockMasters.Add(this);
						this._PurchaseOrSaleBy = value.IID;
					}
					else
					{
						this._PurchaseOrSaleBy = default(long);
					}
					this.SendPropertyChanged("HRM_Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferenceType_StockMaster", Storage="_ReferenceType", ThisKey="ReferenceTypeID", OtherKey="IID", IsForeignKey=true)]
		public ReferenceType ReferenceType
		{
			get
			{
				return this._ReferenceType.Entity;
			}
			set
			{
				ReferenceType previousValue = this._ReferenceType.Entity;
				if (((previousValue != value) 
							|| (this._ReferenceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReferenceType.Entity = null;
						previousValue.StockMasters.Remove(this);
					}
					this._ReferenceType.Entity = value;
					if ((value != null))
					{
						value.StockMasters.Add(this);
						this._ReferenceTypeID = value.IID;
					}
					else
					{
						this._ReferenceTypeID = default(int);
					}
					this.SendPropertyChanged("ReferenceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StockTransactionType_StockMaster", Storage="_StockTransactionType", ThisKey="StockTransactionTypeID", OtherKey="IID", IsForeignKey=true)]
		public StockTransactionType StockTransactionType
		{
			get
			{
				return this._StockTransactionType.Entity;
			}
			set
			{
				StockTransactionType previousValue = this._StockTransactionType.Entity;
				if (((previousValue != value) 
							|| (this._StockTransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StockTransactionType.Entity = null;
						previousValue.StockMasters.Remove(this);
					}
					this._StockTransactionType.Entity = value;
					if ((value != null))
					{
						value.StockMasters.Add(this);
						this._StockTransactionTypeID = value.IID;
					}
					else
					{
						this._StockTransactionTypeID = default(int);
					}
					this.SendPropertyChanged("StockTransactionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockDetails(StockDetail entity)
		{
			this.SendPropertyChanging();
			entity.StockMaster = this;
		}
		
		private void detach_StockDetails(StockDetail entity)
		{
			this.SendPropertyChanging();
			entity.StockMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_Class")]
	public partial class Acc_Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private int _AccountNature;
		
		private EntitySet<Acc_ChartOfAccount> _Acc_ChartOfAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccountNatureChanging(int value);
    partial void OnAccountNatureChanged();
    #endregion
		
		public Acc_Class()
		{
			this._Acc_ChartOfAccounts = new EntitySet<Acc_ChartOfAccount>(new Action<Acc_ChartOfAccount>(this.attach_Acc_ChartOfAccounts), new Action<Acc_ChartOfAccount>(this.detach_Acc_ChartOfAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNature", DbType="Int NOT NULL")]
		public int AccountNature
		{
			get
			{
				return this._AccountNature;
			}
			set
			{
				if ((this._AccountNature != value))
				{
					this.OnAccountNatureChanging(value);
					this.SendPropertyChanging();
					this._AccountNature = value;
					this.SendPropertyChanged("AccountNature");
					this.OnAccountNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_Class_Acc_ChartOfAccount", Storage="_Acc_ChartOfAccounts", ThisKey="IID", OtherKey="Gparent")]
		public EntitySet<Acc_ChartOfAccount> Acc_ChartOfAccounts
		{
			get
			{
				return this._Acc_ChartOfAccounts;
			}
			set
			{
				this._Acc_ChartOfAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_ChartOfAccounts(Acc_ChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_Class = this;
		}
		
		private void detach_Acc_ChartOfAccounts(Acc_ChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChartOfAccountSupplier")]
	public partial class Acc_ChartOfAccountSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChartOfAccountID;
		
		private long _SupplierID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Acc_ChartOfAccount> _Acc_ChartOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChartOfAccountIDChanging(long value);
    partial void OnChartOfAccountIDChanged();
    partial void OnSupplierIDChanging(long value);
    partial void OnSupplierIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Acc_ChartOfAccountSupplier()
		{
			this._Supplier = default(EntityRef<Supplier>);
			this._Acc_ChartOfAccount = default(EntityRef<Acc_ChartOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartOfAccountID", DbType="BigInt NOT NULL")]
		public long ChartOfAccountID
		{
			get
			{
				return this._ChartOfAccountID;
			}
			set
			{
				if ((this._ChartOfAccountID != value))
				{
					if (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChartOfAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ChartOfAccountID = value;
					this.SendPropertyChanged("ChartOfAccountID");
					this.OnChartOfAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt NOT NULL")]
		public long SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Acc_ChartOfAccountSupplier", Storage="_Supplier", ThisKey="SupplierID", OtherKey="IID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Acc_ChartOfAccountSuppliers.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountSuppliers.Add(this);
						this._SupplierID = value.IID;
					}
					else
					{
						this._SupplierID = default(long);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountSupplier", Storage="_Acc_ChartOfAccount", ThisKey="ChartOfAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChartOfAccount Acc_ChartOfAccount
		{
			get
			{
				return this._Acc_ChartOfAccount.Entity;
			}
			set
			{
				Acc_ChartOfAccount previousValue = this._Acc_ChartOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChartOfAccount.Entity = null;
						previousValue.Acc_ChartOfAccountSuppliers.Remove(this);
					}
					this._Acc_ChartOfAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountSuppliers.Add(this);
						this._ChartOfAccountID = value.IID;
					}
					else
					{
						this._ChartOfAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_ChartOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChartOfAccountCustomer")]
	public partial class Acc_ChartOfAccountCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChartOfAccountID;
		
		private long _CustomerID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Acc_ChartOfAccount> _Acc_ChartOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChartOfAccountIDChanging(long value);
    partial void OnChartOfAccountIDChanged();
    partial void OnCustomerIDChanging(long value);
    partial void OnCustomerIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Acc_ChartOfAccountCustomer()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Acc_ChartOfAccount = default(EntityRef<Acc_ChartOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartOfAccountID", DbType="BigInt NOT NULL")]
		public long ChartOfAccountID
		{
			get
			{
				return this._ChartOfAccountID;
			}
			set
			{
				if ((this._ChartOfAccountID != value))
				{
					if (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChartOfAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ChartOfAccountID = value;
					this.SendPropertyChanged("ChartOfAccountID");
					this.OnChartOfAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt NOT NULL")]
		public long CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Acc_ChartOfAccountCustomer", Storage="_Customer", ThisKey="CustomerID", OtherKey="IID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Acc_ChartOfAccountCustomers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountCustomers.Add(this);
						this._CustomerID = value.IID;
					}
					else
					{
						this._CustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountCustomer", Storage="_Acc_ChartOfAccount", ThisKey="ChartOfAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChartOfAccount Acc_ChartOfAccount
		{
			get
			{
				return this._Acc_ChartOfAccount.Entity;
			}
			set
			{
				Acc_ChartOfAccount previousValue = this._Acc_ChartOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChartOfAccount.Entity = null;
						previousValue.Acc_ChartOfAccountCustomers.Remove(this);
					}
					this._Acc_ChartOfAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountCustomers.Add(this);
						this._ChartOfAccountID = value.IID;
					}
					else
					{
						this._ChartOfAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_ChartOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemRole")]
	public partial class SystemRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _RoleName;
		
		private int _IsRemoved;
		
		private EntitySet<PagesOnRole> _PagesOnRoles;
		
		private EntitySet<SystemUser> _SystemUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public SystemRole()
		{
			this._PagesOnRoles = new EntitySet<PagesOnRole>(new Action<PagesOnRole>(this.attach_PagesOnRoles), new Action<PagesOnRole>(this.detach_PagesOnRoles));
			this._SystemUsers = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers), new Action<SystemUser>(this.detach_SystemUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_PagesOnRole", Storage="_PagesOnRoles", ThisKey="IID", OtherKey="RoleID")]
		public EntitySet<PagesOnRole> PagesOnRoles
		{
			get
			{
				return this._PagesOnRoles;
			}
			set
			{
				this._PagesOnRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemUser", Storage="_SystemUsers", ThisKey="IID", OtherKey="RoleID")]
		public EntitySet<SystemUser> SystemUsers
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PagesOnRoles(PagesOnRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_PagesOnRoles(PagesOnRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
		
		private void attach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = this;
		}
		
		private void detach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PagesOnRole")]
	public partial class PagesOnRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _PageID;
		
		private long _RoleID;
		
		private int _IsRemoved;
		
		private EntityRef<SystemRole> _SystemRole;
		
		private EntityRef<SystemPage> _SystemPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnPageIDChanging(long value);
    partial void OnPageIDChanged();
    partial void OnRoleIDChanging(long value);
    partial void OnRoleIDChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public PagesOnRole()
		{
			this._SystemRole = default(EntityRef<SystemRole>);
			this._SystemPage = default(EntityRef<SystemPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="BigInt NOT NULL")]
		public long PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._SystemPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="BigInt NOT NULL")]
		public long RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_PagesOnRole", Storage="_SystemRole", ThisKey="RoleID", OtherKey="IID", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.PagesOnRoles.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.PagesOnRoles.Add(this);
						this._RoleID = value.IID;
					}
					else
					{
						this._RoleID = default(long);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_PagesOnRole", Storage="_SystemPage", ThisKey="PageID", OtherKey="IID", IsForeignKey=true)]
		public SystemPage SystemPage
		{
			get
			{
				return this._SystemPage.Entity;
			}
			set
			{
				SystemPage previousValue = this._SystemPage.Entity;
				if (((previousValue != value) 
							|| (this._SystemPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPage.Entity = null;
						previousValue.PagesOnRoles.Remove(this);
					}
					this._SystemPage.Entity = value;
					if ((value != null))
					{
						value.PagesOnRoles.Add(this);
						this._PageID = value.IID;
					}
					else
					{
						this._PageID = default(long);
					}
					this.SendPropertyChanged("SystemPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PagesOnUser")]
	public partial class PagesOnUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _PageID;
		
		private long _UserID;
		
		private int _IsRemoved;
		
		private EntityRef<SystemPage> _SystemPage;
		
		private EntityRef<SystemUser> _SystemUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnPageIDChanging(long value);
    partial void OnPageIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public PagesOnUser()
		{
			this._SystemPage = default(EntityRef<SystemPage>);
			this._SystemUser = default(EntityRef<SystemUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="BigInt NOT NULL")]
		public long PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._SystemPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_PagesOnUser", Storage="_SystemPage", ThisKey="PageID", OtherKey="IID", IsForeignKey=true)]
		public SystemPage SystemPage
		{
			get
			{
				return this._SystemPage.Entity;
			}
			set
			{
				SystemPage previousValue = this._SystemPage.Entity;
				if (((previousValue != value) 
							|| (this._SystemPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemPage.Entity = null;
						previousValue.PagesOnUsers.Remove(this);
					}
					this._SystemPage.Entity = value;
					if ((value != null))
					{
						value.PagesOnUsers.Add(this);
						this._PageID = value.IID;
					}
					else
					{
						this._PageID = default(long);
					}
					this.SendPropertyChanged("SystemPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_PagesOnUser", Storage="_SystemUser", ThisKey="UserID", OtherKey="IID", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.PagesOnUsers.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.PagesOnUsers.Add(this);
						this._UserID = value.IID;
					}
					else
					{
						this._UserID = default(long);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPage")]
	public partial class SystemPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _PageName;
		
		private string _Url;
		
		private int _IsRemoved;
		
		private long _SystemModuleID;
		
		private EntitySet<PagesOnRole> _PagesOnRoles;
		
		private EntitySet<PagesOnUser> _PagesOnUsers;
		
		private EntityRef<SystemModule> _SystemModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnSystemModuleIDChanging(long value);
    partial void OnSystemModuleIDChanged();
    #endregion
		
		public SystemPage()
		{
			this._PagesOnRoles = new EntitySet<PagesOnRole>(new Action<PagesOnRole>(this.attach_PagesOnRoles), new Action<PagesOnRole>(this.detach_PagesOnRoles));
			this._PagesOnUsers = new EntitySet<PagesOnUser>(new Action<PagesOnUser>(this.attach_PagesOnUsers), new Action<PagesOnUser>(this.detach_PagesOnUsers));
			this._SystemModule = default(EntityRef<SystemModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemModuleID", DbType="BigInt NOT NULL")]
		public long SystemModuleID
		{
			get
			{
				return this._SystemModuleID;
			}
			set
			{
				if ((this._SystemModuleID != value))
				{
					if (this._SystemModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemModuleIDChanging(value);
					this.SendPropertyChanging();
					this._SystemModuleID = value;
					this.SendPropertyChanged("SystemModuleID");
					this.OnSystemModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_PagesOnRole", Storage="_PagesOnRoles", ThisKey="IID", OtherKey="PageID")]
		public EntitySet<PagesOnRole> PagesOnRoles
		{
			get
			{
				return this._PagesOnRoles;
			}
			set
			{
				this._PagesOnRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPage_PagesOnUser", Storage="_PagesOnUsers", ThisKey="IID", OtherKey="PageID")]
		public EntitySet<PagesOnUser> PagesOnUsers
		{
			get
			{
				return this._PagesOnUsers;
			}
			set
			{
				this._PagesOnUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemModule_SystemPage", Storage="_SystemModule", ThisKey="SystemModuleID", OtherKey="IID", IsForeignKey=true)]
		public SystemModule SystemModule
		{
			get
			{
				return this._SystemModule.Entity;
			}
			set
			{
				SystemModule previousValue = this._SystemModule.Entity;
				if (((previousValue != value) 
							|| (this._SystemModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemModule.Entity = null;
						previousValue.SystemPages.Remove(this);
					}
					this._SystemModule.Entity = value;
					if ((value != null))
					{
						value.SystemPages.Add(this);
						this._SystemModuleID = value.IID;
					}
					else
					{
						this._SystemModuleID = default(long);
					}
					this.SendPropertyChanged("SystemModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PagesOnRoles(PagesOnRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = this;
		}
		
		private void detach_PagesOnRoles(PagesOnRole entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = null;
		}
		
		private void attach_PagesOnUsers(PagesOnUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = this;
		}
		
		private void detach_PagesOnUsers(PagesOnUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemModule")]
	public partial class SystemModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private EntitySet<SystemPage> _SystemPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SystemModule()
		{
			this._SystemPages = new EntitySet<SystemPage>(new Action<SystemPage>(this.attach_SystemPages), new Action<SystemPage>(this.detach_SystemPages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemModule_SystemPage", Storage="_SystemPages", ThisKey="IID", OtherKey="SystemModuleID")]
		public EntitySet<SystemPage> SystemPages
		{
			get
			{
				return this._SystemPages;
			}
			set
			{
				this._SystemPages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemPages(SystemPage entity)
		{
			this.SendPropertyChanging();
			entity.SystemModule = this;
		}
		
		private void detach_SystemPages(SystemPage entity)
		{
			this.SendPropertyChanging();
			entity.SystemModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _ShortName;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<State> _States;
		
		private EntitySet<TicketSale> _TicketSales;
		
		private EntitySet<Inv_Master> _Inv_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Country()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._TicketSales = new EntitySet<TicketSale>(new Action<TicketSale>(this.attach_TicketSales), new Action<TicketSale>(this.detach_TicketSales));
			this._Inv_Masters = new EntitySet<Inv_Master>(new Action<Inv_Master>(this.attach_Inv_Masters), new Action<Inv_Master>(this.detach_Inv_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_City", Storage="_Cities", ThisKey="IID", OtherKey="CountryID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_States", ThisKey="IID", OtherKey="CountryID")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_TicketSale", Storage="_TicketSales", ThisKey="IID", OtherKey="DestinationCountry")]
		public EntitySet<TicketSale> TicketSales
		{
			get
			{
				return this._TicketSales;
			}
			set
			{
				this._TicketSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Inv_Master", Storage="_Inv_Masters", ThisKey="IID", OtherKey="CountryID")]
		public EntitySet<Inv_Master> Inv_Masters
		{
			get
			{
				return this._Inv_Masters;
			}
			set
			{
				this._Inv_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialYear")]
	public partial class FinancialYear : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private int _FinancialYear1;
		
		private int _IsRemoved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnFinancialYear1Changing(int value);
    partial void OnFinancialYear1Changed();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public FinancialYear()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FinancialYear", Storage="_FinancialYear1", DbType="Int NOT NULL")]
		public int FinancialYear1
		{
			get
			{
				return this._FinancialYear1;
			}
			set
			{
				if ((this._FinancialYear1 != value))
				{
					this.OnFinancialYear1Changing(value);
					this.SendPropertyChanging();
					this._FinancialYear1 = value;
					this.SendPropertyChanged("FinancialYear1");
					this.OnFinancialYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchInfo")]
	public partial class BranchInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private int _CompanyID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private long _CityID;
		
		private long _CountryID;
		
		private string _Zip;
		
		private string _Website;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<SystemUser> _SystemUsers;
		
		private EntitySet<TicketSale> _TicketSales;
		
		private EntityRef<CompanyInfo> _CompanyInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCityIDChanging(long value);
    partial void OnCityIDChanged();
    partial void OnCountryIDChanging(long value);
    partial void OnCountryIDChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public BranchInfo()
		{
			this._SystemUsers = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers), new Action<SystemUser>(this.detach_SystemUsers));
			this._TicketSales = new EntitySet<TicketSale>(new Action<TicketSale>(this.attach_TicketSales), new Action<TicketSale>(this.detach_TicketSales));
			this._CompanyInfo = default(EntityRef<CompanyInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._CompanyInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="BigInt NOT NULL")]
		public long CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt NOT NULL")]
		public long CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchInfo_SystemUser", Storage="_SystemUsers", ThisKey="IID", OtherKey="BranchID")]
		public EntitySet<SystemUser> SystemUsers
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchInfo_TicketSale", Storage="_TicketSales", ThisKey="IID", OtherKey="BranchID")]
		public EntitySet<TicketSale> TicketSales
		{
			get
			{
				return this._TicketSales;
			}
			set
			{
				this._TicketSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyInfo_BranchInfo", Storage="_CompanyInfo", ThisKey="CompanyID", OtherKey="IID", IsForeignKey=true)]
		public CompanyInfo CompanyInfo
		{
			get
			{
				return this._CompanyInfo.Entity;
			}
			set
			{
				CompanyInfo previousValue = this._CompanyInfo.Entity;
				if (((previousValue != value) 
							|| (this._CompanyInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyInfo.Entity = null;
						previousValue.BranchInfos.Remove(this);
					}
					this._CompanyInfo.Entity = value;
					if ((value != null))
					{
						value.BranchInfos.Add(this);
						this._CompanyID = value.IID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("CompanyInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.BranchInfo = this;
		}
		
		private void detach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.BranchInfo = null;
		}
		
		private void attach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.BranchInfo = this;
		}
		
		private void detach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.BranchInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUser")]
	public partial class SystemUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private int _IsRemoved;
		
		private long _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private int _UserTypeID;
		
		private string _ProviderKey;
		
		private string _Roles;
		
		private bool _Status;
		
		private long _RoleID;
		
		private bool _IsRoleBased;
		
		private string _Password;
		
		private int _BranchID;
		
		private EntitySet<PagesOnUser> _PagesOnUsers;
		
		private EntityRef<BranchInfo> _BranchInfo;
		
		private EntityRef<SystemRole> _SystemRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnUpdatedByChanging(long value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnRolesChanging(string value);
    partial void OnRolesChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnRoleIDChanging(long value);
    partial void OnRoleIDChanged();
    partial void OnIsRoleBasedChanging(bool value);
    partial void OnIsRoleBasedChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public SystemUser()
		{
			this._PagesOnUsers = new EntitySet<PagesOnUser>(new Action<PagesOnUser>(this.attach_PagesOnUsers), new Action<PagesOnUser>(this.detach_PagesOnUsers));
			this._BranchInfo = default(EntityRef<BranchInfo>);
			this._SystemRole = default(EntityRef<SystemRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="BigInt NOT NULL")]
		public long UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int NOT NULL")]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="NVarChar(50)")]
		public string Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				if ((this._Roles != value))
				{
					this.OnRolesChanging(value);
					this.SendPropertyChanging();
					this._Roles = value;
					this.SendPropertyChanged("Roles");
					this.OnRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="BigInt NOT NULL")]
		public long RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._SystemRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRoleBased", DbType="Bit NOT NULL")]
		public bool IsRoleBased
		{
			get
			{
				return this._IsRoleBased;
			}
			set
			{
				if ((this._IsRoleBased != value))
				{
					this.OnIsRoleBasedChanging(value);
					this.SendPropertyChanging();
					this._IsRoleBased = value;
					this.SendPropertyChanged("IsRoleBased");
					this.OnIsRoleBasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(3000) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._BranchInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_PagesOnUser", Storage="_PagesOnUsers", ThisKey="IID", OtherKey="UserID")]
		public EntitySet<PagesOnUser> PagesOnUsers
		{
			get
			{
				return this._PagesOnUsers;
			}
			set
			{
				this._PagesOnUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchInfo_SystemUser", Storage="_BranchInfo", ThisKey="BranchID", OtherKey="IID", IsForeignKey=true)]
		public BranchInfo BranchInfo
		{
			get
			{
				return this._BranchInfo.Entity;
			}
			set
			{
				BranchInfo previousValue = this._BranchInfo.Entity;
				if (((previousValue != value) 
							|| (this._BranchInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchInfo.Entity = null;
						previousValue.SystemUsers.Remove(this);
					}
					this._BranchInfo.Entity = value;
					if ((value != null))
					{
						value.SystemUsers.Add(this);
						this._BranchID = value.IID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("BranchInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemRole_SystemUser", Storage="_SystemRole", ThisKey="RoleID", OtherKey="IID", IsForeignKey=true)]
		public SystemRole SystemRole
		{
			get
			{
				return this._SystemRole.Entity;
			}
			set
			{
				SystemRole previousValue = this._SystemRole.Entity;
				if (((previousValue != value) 
							|| (this._SystemRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemRole.Entity = null;
						previousValue.SystemUsers.Remove(this);
					}
					this._SystemRole.Entity = value;
					if ((value != null))
					{
						value.SystemUsers.Add(this);
						this._RoleID = value.IID;
					}
					else
					{
						this._RoleID = default(long);
					}
					this.SendPropertyChanged("SystemRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PagesOnUsers(PagesOnUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_PagesOnUsers(PagesOnUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_BankTransaction")]
	public partial class Acc_BankTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _TransactionMasterID;
		
		private int _ReferenceType;
		
		private System.Nullable<long> _ChequeLeafID;
		
		private decimal _Amount;
		
		private string _BankName;
		
		private string _BranchName;
		
		private string _BankAccount;
		
		private string _ChequeLeafNumber;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.DateTime _ChequeDate;
		
		private System.Nullable<int> _BranchID;
		
		private EntityRef<Acc_TransactionMaster> _Acc_TransactionMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnTransactionMasterIDChanging(long value);
    partial void OnTransactionMasterIDChanged();
    partial void OnReferenceTypeChanging(int value);
    partial void OnReferenceTypeChanged();
    partial void OnChequeLeafIDChanging(System.Nullable<long> value);
    partial void OnChequeLeafIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnChequeLeafNumberChanging(string value);
    partial void OnChequeLeafNumberChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnChequeDateChanging(System.DateTime value);
    partial void OnChequeDateChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_BankTransaction()
		{
			this._Acc_TransactionMaster = default(EntityRef<Acc_TransactionMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMasterID", DbType="BigInt NOT NULL")]
		public long TransactionMasterID
		{
			get
			{
				return this._TransactionMasterID;
			}
			set
			{
				if ((this._TransactionMasterID != value))
				{
					if (this._Acc_TransactionMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionMasterIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionMasterID = value;
					this.SendPropertyChanged("TransactionMasterID");
					this.OnTransactionMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceType", DbType="Int NOT NULL")]
		public int ReferenceType
		{
			get
			{
				return this._ReferenceType;
			}
			set
			{
				if ((this._ReferenceType != value))
				{
					this.OnReferenceTypeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceType = value;
					this.SendPropertyChanged("ReferenceType");
					this.OnReferenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeLeafID", DbType="BigInt")]
		public System.Nullable<long> ChequeLeafID
		{
			get
			{
				return this._ChequeLeafID;
			}
			set
			{
				if ((this._ChequeLeafID != value))
				{
					this.OnChequeLeafIDChanging(value);
					this.SendPropertyChanging();
					this._ChequeLeafID = value;
					this.SendPropertyChanged("ChequeLeafID");
					this.OnChequeLeafIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(100)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(250)")]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeLeafNumber", DbType="NVarChar(50)")]
		public string ChequeLeafNumber
		{
			get
			{
				return this._ChequeLeafNumber;
			}
			set
			{
				if ((this._ChequeLeafNumber != value))
				{
					this.OnChequeLeafNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeLeafNumber = value;
					this.SendPropertyChanged("ChequeLeafNumber");
					this.OnChequeLeafNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeDate", DbType="DateTime NOT NULL")]
		public System.DateTime ChequeDate
		{
			get
			{
				return this._ChequeDate;
			}
			set
			{
				if ((this._ChequeDate != value))
				{
					this.OnChequeDateChanging(value);
					this.SendPropertyChanging();
					this._ChequeDate = value;
					this.SendPropertyChanged("ChequeDate");
					this.OnChequeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_TransactionMaster_Acc_BankTransaction", Storage="_Acc_TransactionMaster", ThisKey="TransactionMasterID", OtherKey="IID", IsForeignKey=true)]
		public Acc_TransactionMaster Acc_TransactionMaster
		{
			get
			{
				return this._Acc_TransactionMaster.Entity;
			}
			set
			{
				Acc_TransactionMaster previousValue = this._Acc_TransactionMaster.Entity;
				if (((previousValue != value) 
							|| (this._Acc_TransactionMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_TransactionMaster.Entity = null;
						previousValue.Acc_BankTransactions.Remove(this);
					}
					this._Acc_TransactionMaster.Entity = value;
					if ((value != null))
					{
						value.Acc_BankTransactions.Add(this);
						this._TransactionMasterID = value.IID;
					}
					else
					{
						this._TransactionMasterID = default(long);
					}
					this.SendPropertyChanged("Acc_TransactionMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_Bank")]
	public partial class Acc_Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _ShortName;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_BankBranch> _Acc_BankBranches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_Bank()
		{
			this._Acc_BankBranches = new EntitySet<Acc_BankBranch>(new Action<Acc_BankBranch>(this.attach_Acc_BankBranches), new Action<Acc_BankBranch>(this.detach_Acc_BankBranches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_Bank_Acc_BankBranch", Storage="_Acc_BankBranches", ThisKey="IID", OtherKey="BankID")]
		public EntitySet<Acc_BankBranch> Acc_BankBranches
		{
			get
			{
				return this._Acc_BankBranches;
			}
			set
			{
				this._Acc_BankBranches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_BankBranches(Acc_BankBranch entity)
		{
			this.SendPropertyChanging();
			entity.Acc_Bank = this;
		}
		
		private void detach_Acc_BankBranches(Acc_BankBranch entity)
		{
			this.SendPropertyChanging();
			entity.Acc_Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_BankAccount")]
	public partial class Acc_BankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _AccountNumber;
		
		private long _BankBranchID;
		
		private int _BankAccountType;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_BankLinkToChartOfAccount> _Acc_BankLinkToChartOfAccounts;
		
		private EntitySet<Acc_ChequeBook> _Acc_ChequeBooks;
		
		private EntityRef<Acc_BankBranch> _Acc_BankBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnBankBranchIDChanging(long value);
    partial void OnBankBranchIDChanged();
    partial void OnBankAccountTypeChanging(int value);
    partial void OnBankAccountTypeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_BankAccount()
		{
			this._Acc_BankLinkToChartOfAccounts = new EntitySet<Acc_BankLinkToChartOfAccount>(new Action<Acc_BankLinkToChartOfAccount>(this.attach_Acc_BankLinkToChartOfAccounts), new Action<Acc_BankLinkToChartOfAccount>(this.detach_Acc_BankLinkToChartOfAccounts));
			this._Acc_ChequeBooks = new EntitySet<Acc_ChequeBook>(new Action<Acc_ChequeBook>(this.attach_Acc_ChequeBooks), new Action<Acc_ChequeBook>(this.detach_Acc_ChequeBooks));
			this._Acc_BankBranch = default(EntityRef<Acc_BankBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBranchID", DbType="BigInt NOT NULL")]
		public long BankBranchID
		{
			get
			{
				return this._BankBranchID;
			}
			set
			{
				if ((this._BankBranchID != value))
				{
					if (this._Acc_BankBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BankBranchID = value;
					this.SendPropertyChanged("BankBranchID");
					this.OnBankBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountType", DbType="Int NOT NULL")]
		public int BankAccountType
		{
			get
			{
				return this._BankAccountType;
			}
			set
			{
				if ((this._BankAccountType != value))
				{
					this.OnBankAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._BankAccountType = value;
					this.SendPropertyChanged("BankAccountType");
					this.OnBankAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankAccount_Acc_BankLinkToChartOfAccount", Storage="_Acc_BankLinkToChartOfAccounts", ThisKey="IID", OtherKey="BankAccountID")]
		public EntitySet<Acc_BankLinkToChartOfAccount> Acc_BankLinkToChartOfAccounts
		{
			get
			{
				return this._Acc_BankLinkToChartOfAccounts;
			}
			set
			{
				this._Acc_BankLinkToChartOfAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankAccount_Acc_ChequeBook", Storage="_Acc_ChequeBooks", ThisKey="IID", OtherKey="BankAccountID")]
		public EntitySet<Acc_ChequeBook> Acc_ChequeBooks
		{
			get
			{
				return this._Acc_ChequeBooks;
			}
			set
			{
				this._Acc_ChequeBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankBranch_Acc_BankAccount", Storage="_Acc_BankBranch", ThisKey="BankBranchID", OtherKey="IID", IsForeignKey=true)]
		public Acc_BankBranch Acc_BankBranch
		{
			get
			{
				return this._Acc_BankBranch.Entity;
			}
			set
			{
				Acc_BankBranch previousValue = this._Acc_BankBranch.Entity;
				if (((previousValue != value) 
							|| (this._Acc_BankBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_BankBranch.Entity = null;
						previousValue.Acc_BankAccounts.Remove(this);
					}
					this._Acc_BankBranch.Entity = value;
					if ((value != null))
					{
						value.Acc_BankAccounts.Add(this);
						this._BankBranchID = value.IID;
					}
					else
					{
						this._BankBranchID = default(long);
					}
					this.SendPropertyChanged("Acc_BankBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_BankLinkToChartOfAccounts(Acc_BankLinkToChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankAccount = this;
		}
		
		private void detach_Acc_BankLinkToChartOfAccounts(Acc_BankLinkToChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankAccount = null;
		}
		
		private void attach_Acc_ChequeBooks(Acc_ChequeBook entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankAccount = this;
		}
		
		private void detach_Acc_ChequeBooks(Acc_ChequeBook entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_BankBranch")]
	public partial class Acc_BankBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private long _BankID;
		
		private string _Address;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_BankAccount> _Acc_BankAccounts;
		
		private EntityRef<Acc_Bank> _Acc_Bank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBankIDChanging(long value);
    partial void OnBankIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_BankBranch()
		{
			this._Acc_BankAccounts = new EntitySet<Acc_BankAccount>(new Action<Acc_BankAccount>(this.attach_Acc_BankAccounts), new Action<Acc_BankAccount>(this.detach_Acc_BankAccounts));
			this._Acc_Bank = default(EntityRef<Acc_Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="BigInt NOT NULL")]
		public long BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Acc_Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankBranch_Acc_BankAccount", Storage="_Acc_BankAccounts", ThisKey="IID", OtherKey="BankBranchID")]
		public EntitySet<Acc_BankAccount> Acc_BankAccounts
		{
			get
			{
				return this._Acc_BankAccounts;
			}
			set
			{
				this._Acc_BankAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_Bank_Acc_BankBranch", Storage="_Acc_Bank", ThisKey="BankID", OtherKey="IID", IsForeignKey=true)]
		public Acc_Bank Acc_Bank
		{
			get
			{
				return this._Acc_Bank.Entity;
			}
			set
			{
				Acc_Bank previousValue = this._Acc_Bank.Entity;
				if (((previousValue != value) 
							|| (this._Acc_Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_Bank.Entity = null;
						previousValue.Acc_BankBranches.Remove(this);
					}
					this._Acc_Bank.Entity = value;
					if ((value != null))
					{
						value.Acc_BankBranches.Add(this);
						this._BankID = value.IID;
					}
					else
					{
						this._BankID = default(long);
					}
					this.SendPropertyChanged("Acc_Bank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_BankAccounts(Acc_BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankBranch = this;
		}
		
		private void detach_Acc_BankAccounts(Acc_BankAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_BankBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_BankLinkToChartOfAccount")]
	public partial class Acc_BankLinkToChartOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChartOfAccountID;
		
		private long _BankAccountID;
		
		private int _Status;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntityRef<Acc_BankAccount> _Acc_BankAccount;
		
		private EntityRef<Acc_ChartOfAccount> _Acc_ChartOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChartOfAccountIDChanging(long value);
    partial void OnChartOfAccountIDChanged();
    partial void OnBankAccountIDChanging(long value);
    partial void OnBankAccountIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_BankLinkToChartOfAccount()
		{
			this._Acc_BankAccount = default(EntityRef<Acc_BankAccount>);
			this._Acc_ChartOfAccount = default(EntityRef<Acc_ChartOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartOfAccountID", DbType="BigInt NOT NULL")]
		public long ChartOfAccountID
		{
			get
			{
				return this._ChartOfAccountID;
			}
			set
			{
				if ((this._ChartOfAccountID != value))
				{
					if (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChartOfAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ChartOfAccountID = value;
					this.SendPropertyChanged("ChartOfAccountID");
					this.OnChartOfAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountID", DbType="BigInt NOT NULL")]
		public long BankAccountID
		{
			get
			{
				return this._BankAccountID;
			}
			set
			{
				if ((this._BankAccountID != value))
				{
					if (this._Acc_BankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIDChanging(value);
					this.SendPropertyChanging();
					this._BankAccountID = value;
					this.SendPropertyChanged("BankAccountID");
					this.OnBankAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankAccount_Acc_BankLinkToChartOfAccount", Storage="_Acc_BankAccount", ThisKey="BankAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_BankAccount Acc_BankAccount
		{
			get
			{
				return this._Acc_BankAccount.Entity;
			}
			set
			{
				Acc_BankAccount previousValue = this._Acc_BankAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_BankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_BankAccount.Entity = null;
						previousValue.Acc_BankLinkToChartOfAccounts.Remove(this);
					}
					this._Acc_BankAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_BankLinkToChartOfAccounts.Add(this);
						this._BankAccountID = value.IID;
					}
					else
					{
						this._BankAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_BankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_BankLinkToChartOfAccount", Storage="_Acc_ChartOfAccount", ThisKey="ChartOfAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChartOfAccount Acc_ChartOfAccount
		{
			get
			{
				return this._Acc_ChartOfAccount.Entity;
			}
			set
			{
				Acc_ChartOfAccount previousValue = this._Acc_ChartOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChartOfAccount.Entity = null;
						previousValue.Acc_BankLinkToChartOfAccounts.Remove(this);
					}
					this._Acc_ChartOfAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_BankLinkToChartOfAccounts.Add(this);
						this._ChartOfAccountID = value.IID;
					}
					else
					{
						this._ChartOfAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_ChartOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChequeBook")]
	public partial class Acc_ChequeBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _BankAccountID;
		
		private string _ChequeBookNumber;
		
		private int _NumberofLeaf;
		
		private string _StartLeafNumber;
		
		private string _EndLeafNumber;
		
		private bool _IsActive;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_ChequeLeaf> _Acc_ChequeLeafs;
		
		private EntityRef<Acc_BankAccount> _Acc_BankAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnBankAccountIDChanging(long value);
    partial void OnBankAccountIDChanged();
    partial void OnChequeBookNumberChanging(string value);
    partial void OnChequeBookNumberChanged();
    partial void OnNumberofLeafChanging(int value);
    partial void OnNumberofLeafChanged();
    partial void OnStartLeafNumberChanging(string value);
    partial void OnStartLeafNumberChanged();
    partial void OnEndLeafNumberChanging(string value);
    partial void OnEndLeafNumberChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_ChequeBook()
		{
			this._Acc_ChequeLeafs = new EntitySet<Acc_ChequeLeaf>(new Action<Acc_ChequeLeaf>(this.attach_Acc_ChequeLeafs), new Action<Acc_ChequeLeaf>(this.detach_Acc_ChequeLeafs));
			this._Acc_BankAccount = default(EntityRef<Acc_BankAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountID", DbType="BigInt NOT NULL")]
		public long BankAccountID
		{
			get
			{
				return this._BankAccountID;
			}
			set
			{
				if ((this._BankAccountID != value))
				{
					if (this._Acc_BankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIDChanging(value);
					this.SendPropertyChanging();
					this._BankAccountID = value;
					this.SendPropertyChanged("BankAccountID");
					this.OnBankAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeBookNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ChequeBookNumber
		{
			get
			{
				return this._ChequeBookNumber;
			}
			set
			{
				if ((this._ChequeBookNumber != value))
				{
					this.OnChequeBookNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeBookNumber = value;
					this.SendPropertyChanged("ChequeBookNumber");
					this.OnChequeBookNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofLeaf", DbType="Int NOT NULL")]
		public int NumberofLeaf
		{
			get
			{
				return this._NumberofLeaf;
			}
			set
			{
				if ((this._NumberofLeaf != value))
				{
					this.OnNumberofLeafChanging(value);
					this.SendPropertyChanging();
					this._NumberofLeaf = value;
					this.SendPropertyChanged("NumberofLeaf");
					this.OnNumberofLeafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLeafNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StartLeafNumber
		{
			get
			{
				return this._StartLeafNumber;
			}
			set
			{
				if ((this._StartLeafNumber != value))
				{
					this.OnStartLeafNumberChanging(value);
					this.SendPropertyChanging();
					this._StartLeafNumber = value;
					this.SendPropertyChanged("StartLeafNumber");
					this.OnStartLeafNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndLeafNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EndLeafNumber
		{
			get
			{
				return this._EndLeafNumber;
			}
			set
			{
				if ((this._EndLeafNumber != value))
				{
					this.OnEndLeafNumberChanging(value);
					this.SendPropertyChanging();
					this._EndLeafNumber = value;
					this.SendPropertyChanged("EndLeafNumber");
					this.OnEndLeafNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChequeBook_Acc_ChequeLeaf", Storage="_Acc_ChequeLeafs", ThisKey="IID", OtherKey="ChequeBookID")]
		public EntitySet<Acc_ChequeLeaf> Acc_ChequeLeafs
		{
			get
			{
				return this._Acc_ChequeLeafs;
			}
			set
			{
				this._Acc_ChequeLeafs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_BankAccount_Acc_ChequeBook", Storage="_Acc_BankAccount", ThisKey="BankAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_BankAccount Acc_BankAccount
		{
			get
			{
				return this._Acc_BankAccount.Entity;
			}
			set
			{
				Acc_BankAccount previousValue = this._Acc_BankAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_BankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_BankAccount.Entity = null;
						previousValue.Acc_ChequeBooks.Remove(this);
					}
					this._Acc_BankAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_ChequeBooks.Add(this);
						this._BankAccountID = value.IID;
					}
					else
					{
						this._BankAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_BankAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_ChequeLeafs(Acc_ChequeLeaf entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChequeBook = this;
		}
		
		private void detach_Acc_ChequeLeafs(Acc_ChequeLeaf entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChequeBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChequeLeaf")]
	public partial class Acc_ChequeLeaf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChequeBookID;
		
		private string _LeafNumber;
		
		private int _Status;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntityRef<Acc_ChequeBook> _Acc_ChequeBook;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChequeBookIDChanging(long value);
    partial void OnChequeBookIDChanged();
    partial void OnLeafNumberChanging(string value);
    partial void OnLeafNumberChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_ChequeLeaf()
		{
			this._Acc_ChequeBook = default(EntityRef<Acc_ChequeBook>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeBookID", DbType="BigInt NOT NULL")]
		public long ChequeBookID
		{
			get
			{
				return this._ChequeBookID;
			}
			set
			{
				if ((this._ChequeBookID != value))
				{
					if (this._Acc_ChequeBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChequeBookIDChanging(value);
					this.SendPropertyChanging();
					this._ChequeBookID = value;
					this.SendPropertyChanged("ChequeBookID");
					this.OnChequeBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeafNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeafNumber
		{
			get
			{
				return this._LeafNumber;
			}
			set
			{
				if ((this._LeafNumber != value))
				{
					this.OnLeafNumberChanging(value);
					this.SendPropertyChanging();
					this._LeafNumber = value;
					this.SendPropertyChanged("LeafNumber");
					this.OnLeafNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChequeBook_Acc_ChequeLeaf", Storage="_Acc_ChequeBook", ThisKey="ChequeBookID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChequeBook Acc_ChequeBook
		{
			get
			{
				return this._Acc_ChequeBook.Entity;
			}
			set
			{
				Acc_ChequeBook previousValue = this._Acc_ChequeBook.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChequeBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChequeBook.Entity = null;
						previousValue.Acc_ChequeLeafs.Remove(this);
					}
					this._Acc_ChequeBook.Entity = value;
					if ((value != null))
					{
						value.Acc_ChequeLeafs.Add(this);
						this._ChequeBookID = value.IID;
					}
					else
					{
						this._ChequeBookID = default(long);
					}
					this.SendPropertyChanged("Acc_ChequeBook");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Email;
		
		private string _PassportNo;
		
		private string _NationalID;
		
		private System.Nullable<System.DateTime> _DateofBirth;
		
		private string _Web;
		
		private string _ContactPerson;
		
		private string _ContactPersonAddress;
		
		private string _ContactPersonPhone;
		
		private string _ContactPersonMobile;
		
		private string _ContactPersonEmail;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_ChartOfAccountCustomer> _Acc_ChartOfAccountCustomers;
		
		private EntitySet<TicketSale> _TicketSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPassportNoChanging(string value);
    partial void OnPassportNoChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnDateofBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofBirthChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPersonAddressChanging(string value);
    partial void OnContactPersonAddressChanged();
    partial void OnContactPersonPhoneChanging(string value);
    partial void OnContactPersonPhoneChanged();
    partial void OnContactPersonMobileChanging(string value);
    partial void OnContactPersonMobileChanged();
    partial void OnContactPersonEmailChanging(string value);
    partial void OnContactPersonEmailChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Customer()
		{
			this._Acc_ChartOfAccountCustomers = new EntitySet<Acc_ChartOfAccountCustomer>(new Action<Acc_ChartOfAccountCustomer>(this.attach_Acc_ChartOfAccountCustomers), new Action<Acc_ChartOfAccountCustomer>(this.detach_Acc_ChartOfAccountCustomers));
			this._TicketSales = new EntitySet<TicketSale>(new Action<TicketSale>(this.attach_TicketSales), new Action<TicketSale>(this.detach_TicketSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNo", DbType="NVarChar(250)")]
		public string PassportNo
		{
			get
			{
				return this._PassportNo;
			}
			set
			{
				if ((this._PassportNo != value))
				{
					this.OnPassportNoChanging(value);
					this.SendPropertyChanging();
					this._PassportNo = value;
					this.SendPropertyChanged("PassportNo");
					this.OnPassportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(50)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactPersonAddress
		{
			get
			{
				return this._ContactPersonAddress;
			}
			set
			{
				if ((this._ContactPersonAddress != value))
				{
					this.OnContactPersonAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonAddress = value;
					this.SendPropertyChanged("ContactPersonAddress");
					this.OnContactPersonAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonPhone
		{
			get
			{
				return this._ContactPersonPhone;
			}
			set
			{
				if ((this._ContactPersonPhone != value))
				{
					this.OnContactPersonPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonPhone = value;
					this.SendPropertyChanged("ContactPersonPhone");
					this.OnContactPersonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonMobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonMobile
		{
			get
			{
				return this._ContactPersonMobile;
			}
			set
			{
				if ((this._ContactPersonMobile != value))
				{
					this.OnContactPersonMobileChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonMobile = value;
					this.SendPropertyChanged("ContactPersonMobile");
					this.OnContactPersonMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonEmail
		{
			get
			{
				return this._ContactPersonEmail;
			}
			set
			{
				if ((this._ContactPersonEmail != value))
				{
					this.OnContactPersonEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonEmail = value;
					this.SendPropertyChanged("ContactPersonEmail");
					this.OnContactPersonEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Acc_ChartOfAccountCustomer", Storage="_Acc_ChartOfAccountCustomers", ThisKey="IID", OtherKey="CustomerID")]
		public EntitySet<Acc_ChartOfAccountCustomer> Acc_ChartOfAccountCustomers
		{
			get
			{
				return this._Acc_ChartOfAccountCustomers;
			}
			set
			{
				this._Acc_ChartOfAccountCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TicketSale", Storage="_TicketSales", ThisKey="IID", OtherKey="CustomerID")]
		public EntitySet<TicketSale> TicketSales
		{
			get
			{
				return this._TicketSales;
			}
			set
			{
				this._TicketSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_ChartOfAccountCustomers(Acc_ChartOfAccountCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Acc_ChartOfAccountCustomers(Acc_ChartOfAccountCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_TransactionMaster")]
	public partial class Acc_TransactionMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _JournalCode;
		
		private int _TransactionTypeID;
		
		private System.DateTime _TransactionDate;
		
		private int _TransactionModeID;
		
		private string _Particulars;
		
		private int _Status;
		
		private string _ToFrom;
		
		private string _PayReason;
		
		private string _ToFromAddress;
		
		private string _ToFromName;
		
		private System.Nullable<int> _ReferenceType;
		
		private System.Nullable<long> _ReferenceID;
		
		private string _TransactionReference;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<Acc_BankTransaction> _Acc_BankTransactions;
		
		private EntitySet<Acc_TransactionDetail> _Acc_TransactionDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnJournalCodeChanging(string value);
    partial void OnJournalCodeChanged();
    partial void OnTransactionTypeIDChanging(int value);
    partial void OnTransactionTypeIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionModeIDChanging(int value);
    partial void OnTransactionModeIDChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnToFromChanging(string value);
    partial void OnToFromChanged();
    partial void OnPayReasonChanging(string value);
    partial void OnPayReasonChanged();
    partial void OnToFromAddressChanging(string value);
    partial void OnToFromAddressChanged();
    partial void OnToFromNameChanging(string value);
    partial void OnToFromNameChanged();
    partial void OnReferenceTypeChanging(System.Nullable<int> value);
    partial void OnReferenceTypeChanged();
    partial void OnReferenceIDChanging(System.Nullable<long> value);
    partial void OnReferenceIDChanged();
    partial void OnTransactionReferenceChanging(string value);
    partial void OnTransactionReferenceChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_TransactionMaster()
		{
			this._Acc_BankTransactions = new EntitySet<Acc_BankTransaction>(new Action<Acc_BankTransaction>(this.attach_Acc_BankTransactions), new Action<Acc_BankTransaction>(this.detach_Acc_BankTransactions));
			this._Acc_TransactionDetails = new EntitySet<Acc_TransactionDetail>(new Action<Acc_TransactionDetail>(this.attach_Acc_TransactionDetails), new Action<Acc_TransactionDetail>(this.detach_Acc_TransactionDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this.OnJournalCodeChanging(value);
					this.SendPropertyChanging();
					this._JournalCode = value;
					this.SendPropertyChanged("JournalCode");
					this.OnJournalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeID", DbType="Int NOT NULL")]
		public int TransactionTypeID
		{
			get
			{
				return this._TransactionTypeID;
			}
			set
			{
				if ((this._TransactionTypeID != value))
				{
					this.OnTransactionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeID = value;
					this.SendPropertyChanged("TransactionTypeID");
					this.OnTransactionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionModeID", DbType="Int NOT NULL")]
		public int TransactionModeID
		{
			get
			{
				return this._TransactionModeID;
			}
			set
			{
				if ((this._TransactionModeID != value))
				{
					this.OnTransactionModeIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionModeID = value;
					this.SendPropertyChanged("TransactionModeID");
					this.OnTransactionModeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToFrom", DbType="NVarChar(150)")]
		public string ToFrom
		{
			get
			{
				return this._ToFrom;
			}
			set
			{
				if ((this._ToFrom != value))
				{
					this.OnToFromChanging(value);
					this.SendPropertyChanging();
					this._ToFrom = value;
					this.SendPropertyChanged("ToFrom");
					this.OnToFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayReason", DbType="NVarChar(150)")]
		public string PayReason
		{
			get
			{
				return this._PayReason;
			}
			set
			{
				if ((this._PayReason != value))
				{
					this.OnPayReasonChanging(value);
					this.SendPropertyChanging();
					this._PayReason = value;
					this.SendPropertyChanged("PayReason");
					this.OnPayReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToFromAddress", DbType="NVarChar(255)")]
		public string ToFromAddress
		{
			get
			{
				return this._ToFromAddress;
			}
			set
			{
				if ((this._ToFromAddress != value))
				{
					this.OnToFromAddressChanging(value);
					this.SendPropertyChanging();
					this._ToFromAddress = value;
					this.SendPropertyChanged("ToFromAddress");
					this.OnToFromAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToFromName", DbType="NVarChar(255)")]
		public string ToFromName
		{
			get
			{
				return this._ToFromName;
			}
			set
			{
				if ((this._ToFromName != value))
				{
					this.OnToFromNameChanging(value);
					this.SendPropertyChanging();
					this._ToFromName = value;
					this.SendPropertyChanged("ToFromName");
					this.OnToFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceType", DbType="Int")]
		public System.Nullable<int> ReferenceType
		{
			get
			{
				return this._ReferenceType;
			}
			set
			{
				if ((this._ReferenceType != value))
				{
					this.OnReferenceTypeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceType = value;
					this.SendPropertyChanged("ReferenceType");
					this.OnReferenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="BigInt")]
		public System.Nullable<long> ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionReference", DbType="NVarChar(MAX)")]
		public string TransactionReference
		{
			get
			{
				return this._TransactionReference;
			}
			set
			{
				if ((this._TransactionReference != value))
				{
					this.OnTransactionReferenceChanging(value);
					this.SendPropertyChanging();
					this._TransactionReference = value;
					this.SendPropertyChanged("TransactionReference");
					this.OnTransactionReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_TransactionMaster_Acc_BankTransaction", Storage="_Acc_BankTransactions", ThisKey="IID", OtherKey="TransactionMasterID")]
		public EntitySet<Acc_BankTransaction> Acc_BankTransactions
		{
			get
			{
				return this._Acc_BankTransactions;
			}
			set
			{
				this._Acc_BankTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_TransactionMaster_Acc_TransactionDetail", Storage="_Acc_TransactionDetails", ThisKey="IID", OtherKey="TransactionMasterID")]
		public EntitySet<Acc_TransactionDetail> Acc_TransactionDetails
		{
			get
			{
				return this._Acc_TransactionDetails;
			}
			set
			{
				this._Acc_TransactionDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_BankTransactions(Acc_BankTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Acc_TransactionMaster = this;
		}
		
		private void detach_Acc_BankTransactions(Acc_BankTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Acc_TransactionMaster = null;
		}
		
		private void attach_Acc_TransactionDetails(Acc_TransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.Acc_TransactionMaster = this;
		}
		
		private void detach_Acc_TransactionDetails(Acc_TransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.Acc_TransactionMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_TransactionDetail")]
	public partial class Acc_TransactionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _TransactionMasterID;
		
		private long _AccountID;
		
		private int _TransactionNature;
		
		private decimal _Amount;
		
		private string _Particulars;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private EntityRef<Acc_TransactionMaster> _Acc_TransactionMaster;
		
		private EntityRef<Acc_ChartOfAccount> _Acc_ChartOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnTransactionMasterIDChanging(long value);
    partial void OnTransactionMasterIDChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnTransactionNatureChanging(int value);
    partial void OnTransactionNatureChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Acc_TransactionDetail()
		{
			this._Acc_TransactionMaster = default(EntityRef<Acc_TransactionMaster>);
			this._Acc_ChartOfAccount = default(EntityRef<Acc_ChartOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMasterID", DbType="BigInt NOT NULL")]
		public long TransactionMasterID
		{
			get
			{
				return this._TransactionMasterID;
			}
			set
			{
				if ((this._TransactionMasterID != value))
				{
					if (this._Acc_TransactionMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionMasterIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionMasterID = value;
					this.SendPropertyChanged("TransactionMasterID");
					this.OnTransactionMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNature", DbType="Int NOT NULL")]
		public int TransactionNature
		{
			get
			{
				return this._TransactionNature;
			}
			set
			{
				if ((this._TransactionNature != value))
				{
					this.OnTransactionNatureChanging(value);
					this.SendPropertyChanging();
					this._TransactionNature = value;
					this.SendPropertyChanged("TransactionNature");
					this.OnTransactionNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_TransactionMaster_Acc_TransactionDetail", Storage="_Acc_TransactionMaster", ThisKey="TransactionMasterID", OtherKey="IID", IsForeignKey=true)]
		public Acc_TransactionMaster Acc_TransactionMaster
		{
			get
			{
				return this._Acc_TransactionMaster.Entity;
			}
			set
			{
				Acc_TransactionMaster previousValue = this._Acc_TransactionMaster.Entity;
				if (((previousValue != value) 
							|| (this._Acc_TransactionMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_TransactionMaster.Entity = null;
						previousValue.Acc_TransactionDetails.Remove(this);
					}
					this._Acc_TransactionMaster.Entity = value;
					if ((value != null))
					{
						value.Acc_TransactionDetails.Add(this);
						this._TransactionMasterID = value.IID;
					}
					else
					{
						this._TransactionMasterID = default(long);
					}
					this.SendPropertyChanged("Acc_TransactionMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_TransactionDetail", Storage="_Acc_ChartOfAccount", ThisKey="AccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChartOfAccount Acc_ChartOfAccount
		{
			get
			{
				return this._Acc_ChartOfAccount.Entity;
			}
			set
			{
				Acc_ChartOfAccount previousValue = this._Acc_ChartOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChartOfAccount.Entity = null;
						previousValue.Acc_TransactionDetails.Remove(this);
					}
					this._Acc_ChartOfAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_TransactionDetails.Add(this);
						this._AccountID = value.IID;
					}
					else
					{
						this._AccountID = default(long);
					}
					this.SendPropertyChanged("Acc_ChartOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Web;
		
		private string _ContactPerson;
		
		private string _ContactPersonAddress;
		
		private string _ContactPersonPhone;
		
		private string _ContactPersonMobile;
		
		private string _ContactPersonEmail;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _SupplierType;
		
		private System.Nullable<int> _AirlinesType;
		
		private EntitySet<Acc_ChartOfAccountSupplier> _Acc_ChartOfAccountSuppliers;
		
		private EntitySet<AirlinesCommission> _AirlinesCommissions;
		
		private EntitySet<TicketSale> _TicketSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPersonAddressChanging(string value);
    partial void OnContactPersonAddressChanged();
    partial void OnContactPersonPhoneChanging(string value);
    partial void OnContactPersonPhoneChanged();
    partial void OnContactPersonMobileChanging(string value);
    partial void OnContactPersonMobileChanged();
    partial void OnContactPersonEmailChanging(string value);
    partial void OnContactPersonEmailChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnSupplierTypeChanging(System.Nullable<int> value);
    partial void OnSupplierTypeChanged();
    partial void OnAirlinesTypeChanging(System.Nullable<int> value);
    partial void OnAirlinesTypeChanged();
    #endregion
		
		public Supplier()
		{
			this._Acc_ChartOfAccountSuppliers = new EntitySet<Acc_ChartOfAccountSupplier>(new Action<Acc_ChartOfAccountSupplier>(this.attach_Acc_ChartOfAccountSuppliers), new Action<Acc_ChartOfAccountSupplier>(this.detach_Acc_ChartOfAccountSuppliers));
			this._AirlinesCommissions = new EntitySet<AirlinesCommission>(new Action<AirlinesCommission>(this.attach_AirlinesCommissions), new Action<AirlinesCommission>(this.detach_AirlinesCommissions));
			this._TicketSales = new EntitySet<TicketSale>(new Action<TicketSale>(this.attach_TicketSales), new Action<TicketSale>(this.detach_TicketSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ContactPersonAddress
		{
			get
			{
				return this._ContactPersonAddress;
			}
			set
			{
				if ((this._ContactPersonAddress != value))
				{
					this.OnContactPersonAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonAddress = value;
					this.SendPropertyChanged("ContactPersonAddress");
					this.OnContactPersonAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonPhone
		{
			get
			{
				return this._ContactPersonPhone;
			}
			set
			{
				if ((this._ContactPersonPhone != value))
				{
					this.OnContactPersonPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonPhone = value;
					this.SendPropertyChanged("ContactPersonPhone");
					this.OnContactPersonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonMobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonMobile
		{
			get
			{
				return this._ContactPersonMobile;
			}
			set
			{
				if ((this._ContactPersonMobile != value))
				{
					this.OnContactPersonMobileChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonMobile = value;
					this.SendPropertyChanged("ContactPersonMobile");
					this.OnContactPersonMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPersonEmail
		{
			get
			{
				return this._ContactPersonEmail;
			}
			set
			{
				if ((this._ContactPersonEmail != value))
				{
					this.OnContactPersonEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonEmail = value;
					this.SendPropertyChanged("ContactPersonEmail");
					this.OnContactPersonEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierType", DbType="Int")]
		public System.Nullable<int> SupplierType
		{
			get
			{
				return this._SupplierType;
			}
			set
			{
				if ((this._SupplierType != value))
				{
					this.OnSupplierTypeChanging(value);
					this.SendPropertyChanging();
					this._SupplierType = value;
					this.SendPropertyChanged("SupplierType");
					this.OnSupplierTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlinesType", DbType="Int")]
		public System.Nullable<int> AirlinesType
		{
			get
			{
				return this._AirlinesType;
			}
			set
			{
				if ((this._AirlinesType != value))
				{
					this.OnAirlinesTypeChanging(value);
					this.SendPropertyChanging();
					this._AirlinesType = value;
					this.SendPropertyChanged("AirlinesType");
					this.OnAirlinesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Acc_ChartOfAccountSupplier", Storage="_Acc_ChartOfAccountSuppliers", ThisKey="IID", OtherKey="SupplierID")]
		public EntitySet<Acc_ChartOfAccountSupplier> Acc_ChartOfAccountSuppliers
		{
			get
			{
				return this._Acc_ChartOfAccountSuppliers;
			}
			set
			{
				this._Acc_ChartOfAccountSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_AirlinesCommission", Storage="_AirlinesCommissions", ThisKey="IID", OtherKey="SupplierID")]
		public EntitySet<AirlinesCommission> AirlinesCommissions
		{
			get
			{
				return this._AirlinesCommissions;
			}
			set
			{
				this._AirlinesCommissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_TicketSale", Storage="_TicketSales", ThisKey="IID", OtherKey="AirlinesID")]
		public EntitySet<TicketSale> TicketSales
		{
			get
			{
				return this._TicketSales;
			}
			set
			{
				this._TicketSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_ChartOfAccountSuppliers(Acc_ChartOfAccountSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Acc_ChartOfAccountSuppliers(Acc_ChartOfAccountSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_AirlinesCommissions(AirlinesCommission entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_AirlinesCommissions(AirlinesCommission entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AirlinesCommission")]
	public partial class AirlinesCommission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _SupplierID;
		
		private decimal _NormalCommission;
		
		private System.Nullable<decimal> _ExcessCommission;
		
		private bool _IsActive;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _NormalCommissionType;
		
		private System.Nullable<int> _ExcessCommissionType;
		
		private System.Nullable<int> _TicketClassID;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<TicketClass> _TicketClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnSupplierIDChanging(long value);
    partial void OnSupplierIDChanged();
    partial void OnNormalCommissionChanging(decimal value);
    partial void OnNormalCommissionChanged();
    partial void OnExcessCommissionChanging(System.Nullable<decimal> value);
    partial void OnExcessCommissionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnNormalCommissionTypeChanging(System.Nullable<int> value);
    partial void OnNormalCommissionTypeChanged();
    partial void OnExcessCommissionTypeChanging(System.Nullable<int> value);
    partial void OnExcessCommissionTypeChanged();
    partial void OnTicketClassIDChanging(System.Nullable<int> value);
    partial void OnTicketClassIDChanged();
    #endregion
		
		public AirlinesCommission()
		{
			this._Supplier = default(EntityRef<Supplier>);
			this._TicketClass = default(EntityRef<TicketClass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="BigInt NOT NULL")]
		public long SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalCommission", DbType="Decimal(18,2) NOT NULL")]
		public decimal NormalCommission
		{
			get
			{
				return this._NormalCommission;
			}
			set
			{
				if ((this._NormalCommission != value))
				{
					this.OnNormalCommissionChanging(value);
					this.SendPropertyChanging();
					this._NormalCommission = value;
					this.SendPropertyChanged("NormalCommission");
					this.OnNormalCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcessCommission", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExcessCommission
		{
			get
			{
				return this._ExcessCommission;
			}
			set
			{
				if ((this._ExcessCommission != value))
				{
					this.OnExcessCommissionChanging(value);
					this.SendPropertyChanging();
					this._ExcessCommission = value;
					this.SendPropertyChanged("ExcessCommission");
					this.OnExcessCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalCommissionType", DbType="Int")]
		public System.Nullable<int> NormalCommissionType
		{
			get
			{
				return this._NormalCommissionType;
			}
			set
			{
				if ((this._NormalCommissionType != value))
				{
					this.OnNormalCommissionTypeChanging(value);
					this.SendPropertyChanging();
					this._NormalCommissionType = value;
					this.SendPropertyChanged("NormalCommissionType");
					this.OnNormalCommissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcessCommissionType", DbType="Int")]
		public System.Nullable<int> ExcessCommissionType
		{
			get
			{
				return this._ExcessCommissionType;
			}
			set
			{
				if ((this._ExcessCommissionType != value))
				{
					this.OnExcessCommissionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExcessCommissionType = value;
					this.SendPropertyChanged("ExcessCommissionType");
					this.OnExcessCommissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketClassID", DbType="Int")]
		public System.Nullable<int> TicketClassID
		{
			get
			{
				return this._TicketClassID;
			}
			set
			{
				if ((this._TicketClassID != value))
				{
					if (this._TicketClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketClassIDChanging(value);
					this.SendPropertyChanging();
					this._TicketClassID = value;
					this.SendPropertyChanged("TicketClassID");
					this.OnTicketClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_AirlinesCommission", Storage="_Supplier", ThisKey="SupplierID", OtherKey="IID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.AirlinesCommissions.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.AirlinesCommissions.Add(this);
						this._SupplierID = value.IID;
					}
					else
					{
						this._SupplierID = default(long);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketClass_AirlinesCommission", Storage="_TicketClass", ThisKey="TicketClassID", OtherKey="IID", IsForeignKey=true)]
		public TicketClass TicketClass
		{
			get
			{
				return this._TicketClass.Entity;
			}
			set
			{
				TicketClass previousValue = this._TicketClass.Entity;
				if (((previousValue != value) 
							|| (this._TicketClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketClass.Entity = null;
						previousValue.AirlinesCommissions.Remove(this);
					}
					this._TicketClass.Entity = value;
					if ((value != null))
					{
						value.AirlinesCommissions.Add(this);
						this._TicketClassID = value.IID;
					}
					else
					{
						this._TicketClassID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketClass")]
	public partial class TicketClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private EntitySet<AirlinesCommission> _AirlinesCommissions;
		
		private EntitySet<TicketSale> _TicketSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TicketClass()
		{
			this._AirlinesCommissions = new EntitySet<AirlinesCommission>(new Action<AirlinesCommission>(this.attach_AirlinesCommissions), new Action<AirlinesCommission>(this.detach_AirlinesCommissions));
			this._TicketSales = new EntitySet<TicketSale>(new Action<TicketSale>(this.attach_TicketSales), new Action<TicketSale>(this.detach_TicketSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketClass_AirlinesCommission", Storage="_AirlinesCommissions", ThisKey="IID", OtherKey="TicketClassID")]
		public EntitySet<AirlinesCommission> AirlinesCommissions
		{
			get
			{
				return this._AirlinesCommissions;
			}
			set
			{
				this._AirlinesCommissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketClass_TicketSale", Storage="_TicketSales", ThisKey="IID", OtherKey="TicketClassID")]
		public EntitySet<TicketSale> TicketSales
		{
			get
			{
				return this._TicketSales;
			}
			set
			{
				this._TicketSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AirlinesCommissions(AirlinesCommission entity)
		{
			this.SendPropertyChanging();
			entity.TicketClass = this;
		}
		
		private void detach_AirlinesCommissions(AirlinesCommission entity)
		{
			this.SendPropertyChanging();
			entity.TicketClass = null;
		}
		
		private void attach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.TicketClass = this;
		}
		
		private void detach_TicketSales(TicketSale entity)
		{
			this.SendPropertyChanging();
			entity.TicketClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _BranchID;
		
		private int _ReferenceTypeID;
		
		private long _ReferenceID;
		
		private string _PaymentNo;
		
		private string _ReferenceBillNo;
		
		private int _PaymentMode;
		
		private decimal _TotalDueAmount;
		
		private decimal _PaidAmount;
		
		private decimal _LastDueAmount;
		
		private System.DateTime _PaymentDate;
		
		private System.Nullable<System.DateTime> _NextPaymentDate;
		
		private int _Status;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnBranchIDChanging(long value);
    partial void OnBranchIDChanged();
    partial void OnReferenceTypeIDChanging(int value);
    partial void OnReferenceTypeIDChanged();
    partial void OnReferenceIDChanging(long value);
    partial void OnReferenceIDChanged();
    partial void OnPaymentNoChanging(string value);
    partial void OnPaymentNoChanged();
    partial void OnReferenceBillNoChanging(string value);
    partial void OnReferenceBillNoChanged();
    partial void OnPaymentModeChanging(int value);
    partial void OnPaymentModeChanged();
    partial void OnTotalDueAmountChanging(decimal value);
    partial void OnTotalDueAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnLastDueAmountChanging(decimal value);
    partial void OnLastDueAmountChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnNextPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextPaymentDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Payment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="BigInt NOT NULL")]
		public long BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceTypeID", DbType="Int NOT NULL")]
		public int ReferenceTypeID
		{
			get
			{
				return this._ReferenceTypeID;
			}
			set
			{
				if ((this._ReferenceTypeID != value))
				{
					this.OnReferenceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceTypeID = value;
					this.SendPropertyChanged("ReferenceTypeID");
					this.OnReferenceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="BigInt NOT NULL")]
		public long ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this.OnPaymentNoChanging(value);
					this.SendPropertyChanging();
					this._PaymentNo = value;
					this.SendPropertyChanged("PaymentNo");
					this.OnPaymentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceBillNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReferenceBillNo
		{
			get
			{
				return this._ReferenceBillNo;
			}
			set
			{
				if ((this._ReferenceBillNo != value))
				{
					this.OnReferenceBillNoChanging(value);
					this.SendPropertyChanging();
					this._ReferenceBillNo = value;
					this.SendPropertyChanged("ReferenceBillNo");
					this.OnReferenceBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="Int NOT NULL")]
		public int PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDueAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalDueAmount
		{
			get
			{
				return this._TotalDueAmount;
			}
			set
			{
				if ((this._TotalDueAmount != value))
				{
					this.OnTotalDueAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDueAmount = value;
					this.SendPropertyChanged("TotalDueAmount");
					this.OnTotalDueAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDueAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal LastDueAmount
		{
			get
			{
				return this._LastDueAmount;
			}
			set
			{
				if ((this._LastDueAmount != value))
				{
					this.OnLastDueAmountChanging(value);
					this.SendPropertyChanging();
					this._LastDueAmount = value;
					this.SendPropertyChanged("LastDueAmount");
					this.OnLastDueAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextPaymentDate
		{
			get
			{
				return this._NextPaymentDate;
			}
			set
			{
				if ((this._NextPaymentDate != value))
				{
					this.OnNextPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._NextPaymentDate = value;
					this.SendPropertyChanged("NextPaymentDate");
					this.OnNextPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketSaleDetail")]
	public partial class TicketSaleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _TicketSaleID;
		
		private string _PassengerName;
		
		private string _TicketNo;
		
		private decimal _TicketPriceInUSD;
		
		private decimal _TicketPrice;
		
		private decimal _Tax;
		
		private decimal _TotalAmount;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private int _IsRemoved;
		
		private EntityRef<TicketSale> _TicketSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnTicketSaleIDChanging(long value);
    partial void OnTicketSaleIDChanged();
    partial void OnPassengerNameChanging(string value);
    partial void OnPassengerNameChanged();
    partial void OnTicketNoChanging(string value);
    partial void OnTicketNoChanged();
    partial void OnTicketPriceInUSDChanging(decimal value);
    partial void OnTicketPriceInUSDChanged();
    partial void OnTicketPriceChanging(decimal value);
    partial void OnTicketPriceChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public TicketSaleDetail()
		{
			this._TicketSale = default(EntityRef<TicketSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketSaleID", DbType="BigInt NOT NULL")]
		public long TicketSaleID
		{
			get
			{
				return this._TicketSaleID;
			}
			set
			{
				if ((this._TicketSaleID != value))
				{
					if (this._TicketSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketSaleIDChanging(value);
					this.SendPropertyChanging();
					this._TicketSaleID = value;
					this.SendPropertyChanged("TicketSaleID");
					this.OnTicketSaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassengerName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PassengerName
		{
			get
			{
				return this._PassengerName;
			}
			set
			{
				if ((this._PassengerName != value))
				{
					this.OnPassengerNameChanging(value);
					this.SendPropertyChanging();
					this._PassengerName = value;
					this.SendPropertyChanged("PassengerName");
					this.OnPassengerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNo", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TicketNo
		{
			get
			{
				return this._TicketNo;
			}
			set
			{
				if ((this._TicketNo != value))
				{
					this.OnTicketNoChanging(value);
					this.SendPropertyChanging();
					this._TicketNo = value;
					this.SendPropertyChanged("TicketNo");
					this.OnTicketNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPriceInUSD", DbType="Decimal(18,2) NOT NULL")]
		public decimal TicketPriceInUSD
		{
			get
			{
				return this._TicketPriceInUSD;
			}
			set
			{
				if ((this._TicketPriceInUSD != value))
				{
					this.OnTicketPriceInUSDChanging(value);
					this.SendPropertyChanging();
					this._TicketPriceInUSD = value;
					this.SendPropertyChanged("TicketPriceInUSD");
					this.OnTicketPriceInUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal TicketPrice
		{
			get
			{
				return this._TicketPrice;
			}
			set
			{
				if ((this._TicketPrice != value))
				{
					this.OnTicketPriceChanging(value);
					this.SendPropertyChanging();
					this._TicketPrice = value;
					this.SendPropertyChanged("TicketPrice");
					this.OnTicketPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,2) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketSale_TicketSaleDetail", Storage="_TicketSale", ThisKey="TicketSaleID", OtherKey="IID", IsForeignKey=true)]
		public TicketSale TicketSale
		{
			get
			{
				return this._TicketSale.Entity;
			}
			set
			{
				TicketSale previousValue = this._TicketSale.Entity;
				if (((previousValue != value) 
							|| (this._TicketSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketSale.Entity = null;
						previousValue.TicketSaleDetails.Remove(this);
					}
					this._TicketSale.Entity = value;
					if ((value != null))
					{
						value.TicketSaleDetails.Add(this);
						this._TicketSaleID = value.IID;
					}
					else
					{
						this._TicketSaleID = default(long);
					}
					this.SendPropertyChanged("TicketSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChartOfAccount")]
	public partial class Acc_ChartOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _AccountNo;
		
		private string _Name;
		
		private int _IsActive;
		
		private int _AccountTypeID;
		
		private long _ParentID;
		
		private int _Gparent;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<decimal> _OpeningBalance;
		
		private System.Nullable<int> _BalanceSheetItemID;
		
		private EntitySet<Acc_ChartOfAccountSupplier> _Acc_ChartOfAccountSuppliers;
		
		private EntitySet<Acc_ChartOfAccountCustomer> _Acc_ChartOfAccountCustomers;
		
		private EntitySet<Acc_BankLinkToChartOfAccount> _Acc_BankLinkToChartOfAccounts;
		
		private EntitySet<Acc_TransactionDetail> _Acc_TransactionDetails;
		
		private EntitySet<Acc_ChartOfAccountMember> _Acc_ChartOfAccountMembers;
		
		private EntityRef<Acc_Class> _Acc_Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnAccountTypeIDChanging(int value);
    partial void OnAccountTypeIDChanged();
    partial void OnParentIDChanging(long value);
    partial void OnParentIDChanged();
    partial void OnGparentChanging(int value);
    partial void OnGparentChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnOpeningBalanceChanging(System.Nullable<decimal> value);
    partial void OnOpeningBalanceChanged();
    partial void OnBalanceSheetItemIDChanging(System.Nullable<int> value);
    partial void OnBalanceSheetItemIDChanged();
    #endregion
		
		public Acc_ChartOfAccount()
		{
			this._Acc_ChartOfAccountSuppliers = new EntitySet<Acc_ChartOfAccountSupplier>(new Action<Acc_ChartOfAccountSupplier>(this.attach_Acc_ChartOfAccountSuppliers), new Action<Acc_ChartOfAccountSupplier>(this.detach_Acc_ChartOfAccountSuppliers));
			this._Acc_ChartOfAccountCustomers = new EntitySet<Acc_ChartOfAccountCustomer>(new Action<Acc_ChartOfAccountCustomer>(this.attach_Acc_ChartOfAccountCustomers), new Action<Acc_ChartOfAccountCustomer>(this.detach_Acc_ChartOfAccountCustomers));
			this._Acc_BankLinkToChartOfAccounts = new EntitySet<Acc_BankLinkToChartOfAccount>(new Action<Acc_BankLinkToChartOfAccount>(this.attach_Acc_BankLinkToChartOfAccounts), new Action<Acc_BankLinkToChartOfAccount>(this.detach_Acc_BankLinkToChartOfAccounts));
			this._Acc_TransactionDetails = new EntitySet<Acc_TransactionDetail>(new Action<Acc_TransactionDetail>(this.attach_Acc_TransactionDetails), new Action<Acc_TransactionDetail>(this.detach_Acc_TransactionDetails));
			this._Acc_ChartOfAccountMembers = new EntitySet<Acc_ChartOfAccountMember>(new Action<Acc_ChartOfAccountMember>(this.attach_Acc_ChartOfAccountMembers), new Action<Acc_ChartOfAccountMember>(this.detach_Acc_ChartOfAccountMembers));
			this._Acc_Class = default(EntityRef<Acc_Class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int NOT NULL")]
		public int IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="Int NOT NULL")]
		public int AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt NOT NULL")]
		public long ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gparent", DbType="Int NOT NULL")]
		public int Gparent
		{
			get
			{
				return this._Gparent;
			}
			set
			{
				if ((this._Gparent != value))
				{
					if (this._Acc_Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGparentChanging(value);
					this.SendPropertyChanging();
					this._Gparent = value;
					this.SendPropertyChanged("Gparent");
					this.OnGparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this.OnOpeningBalanceChanging(value);
					this.SendPropertyChanging();
					this._OpeningBalance = value;
					this.SendPropertyChanged("OpeningBalance");
					this.OnOpeningBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceSheetItemID", DbType="Int")]
		public System.Nullable<int> BalanceSheetItemID
		{
			get
			{
				return this._BalanceSheetItemID;
			}
			set
			{
				if ((this._BalanceSheetItemID != value))
				{
					this.OnBalanceSheetItemIDChanging(value);
					this.SendPropertyChanging();
					this._BalanceSheetItemID = value;
					this.SendPropertyChanged("BalanceSheetItemID");
					this.OnBalanceSheetItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountSupplier", Storage="_Acc_ChartOfAccountSuppliers", ThisKey="IID", OtherKey="ChartOfAccountID")]
		public EntitySet<Acc_ChartOfAccountSupplier> Acc_ChartOfAccountSuppliers
		{
			get
			{
				return this._Acc_ChartOfAccountSuppliers;
			}
			set
			{
				this._Acc_ChartOfAccountSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountCustomer", Storage="_Acc_ChartOfAccountCustomers", ThisKey="IID", OtherKey="ChartOfAccountID")]
		public EntitySet<Acc_ChartOfAccountCustomer> Acc_ChartOfAccountCustomers
		{
			get
			{
				return this._Acc_ChartOfAccountCustomers;
			}
			set
			{
				this._Acc_ChartOfAccountCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_BankLinkToChartOfAccount", Storage="_Acc_BankLinkToChartOfAccounts", ThisKey="IID", OtherKey="ChartOfAccountID")]
		public EntitySet<Acc_BankLinkToChartOfAccount> Acc_BankLinkToChartOfAccounts
		{
			get
			{
				return this._Acc_BankLinkToChartOfAccounts;
			}
			set
			{
				this._Acc_BankLinkToChartOfAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_TransactionDetail", Storage="_Acc_TransactionDetails", ThisKey="IID", OtherKey="AccountID")]
		public EntitySet<Acc_TransactionDetail> Acc_TransactionDetails
		{
			get
			{
				return this._Acc_TransactionDetails;
			}
			set
			{
				this._Acc_TransactionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountMember", Storage="_Acc_ChartOfAccountMembers", ThisKey="IID", OtherKey="ChartofAccountID")]
		public EntitySet<Acc_ChartOfAccountMember> Acc_ChartOfAccountMembers
		{
			get
			{
				return this._Acc_ChartOfAccountMembers;
			}
			set
			{
				this._Acc_ChartOfAccountMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_Class_Acc_ChartOfAccount", Storage="_Acc_Class", ThisKey="Gparent", OtherKey="IID", IsForeignKey=true)]
		public Acc_Class Acc_Class
		{
			get
			{
				return this._Acc_Class.Entity;
			}
			set
			{
				Acc_Class previousValue = this._Acc_Class.Entity;
				if (((previousValue != value) 
							|| (this._Acc_Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_Class.Entity = null;
						previousValue.Acc_ChartOfAccounts.Remove(this);
					}
					this._Acc_Class.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccounts.Add(this);
						this._Gparent = value.IID;
					}
					else
					{
						this._Gparent = default(int);
					}
					this.SendPropertyChanged("Acc_Class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Acc_ChartOfAccountSuppliers(Acc_ChartOfAccountSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = this;
		}
		
		private void detach_Acc_ChartOfAccountSuppliers(Acc_ChartOfAccountSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = null;
		}
		
		private void attach_Acc_ChartOfAccountCustomers(Acc_ChartOfAccountCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = this;
		}
		
		private void detach_Acc_ChartOfAccountCustomers(Acc_ChartOfAccountCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = null;
		}
		
		private void attach_Acc_BankLinkToChartOfAccounts(Acc_BankLinkToChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = this;
		}
		
		private void detach_Acc_BankLinkToChartOfAccounts(Acc_BankLinkToChartOfAccount entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = null;
		}
		
		private void attach_Acc_TransactionDetails(Acc_TransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = this;
		}
		
		private void detach_Acc_TransactionDetails(Acc_TransactionDetail entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = null;
		}
		
		private void attach_Acc_ChartOfAccountMembers(Acc_ChartOfAccountMember entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = this;
		}
		
		private void detach_Acc_ChartOfAccountMembers(Acc_ChartOfAccountMember entity)
		{
			this.SendPropertyChanging();
			entity.Acc_ChartOfAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketSale")]
	public partial class TicketSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private int _BranchID;
		
		private System.DateTime _TransactionDate;
		
		private long _AirlinesID;
		
		private long _CustomerID;
		
		private long _SaleBy;
		
		private string _TransactionNo;
		
		private string _Departure;
		
		private string _Destination;
		
		private string _BillNo;
		
		private decimal _TicketPriceInUSD;
		
		private decimal _USDRate;
		
		private decimal _TicketPriceInTaka;
		
		private decimal _AirLinesCommissionInAmount;
		
		private decimal _AirlinesPayable;
		
		private System.DateTime _AirlinesPaymentDate;
		
		private int _CustomerDiscountType;
		
		private decimal _CustomerDiscount;
		
		private decimal _CustomerDiscountInAmount;
		
		private decimal _CustomerReceivable;
		
		private decimal _CustomerDue;
		
		private decimal _CustomerPaid;
		
		private System.Nullable<System.DateTime> _CustomerReceivableDate;
		
		private decimal _TotalDiscount;
		
		private decimal _SpecialDiscount;
		
		private decimal _VAT;
		
		private decimal _TAX;
		
		private bool _Hold;
		
		private string _Refernce;
		
		private int _FinancialYearID;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private int _IsRemoved;
		
		private string _Remarks;
		
		private System.Nullable<int> _TicketClassID;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<System.DateTime> _DepartureDate;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private string _Sector;
		
		private System.Nullable<long> _DestinationCountry;
		
		private EntitySet<TicketSaleDetail> _TicketSaleDetails;
		
		private EntityRef<BranchInfo> _BranchInfo;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<TicketClass> _TicketClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnAirlinesIDChanging(long value);
    partial void OnAirlinesIDChanged();
    partial void OnCustomerIDChanging(long value);
    partial void OnCustomerIDChanged();
    partial void OnSaleByChanging(long value);
    partial void OnSaleByChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnDepartureChanging(string value);
    partial void OnDepartureChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnBillNoChanging(string value);
    partial void OnBillNoChanged();
    partial void OnTicketPriceInUSDChanging(decimal value);
    partial void OnTicketPriceInUSDChanged();
    partial void OnUSDRateChanging(decimal value);
    partial void OnUSDRateChanged();
    partial void OnTicketPriceInTakaChanging(decimal value);
    partial void OnTicketPriceInTakaChanged();
    partial void OnAirLinesCommissionInAmountChanging(decimal value);
    partial void OnAirLinesCommissionInAmountChanged();
    partial void OnAirlinesPayableChanging(decimal value);
    partial void OnAirlinesPayableChanged();
    partial void OnAirlinesPaymentDateChanging(System.DateTime value);
    partial void OnAirlinesPaymentDateChanged();
    partial void OnCustomerDiscountTypeChanging(int value);
    partial void OnCustomerDiscountTypeChanged();
    partial void OnCustomerDiscountChanging(decimal value);
    partial void OnCustomerDiscountChanged();
    partial void OnCustomerDiscountInAmountChanging(decimal value);
    partial void OnCustomerDiscountInAmountChanged();
    partial void OnCustomerReceivableChanging(decimal value);
    partial void OnCustomerReceivableChanged();
    partial void OnCustomerDueChanging(decimal value);
    partial void OnCustomerDueChanged();
    partial void OnCustomerPaidChanging(decimal value);
    partial void OnCustomerPaidChanged();
    partial void OnCustomerReceivableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerReceivableDateChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnSpecialDiscountChanging(decimal value);
    partial void OnSpecialDiscountChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnTAXChanging(decimal value);
    partial void OnTAXChanged();
    partial void OnHoldChanging(bool value);
    partial void OnHoldChanged();
    partial void OnRefernceChanging(string value);
    partial void OnRefernceChanged();
    partial void OnFinancialYearIDChanging(int value);
    partial void OnFinancialYearIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnTicketClassIDChanging(System.Nullable<int> value);
    partial void OnTicketClassIDChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnDepartureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartureDateChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnSectorChanging(string value);
    partial void OnSectorChanged();
    partial void OnDestinationCountryChanging(System.Nullable<long> value);
    partial void OnDestinationCountryChanged();
    #endregion
		
		public TicketSale()
		{
			this._TicketSaleDetails = new EntitySet<TicketSaleDetail>(new Action<TicketSaleDetail>(this.attach_TicketSaleDetails), new Action<TicketSaleDetail>(this.detach_TicketSaleDetails));
			this._BranchInfo = default(EntityRef<BranchInfo>);
			this._Country = default(EntityRef<Country>);
			this._Customer = default(EntityRef<Customer>);
			this._Supplier = default(EntityRef<Supplier>);
			this._TicketClass = default(EntityRef<TicketClass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._BranchInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlinesID", DbType="BigInt NOT NULL")]
		public long AirlinesID
		{
			get
			{
				return this._AirlinesID;
			}
			set
			{
				if ((this._AirlinesID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAirlinesIDChanging(value);
					this.SendPropertyChanging();
					this._AirlinesID = value;
					this.SendPropertyChanged("AirlinesID");
					this.OnAirlinesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="BigInt NOT NULL")]
		public long CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleBy", DbType="BigInt NOT NULL")]
		public long SaleBy
		{
			get
			{
				return this._SaleBy;
			}
			set
			{
				if ((this._SaleBy != value))
				{
					this.OnSaleByChanging(value);
					this.SendPropertyChanging();
					this._SaleBy = value;
					this.SendPropertyChanged("SaleBy");
					this.OnSaleByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionNo
		{
			get
			{
				return this._TransactionNo;
			}
			set
			{
				if ((this._TransactionNo != value))
				{
					this.OnTransactionNoChanging(value);
					this.SendPropertyChanging();
					this._TransactionNo = value;
					this.SendPropertyChanged("TransactionNo");
					this.OnTransactionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillNo
		{
			get
			{
				return this._BillNo;
			}
			set
			{
				if ((this._BillNo != value))
				{
					this.OnBillNoChanging(value);
					this.SendPropertyChanging();
					this._BillNo = value;
					this.SendPropertyChanged("BillNo");
					this.OnBillNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPriceInUSD", DbType="Decimal(18,2) NOT NULL")]
		public decimal TicketPriceInUSD
		{
			get
			{
				return this._TicketPriceInUSD;
			}
			set
			{
				if ((this._TicketPriceInUSD != value))
				{
					this.OnTicketPriceInUSDChanging(value);
					this.SendPropertyChanging();
					this._TicketPriceInUSD = value;
					this.SendPropertyChanged("TicketPriceInUSD");
					this.OnTicketPriceInUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USDRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal USDRate
		{
			get
			{
				return this._USDRate;
			}
			set
			{
				if ((this._USDRate != value))
				{
					this.OnUSDRateChanging(value);
					this.SendPropertyChanging();
					this._USDRate = value;
					this.SendPropertyChanged("USDRate");
					this.OnUSDRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPriceInTaka", DbType="Decimal(18,2) NOT NULL")]
		public decimal TicketPriceInTaka
		{
			get
			{
				return this._TicketPriceInTaka;
			}
			set
			{
				if ((this._TicketPriceInTaka != value))
				{
					this.OnTicketPriceInTakaChanging(value);
					this.SendPropertyChanging();
					this._TicketPriceInTaka = value;
					this.SendPropertyChanged("TicketPriceInTaka");
					this.OnTicketPriceInTakaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirLinesCommissionInAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal AirLinesCommissionInAmount
		{
			get
			{
				return this._AirLinesCommissionInAmount;
			}
			set
			{
				if ((this._AirLinesCommissionInAmount != value))
				{
					this.OnAirLinesCommissionInAmountChanging(value);
					this.SendPropertyChanging();
					this._AirLinesCommissionInAmount = value;
					this.SendPropertyChanged("AirLinesCommissionInAmount");
					this.OnAirLinesCommissionInAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlinesPayable", DbType="Decimal(18,2) NOT NULL")]
		public decimal AirlinesPayable
		{
			get
			{
				return this._AirlinesPayable;
			}
			set
			{
				if ((this._AirlinesPayable != value))
				{
					this.OnAirlinesPayableChanging(value);
					this.SendPropertyChanging();
					this._AirlinesPayable = value;
					this.SendPropertyChanged("AirlinesPayable");
					this.OnAirlinesPayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirlinesPaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AirlinesPaymentDate
		{
			get
			{
				return this._AirlinesPaymentDate;
			}
			set
			{
				if ((this._AirlinesPaymentDate != value))
				{
					this.OnAirlinesPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._AirlinesPaymentDate = value;
					this.SendPropertyChanged("AirlinesPaymentDate");
					this.OnAirlinesPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDiscountType", DbType="Int NOT NULL")]
		public int CustomerDiscountType
		{
			get
			{
				return this._CustomerDiscountType;
			}
			set
			{
				if ((this._CustomerDiscountType != value))
				{
					this.OnCustomerDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerDiscountType = value;
					this.SendPropertyChanged("CustomerDiscountType");
					this.OnCustomerDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDiscount", DbType="Decimal(18,2) NOT NULL")]
		public decimal CustomerDiscount
		{
			get
			{
				return this._CustomerDiscount;
			}
			set
			{
				if ((this._CustomerDiscount != value))
				{
					this.OnCustomerDiscountChanging(value);
					this.SendPropertyChanging();
					this._CustomerDiscount = value;
					this.SendPropertyChanged("CustomerDiscount");
					this.OnCustomerDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDiscountInAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal CustomerDiscountInAmount
		{
			get
			{
				return this._CustomerDiscountInAmount;
			}
			set
			{
				if ((this._CustomerDiscountInAmount != value))
				{
					this.OnCustomerDiscountInAmountChanging(value);
					this.SendPropertyChanging();
					this._CustomerDiscountInAmount = value;
					this.SendPropertyChanged("CustomerDiscountInAmount");
					this.OnCustomerDiscountInAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReceivable", DbType="Decimal(18,2) NOT NULL")]
		public decimal CustomerReceivable
		{
			get
			{
				return this._CustomerReceivable;
			}
			set
			{
				if ((this._CustomerReceivable != value))
				{
					this.OnCustomerReceivableChanging(value);
					this.SendPropertyChanging();
					this._CustomerReceivable = value;
					this.SendPropertyChanged("CustomerReceivable");
					this.OnCustomerReceivableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDue", DbType="Decimal(18,2) NOT NULL")]
		public decimal CustomerDue
		{
			get
			{
				return this._CustomerDue;
			}
			set
			{
				if ((this._CustomerDue != value))
				{
					this.OnCustomerDueChanging(value);
					this.SendPropertyChanging();
					this._CustomerDue = value;
					this.SendPropertyChanged("CustomerDue");
					this.OnCustomerDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPaid", DbType="Decimal(18,2) NOT NULL")]
		public decimal CustomerPaid
		{
			get
			{
				return this._CustomerPaid;
			}
			set
			{
				if ((this._CustomerPaid != value))
				{
					this.OnCustomerPaidChanging(value);
					this.SendPropertyChanging();
					this._CustomerPaid = value;
					this.SendPropertyChanged("CustomerPaid");
					this.OnCustomerPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReceivableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomerReceivableDate
		{
			get
			{
				return this._CustomerReceivableDate;
			}
			set
			{
				if ((this._CustomerReceivableDate != value))
				{
					this.OnCustomerReceivableDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerReceivableDate = value;
					this.SendPropertyChanged("CustomerReceivableDate");
					this.OnCustomerReceivableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialDiscount", DbType="Decimal(18,2) NOT NULL")]
		public decimal SpecialDiscount
		{
			get
			{
				return this._SpecialDiscount;
			}
			set
			{
				if ((this._SpecialDiscount != value))
				{
					this.OnSpecialDiscountChanging(value);
					this.SendPropertyChanging();
					this._SpecialDiscount = value;
					this.SendPropertyChanged("SpecialDiscount");
					this.OnSpecialDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAX", DbType="Decimal(18,2) NOT NULL")]
		public decimal TAX
		{
			get
			{
				return this._TAX;
			}
			set
			{
				if ((this._TAX != value))
				{
					this.OnTAXChanging(value);
					this.SendPropertyChanging();
					this._TAX = value;
					this.SendPropertyChanged("TAX");
					this.OnTAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hold", DbType="Bit NOT NULL")]
		public bool Hold
		{
			get
			{
				return this._Hold;
			}
			set
			{
				if ((this._Hold != value))
				{
					this.OnHoldChanging(value);
					this.SendPropertyChanging();
					this._Hold = value;
					this.SendPropertyChanged("Hold");
					this.OnHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refernce", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Refernce
		{
			get
			{
				return this._Refernce;
			}
			set
			{
				if ((this._Refernce != value))
				{
					this.OnRefernceChanging(value);
					this.SendPropertyChanging();
					this._Refernce = value;
					this.SendPropertyChanged("Refernce");
					this.OnRefernceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialYearID", DbType="Int NOT NULL")]
		public int FinancialYearID
		{
			get
			{
				return this._FinancialYearID;
			}
			set
			{
				if ((this._FinancialYearID != value))
				{
					this.OnFinancialYearIDChanging(value);
					this.SendPropertyChanging();
					this._FinancialYearID = value;
					this.SendPropertyChanged("FinancialYearID");
					this.OnFinancialYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketClassID", DbType="Int")]
		public System.Nullable<int> TicketClassID
		{
			get
			{
				return this._TicketClassID;
			}
			set
			{
				if ((this._TicketClassID != value))
				{
					if (this._TicketClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketClassIDChanging(value);
					this.SendPropertyChanging();
					this._TicketClassID = value;
					this.SendPropertyChanged("TicketClassID");
					this.OnTicketClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DepartureDate
		{
			get
			{
				return this._DepartureDate;
			}
			set
			{
				if ((this._DepartureDate != value))
				{
					this.OnDepartureDateChanging(value);
					this.SendPropertyChanging();
					this._DepartureDate = value;
					this.SendPropertyChanged("DepartureDate");
					this.OnDepartureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="NVarChar(250)")]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this.OnSectorChanging(value);
					this.SendPropertyChanging();
					this._Sector = value;
					this.SendPropertyChanged("Sector");
					this.OnSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationCountry", DbType="BigInt")]
		public System.Nullable<long> DestinationCountry
		{
			get
			{
				return this._DestinationCountry;
			}
			set
			{
				if ((this._DestinationCountry != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationCountryChanging(value);
					this.SendPropertyChanging();
					this._DestinationCountry = value;
					this.SendPropertyChanged("DestinationCountry");
					this.OnDestinationCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketSale_TicketSaleDetail", Storage="_TicketSaleDetails", ThisKey="IID", OtherKey="TicketSaleID")]
		public EntitySet<TicketSaleDetail> TicketSaleDetails
		{
			get
			{
				return this._TicketSaleDetails;
			}
			set
			{
				this._TicketSaleDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchInfo_TicketSale", Storage="_BranchInfo", ThisKey="BranchID", OtherKey="IID", IsForeignKey=true)]
		public BranchInfo BranchInfo
		{
			get
			{
				return this._BranchInfo.Entity;
			}
			set
			{
				BranchInfo previousValue = this._BranchInfo.Entity;
				if (((previousValue != value) 
							|| (this._BranchInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchInfo.Entity = null;
						previousValue.TicketSales.Remove(this);
					}
					this._BranchInfo.Entity = value;
					if ((value != null))
					{
						value.TicketSales.Add(this);
						this._BranchID = value.IID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("BranchInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_TicketSale", Storage="_Country", ThisKey="DestinationCountry", OtherKey="IID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.TicketSales.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.TicketSales.Add(this);
						this._DestinationCountry = value.IID;
					}
					else
					{
						this._DestinationCountry = default(Nullable<long>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TicketSale", Storage="_Customer", ThisKey="CustomerID", OtherKey="IID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.TicketSales.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.TicketSales.Add(this);
						this._CustomerID = value.IID;
					}
					else
					{
						this._CustomerID = default(long);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_TicketSale", Storage="_Supplier", ThisKey="AirlinesID", OtherKey="IID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.TicketSales.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.TicketSales.Add(this);
						this._AirlinesID = value.IID;
					}
					else
					{
						this._AirlinesID = default(long);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketClass_TicketSale", Storage="_TicketClass", ThisKey="TicketClassID", OtherKey="IID", IsForeignKey=true)]
		public TicketClass TicketClass
		{
			get
			{
				return this._TicketClass.Entity;
			}
			set
			{
				TicketClass previousValue = this._TicketClass.Entity;
				if (((previousValue != value) 
							|| (this._TicketClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketClass.Entity = null;
						previousValue.TicketSales.Remove(this);
					}
					this._TicketClass.Entity = value;
					if ((value != null))
					{
						value.TicketSales.Add(this);
						this._TicketClassID = value.IID;
					}
					else
					{
						this._TicketClassID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TicketSaleDetails(TicketSaleDetail entity)
		{
			this.SendPropertyChanging();
			entity.TicketSale = this;
		}
		
		private void detach_TicketSaleDetails(TicketSaleDetail entity)
		{
			this.SendPropertyChanging();
			entity.TicketSale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyInfo")]
	public partial class CompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private long _CityID;
		
		private long _CountryID;
		
		private string _Zip;
		
		private string _Website;
		
		private string _Slogan;
		
		private string _LogoLocation;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private string _Description;
		
		private string _VATRegistrationNumber;
		
		private string _TINNumber;
		
		private string _LicencedNumber;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private EntitySet<BranchInfo> _BranchInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCityIDChanging(long value);
    partial void OnCityIDChanged();
    partial void OnCountryIDChanging(long value);
    partial void OnCountryIDChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnSloganChanging(string value);
    partial void OnSloganChanged();
    partial void OnLogoLocationChanging(string value);
    partial void OnLogoLocationChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVATRegistrationNumberChanging(string value);
    partial void OnVATRegistrationNumberChanged();
    partial void OnTINNumberChanging(string value);
    partial void OnTINNumberChanged();
    partial void OnLicencedNumberChanging(string value);
    partial void OnLicencedNumberChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public CompanyInfo()
		{
			this._BranchInfos = new EntitySet<BranchInfo>(new Action<BranchInfo>(this.attach_BranchInfos), new Action<BranchInfo>(this.detach_BranchInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="BigInt NOT NULL")]
		public long CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt NOT NULL")]
		public long CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slogan", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Slogan
		{
			get
			{
				return this._Slogan;
			}
			set
			{
				if ((this._Slogan != value))
				{
					this.OnSloganChanging(value);
					this.SendPropertyChanging();
					this._Slogan = value;
					this.SendPropertyChanged("Slogan");
					this.OnSloganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoLocation", DbType="NVarChar(500)")]
		public string LogoLocation
		{
			get
			{
				return this._LogoLocation;
			}
			set
			{
				if ((this._LogoLocation != value))
				{
					this.OnLogoLocationChanging(value);
					this.SendPropertyChanging();
					this._LogoLocation = value;
					this.SendPropertyChanged("LogoLocation");
					this.OnLogoLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATRegistrationNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string VATRegistrationNumber
		{
			get
			{
				return this._VATRegistrationNumber;
			}
			set
			{
				if ((this._VATRegistrationNumber != value))
				{
					this.OnVATRegistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._VATRegistrationNumber = value;
					this.SendPropertyChanged("VATRegistrationNumber");
					this.OnVATRegistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TINNumber
		{
			get
			{
				return this._TINNumber;
			}
			set
			{
				if ((this._TINNumber != value))
				{
					this.OnTINNumberChanging(value);
					this.SendPropertyChanging();
					this._TINNumber = value;
					this.SendPropertyChanged("TINNumber");
					this.OnTINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicencedNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LicencedNumber
		{
			get
			{
				return this._LicencedNumber;
			}
			set
			{
				if ((this._LicencedNumber != value))
				{
					this.OnLicencedNumberChanging(value);
					this.SendPropertyChanging();
					this._LicencedNumber = value;
					this.SendPropertyChanged("LicencedNumber");
					this.OnLicencedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(100)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(100)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyInfo_BranchInfo", Storage="_BranchInfos", ThisKey="IID", OtherKey="CompanyID")]
		public EntitySet<BranchInfo> BranchInfos
		{
			get
			{
				return this._BranchInfos;
			}
			set
			{
				this._BranchInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchInfos(BranchInfo entity)
		{
			this.SendPropertyChanging();
			entity.CompanyInfo = this;
		}
		
		private void detach_BranchInfos(BranchInfo entity)
		{
			this.SendPropertyChanging();
			entity.CompanyInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetInformation")]
	public partial class AssetInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private System.Nullable<long> _AssetTypeID;
		
		private string _Name;
		
		private string _Serial;
		
		private System.Nullable<decimal> _Qty;
		
		private string _FARNo;
		
		private string _Location;
		
		private string _Origin;
		
		private string _PurchesYear;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Asset_Type> _Asset_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnAssetTypeIDChanging(System.Nullable<long> value);
    partial void OnAssetTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnQtyChanging(System.Nullable<decimal> value);
    partial void OnQtyChanged();
    partial void OnFARNoChanging(string value);
    partial void OnFARNoChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnPurchesYearChanging(string value);
    partial void OnPurchesYearChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public AssetInformation()
		{
			this._Asset_Type = default(EntityRef<Asset_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeID", DbType="BigInt")]
		public System.Nullable<long> AssetTypeID
		{
			get
			{
				return this._AssetTypeID;
			}
			set
			{
				if ((this._AssetTypeID != value))
				{
					if (this._Asset_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeID = value;
					this.SendPropertyChanged("AssetTypeID");
					this.OnAssetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(50)")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FARNo", DbType="NVarChar(50)")]
		public string FARNo
		{
			get
			{
				return this._FARNo;
			}
			set
			{
				if ((this._FARNo != value))
				{
					this.OnFARNoChanging(value);
					this.SendPropertyChanging();
					this._FARNo = value;
					this.SendPropertyChanged("FARNo");
					this.OnFARNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="NVarChar(50)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchesYear", DbType="NVarChar(50)")]
		public string PurchesYear
		{
			get
			{
				return this._PurchesYear;
			}
			set
			{
				if ((this._PurchesYear != value))
				{
					this.OnPurchesYearChanging(value);
					this.SendPropertyChanging();
					this._PurchesYear = value;
					this.SendPropertyChanged("PurchesYear");
					this.OnPurchesYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_Type_AssetInformation", Storage="_Asset_Type", ThisKey="AssetTypeID", OtherKey="IID", IsForeignKey=true)]
		public Asset_Type Asset_Type
		{
			get
			{
				return this._Asset_Type.Entity;
			}
			set
			{
				Asset_Type previousValue = this._Asset_Type.Entity;
				if (((previousValue != value) 
							|| (this._Asset_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asset_Type.Entity = null;
						previousValue.AssetInformations.Remove(this);
					}
					this._Asset_Type.Entity = value;
					if ((value != null))
					{
						value.AssetInformations.Add(this);
						this._AssetTypeID = value.IID;
					}
					else
					{
						this._AssetTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Asset_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetDepriciationRatio")]
	public partial class AssetDepriciationRatio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private System.Nullable<long> _AssettypeID;
		
		private System.Nullable<decimal> _Ratio;
		
		private string _AssetYear;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Asset_Type> _Asset_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnAssettypeIDChanging(System.Nullable<long> value);
    partial void OnAssettypeIDChanged();
    partial void OnRatioChanging(System.Nullable<decimal> value);
    partial void OnRatioChanged();
    partial void OnAssetYearChanging(string value);
    partial void OnAssetYearChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public AssetDepriciationRatio()
		{
			this._Asset_Type = default(EntityRef<Asset_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssettypeID", DbType="BigInt")]
		public System.Nullable<long> AssettypeID
		{
			get
			{
				return this._AssettypeID;
			}
			set
			{
				if ((this._AssettypeID != value))
				{
					if (this._Asset_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssettypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssettypeID = value;
					this.SendPropertyChanged("AssettypeID");
					this.OnAssettypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratio", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this.OnRatioChanging(value);
					this.SendPropertyChanging();
					this._Ratio = value;
					this.SendPropertyChanged("Ratio");
					this.OnRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetYear", DbType="NVarChar(50)")]
		public string AssetYear
		{
			get
			{
				return this._AssetYear;
			}
			set
			{
				if ((this._AssetYear != value))
				{
					this.OnAssetYearChanging(value);
					this.SendPropertyChanging();
					this._AssetYear = value;
					this.SendPropertyChanged("AssetYear");
					this.OnAssetYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_Type_AssetDepriciationRatio", Storage="_Asset_Type", ThisKey="AssettypeID", OtherKey="IID", IsForeignKey=true)]
		public Asset_Type Asset_Type
		{
			get
			{
				return this._Asset_Type.Entity;
			}
			set
			{
				Asset_Type previousValue = this._Asset_Type.Entity;
				if (((previousValue != value) 
							|| (this._Asset_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asset_Type.Entity = null;
						previousValue.AssetDepriciationRatios.Remove(this);
					}
					this._Asset_Type.Entity = value;
					if ((value != null))
					{
						value.AssetDepriciationRatios.Add(this);
						this._AssettypeID = value.IID;
					}
					else
					{
						this._AssettypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Asset_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asset_Type")]
	public partial class Asset_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private string _Code;
		
		private EntitySet<AssetInformation> _AssetInformations;
		
		private EntitySet<AssetDepriciationRatio> _AssetDepriciationRatios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Asset_Type()
		{
			this._AssetInformations = new EntitySet<AssetInformation>(new Action<AssetInformation>(this.attach_AssetInformations), new Action<AssetInformation>(this.detach_AssetInformations));
			this._AssetDepriciationRatios = new EntitySet<AssetDepriciationRatio>(new Action<AssetDepriciationRatio>(this.attach_AssetDepriciationRatios), new Action<AssetDepriciationRatio>(this.detach_AssetDepriciationRatios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_Type_AssetInformation", Storage="_AssetInformations", ThisKey="IID", OtherKey="AssetTypeID")]
		public EntitySet<AssetInformation> AssetInformations
		{
			get
			{
				return this._AssetInformations;
			}
			set
			{
				this._AssetInformations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_Type_AssetDepriciationRatio", Storage="_AssetDepriciationRatios", ThisKey="IID", OtherKey="AssettypeID")]
		public EntitySet<AssetDepriciationRatio> AssetDepriciationRatios
		{
			get
			{
				return this._AssetDepriciationRatios;
			}
			set
			{
				this._AssetDepriciationRatios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetInformations(AssetInformation entity)
		{
			this.SendPropertyChanging();
			entity.Asset_Type = this;
		}
		
		private void detach_AssetInformations(AssetInformation entity)
		{
			this.SendPropertyChanging();
			entity.Asset_Type = null;
		}
		
		private void attach_AssetDepriciationRatios(AssetDepriciationRatio entity)
		{
			this.SendPropertyChanging();
			entity.Asset_Type = this;
		}
		
		private void detach_AssetDepriciationRatios(AssetDepriciationRatio entity)
		{
			this.SendPropertyChanging();
			entity.Asset_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyType")]
	public partial class CompanyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public CompanyType()
		{
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyType_Member", Storage="_Members", ThisKey="ID", OtherKey="CompanyTypeID")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.CompanyType = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.CompanyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyCategory")]
	public partial class CompanyCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public CompanyCategory()
		{
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_Member", Storage="_Members", ThisKey="ID", OtherKey="CompanyCategoryID")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.CompanyCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_DocumentType")]
	public partial class Ins_DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private EntitySet<MemberDocument> _MemberDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Ins_DocumentType()
		{
			this._MemberDocuments = new EntitySet<MemberDocument>(new Action<MemberDocument>(this.attach_MemberDocuments), new Action<MemberDocument>(this.detach_MemberDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_DocumentType_MemberDocument", Storage="_MemberDocuments", ThisKey="IID", OtherKey="DocumentTypeID")]
		public EntitySet<MemberDocument> MemberDocuments
		{
			get
			{
				return this._MemberDocuments;
			}
			set
			{
				this._MemberDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberDocuments(MemberDocument entity)
		{
			this.SendPropertyChanging();
			entity.Ins_DocumentType = this;
		}
		
		private void detach_MemberDocuments(MemberDocument entity)
		{
			this.SendPropertyChanging();
			entity.Ins_DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_ItemCategory")]
	public partial class Ins_ItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Ins_Item> _Ins_Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_ItemCategory()
		{
			this._Ins_Items = new EntitySet<Ins_Item>(new Action<Ins_Item>(this.attach_Ins_Items), new Action<Ins_Item>(this.detach_Ins_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ItemCategory_Ins_Item", Storage="_Ins_Items", ThisKey="IID", OtherKey="CategoryID")]
		public EntitySet<Ins_Item> Ins_Items
		{
			get
			{
				return this._Ins_Items;
			}
			set
			{
				this._Ins_Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_Items(Ins_Item entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ItemCategory = this;
		}
		
		private void detach_Ins_Items(Ins_Item entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ItemCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberVerification")]
	public partial class Ins_MemberVerification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _SubmitedDate;
		
		private string _Comments;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSubmitedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitedDateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public Ins_MemberVerification()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitedDate
		{
			get
			{
				return this._SubmitedDate;
			}
			set
			{
				if ((this._SubmitedDate != value))
				{
					this.OnSubmitedDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitedDate = value;
					this.SendPropertyChanged("SubmitedDate");
					this.OnSubmitedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(500)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberVerification", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MemberVerifications.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberVerifications.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberVerificationDetail")]
	public partial class Ins_MemberVerificationDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private int _VerificationTypeId;
		
		private int _Status;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private System.Nullable<long> _UpdatedBy;
		
		private EntityRef<Ins_VerificationType> _Ins_VerificationType;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnVerificationTypeIdChanging(int value);
    partial void OnVerificationTypeIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnUpdatedByChanging(System.Nullable<long> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Ins_MemberVerificationDetail()
		{
			this._Ins_VerificationType = default(EntityRef<Ins_VerificationType>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationTypeId", DbType="Int NOT NULL")]
		public int VerificationTypeId
		{
			get
			{
				return this._VerificationTypeId;
			}
			set
			{
				if ((this._VerificationTypeId != value))
				{
					if (this._Ins_VerificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerificationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VerificationTypeId = value;
					this.SendPropertyChanged("VerificationTypeId");
					this.OnVerificationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="BigInt")]
		public System.Nullable<long> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_VerificationType_Ins_MemberVerificationDetail", Storage="_Ins_VerificationType", ThisKey="VerificationTypeId", OtherKey="IID", IsForeignKey=true)]
		public Ins_VerificationType Ins_VerificationType
		{
			get
			{
				return this._Ins_VerificationType.Entity;
			}
			set
			{
				Ins_VerificationType previousValue = this._Ins_VerificationType.Entity;
				if (((previousValue != value) 
							|| (this._Ins_VerificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_VerificationType.Entity = null;
						previousValue.Ins_MemberVerificationDetails.Remove(this);
					}
					this._Ins_VerificationType.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberVerificationDetails.Add(this);
						this._VerificationTypeId = value.IID;
					}
					else
					{
						this._VerificationTypeId = default(int);
					}
					this.SendPropertyChanged("Ins_VerificationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberVerificationDetail", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MemberVerificationDetails.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberVerificationDetails.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_VerificationType")]
	public partial class Ins_VerificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _Name;
		
		private string _NameBangla;
		
		private EntitySet<Ins_MemberVerificationDetail> _Ins_MemberVerificationDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameBanglaChanging(string value);
    partial void OnNameBanglaChanged();
    #endregion
		
		public Ins_VerificationType()
		{
			this._Ins_MemberVerificationDetails = new EntitySet<Ins_MemberVerificationDetail>(new Action<Ins_MemberVerificationDetail>(this.attach_Ins_MemberVerificationDetails), new Action<Ins_MemberVerificationDetail>(this.detach_Ins_MemberVerificationDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameBangla", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NameBangla
		{
			get
			{
				return this._NameBangla;
			}
			set
			{
				if ((this._NameBangla != value))
				{
					this.OnNameBanglaChanging(value);
					this.SendPropertyChanging();
					this._NameBangla = value;
					this.SendPropertyChanged("NameBangla");
					this.OnNameBanglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_VerificationType_Ins_MemberVerificationDetail", Storage="_Ins_MemberVerificationDetails", ThisKey="IID", OtherKey="VerificationTypeId")]
		public EntitySet<Ins_MemberVerificationDetail> Ins_MemberVerificationDetails
		{
			get
			{
				return this._Ins_MemberVerificationDetails;
			}
			set
			{
				this._Ins_MemberVerificationDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_MemberVerificationDetails(Ins_MemberVerificationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_VerificationType = this;
		}
		
		private void detach_Ins_MemberVerificationDetails(Ins_MemberVerificationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_VerificationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberDocument")]
	public partial class MemberDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private int _DocumentTypeID;
		
		private string _DocumentName;
		
		private string _Path;
		
		private EntityRef<Ins_DocumentType> _Ins_DocumentType;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    #endregion
		
		public MemberDocument()
		{
			this._Ins_DocumentType = default(EntityRef<Ins_DocumentType>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					if (this._Ins_DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(500)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_DocumentType_MemberDocument", Storage="_Ins_DocumentType", ThisKey="DocumentTypeID", OtherKey="IID", IsForeignKey=true)]
		public Ins_DocumentType Ins_DocumentType
		{
			get
			{
				return this._Ins_DocumentType.Entity;
			}
			set
			{
				Ins_DocumentType previousValue = this._Ins_DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._Ins_DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_DocumentType.Entity = null;
						previousValue.MemberDocuments.Remove(this);
					}
					this._Ins_DocumentType.Entity = value;
					if ((value != null))
					{
						value.MemberDocuments.Add(this);
						this._DocumentTypeID = value.IID;
					}
					else
					{
						this._DocumentTypeID = default(int);
					}
					this.SendPropertyChanged("Ins_DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberDocument", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberDocuments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberDocuments.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessType")]
	public partial class BusinessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public BusinessType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberShipFee")]
	public partial class Ins_MemberShipFee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _MemberID;
		
		private string _PayorderNumber;
		
		private System.DateTime _PayOrderDate;
		
		private string _Path;
		
		private string _Type;
		
		private System.Nullable<int> _RegistrationFee;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnPayorderNumberChanging(string value);
    partial void OnPayorderNumberChanged();
    partial void OnPayOrderDateChanging(System.DateTime value);
    partial void OnPayOrderDateChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRegistrationFeeChanging(System.Nullable<int> value);
    partial void OnRegistrationFeeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_MemberShipFee()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayorderNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayorderNumber
		{
			get
			{
				return this._PayorderNumber;
			}
			set
			{
				if ((this._PayorderNumber != value))
				{
					this.OnPayorderNumberChanging(value);
					this.SendPropertyChanging();
					this._PayorderNumber = value;
					this.SendPropertyChanged("PayorderNumber");
					this.OnPayorderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayOrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayOrderDate
		{
			get
			{
				return this._PayOrderDate;
			}
			set
			{
				if ((this._PayOrderDate != value))
				{
					this.OnPayOrderDateChanging(value);
					this.SendPropertyChanging();
					this._PayOrderDate = value;
					this.SendPropertyChanged("PayOrderDate");
					this.OnPayOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(50)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationFee", DbType="Int")]
		public System.Nullable<int> RegistrationFee
		{
			get
			{
				return this._RegistrationFee;
			}
			set
			{
				if ((this._RegistrationFee != value))
				{
					this.OnRegistrationFeeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationFee = value;
					this.SendPropertyChanged("RegistrationFee");
					this.OnRegistrationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberShipFee", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MemberShipFees.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberShipFees.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_Item")]
	public partial class Ins_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private string _Code;
		
		private long _CategoryID;
		
		private int _MeasurementUnitID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Ins_MemberItem> _Ins_MemberItems;
		
		private EntityRef<Ins_ItemCategory> _Ins_ItemCategory;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCategoryIDChanging(long value);
    partial void OnCategoryIDChanged();
    partial void OnMeasurementUnitIDChanging(int value);
    partial void OnMeasurementUnitIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_Item()
		{
			this._Ins_MemberItems = new EntitySet<Ins_MemberItem>(new Action<Ins_MemberItem>(this.attach_Ins_MemberItems), new Action<Ins_MemberItem>(this.detach_Ins_MemberItems));
			this._Ins_ItemCategory = default(EntityRef<Ins_ItemCategory>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="BigInt NOT NULL")]
		public long CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Ins_ItemCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnitID", DbType="Int NOT NULL")]
		public int MeasurementUnitID
		{
			get
			{
				return this._MeasurementUnitID;
			}
			set
			{
				if ((this._MeasurementUnitID != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasurementUnitIDChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnitID = value;
					this.SendPropertyChanged("MeasurementUnitID");
					this.OnMeasurementUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_Item_Ins_MemberItem", Storage="_Ins_MemberItems", ThisKey="IID", OtherKey="ItemID")]
		public EntitySet<Ins_MemberItem> Ins_MemberItems
		{
			get
			{
				return this._Ins_MemberItems;
			}
			set
			{
				this._Ins_MemberItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ItemCategory_Ins_Item", Storage="_Ins_ItemCategory", ThisKey="CategoryID", OtherKey="IID", IsForeignKey=true)]
		public Ins_ItemCategory Ins_ItemCategory
		{
			get
			{
				return this._Ins_ItemCategory.Entity;
			}
			set
			{
				Ins_ItemCategory previousValue = this._Ins_ItemCategory.Entity;
				if (((previousValue != value) 
							|| (this._Ins_ItemCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_ItemCategory.Entity = null;
						previousValue.Ins_Items.Remove(this);
					}
					this._Ins_ItemCategory.Entity = value;
					if ((value != null))
					{
						value.Ins_Items.Add(this);
						this._CategoryID = value.IID;
					}
					else
					{
						this._CategoryID = default(long);
					}
					this.SendPropertyChanged("Ins_ItemCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Ins_Item", Storage="_MeasurementUnit", ThisKey="MeasurementUnitID", OtherKey="IID", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.Ins_Items.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.Ins_Items.Add(this);
						this._MeasurementUnitID = value.IID;
					}
					else
					{
						this._MeasurementUnitID = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_MemberItems(Ins_MemberItem entity)
		{
			this.SendPropertyChanging();
			entity.Ins_Item = this;
		}
		
		private void detach_Ins_MemberItems(Ins_MemberItem entity)
		{
			this.SendPropertyChanging();
			entity.Ins_Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _CountryAndCurrency;
		
		private string _CurrencyCode;
		
		private int _Order;
		
		private string _Symbols;
		
		private long _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private long _UpdateBy;
		
		private System.DateTime _UpdateDate;
		
		private bool _IsRemove;
		
		private EntitySet<Ins_ChaForm> _Ins_ChaForms;
		
		private EntitySet<Inv_Master> _Inv_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnCountryAndCurrencyChanging(string value);
    partial void OnCountryAndCurrencyChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnSymbolsChanging(string value);
    partial void OnSymbolsChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemoveChanging(bool value);
    partial void OnIsRemoveChanged();
    #endregion
		
		public Currency()
		{
			this._Ins_ChaForms = new EntitySet<Ins_ChaForm>(new Action<Ins_ChaForm>(this.attach_Ins_ChaForms), new Action<Ins_ChaForm>(this.detach_Ins_ChaForms));
			this._Inv_Masters = new EntitySet<Inv_Master>(new Action<Inv_Master>(this.attach_Inv_Masters), new Action<Inv_Master>(this.detach_Inv_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryAndCurrency", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CountryAndCurrency
		{
			get
			{
				return this._CountryAndCurrency;
			}
			set
			{
				if ((this._CountryAndCurrency != value))
				{
					this.OnCountryAndCurrencyChanging(value);
					this.SendPropertyChanging();
					this._CountryAndCurrency = value;
					this.SendPropertyChanged("CountryAndCurrency");
					this.OnCountryAndCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbols", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Symbols
		{
			get
			{
				return this._Symbols;
			}
			set
			{
				if ((this._Symbols != value))
				{
					this.OnSymbolsChanging(value);
					this.SendPropertyChanging();
					this._Symbols = value;
					this.SendPropertyChanged("Symbols");
					this.OnSymbolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemove", DbType="Bit NOT NULL")]
		public bool IsRemove
		{
			get
			{
				return this._IsRemove;
			}
			set
			{
				if ((this._IsRemove != value))
				{
					this.OnIsRemoveChanging(value);
					this.SendPropertyChanging();
					this._IsRemove = value;
					this.SendPropertyChanged("IsRemove");
					this.OnIsRemoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Ins_ChaForm", Storage="_Ins_ChaForms", ThisKey="IID", OtherKey="CurrencyId")]
		public EntitySet<Ins_ChaForm> Ins_ChaForms
		{
			get
			{
				return this._Ins_ChaForms;
			}
			set
			{
				this._Ins_ChaForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Inv_Master", Storage="_Inv_Masters", ThisKey="IID", OtherKey="CurrencyId")]
		public EntitySet<Inv_Master> Inv_Masters
		{
			get
			{
				return this._Inv_Masters;
			}
			set
			{
				this._Inv_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_ChaForms(Ins_ChaForm entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Ins_ChaForms(Ins_ChaForm entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_ChaFormInvoice")]
	public partial class Ins_ChaFormInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _ChaFormId;
		
		private long _InvoiceMasterId;
		
		private EntityRef<Ins_ChaForm> _Ins_ChaForm;
		
		private EntityRef<Inv_Master> _Inv_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnChaFormIdChanging(long value);
    partial void OnChaFormIdChanged();
    partial void OnInvoiceMasterIdChanging(long value);
    partial void OnInvoiceMasterIdChanged();
    #endregion
		
		public Ins_ChaFormInvoice()
		{
			this._Ins_ChaForm = default(EntityRef<Ins_ChaForm>);
			this._Inv_Master = default(EntityRef<Inv_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaFormId", DbType="BigInt NOT NULL")]
		public long ChaFormId
		{
			get
			{
				return this._ChaFormId;
			}
			set
			{
				if ((this._ChaFormId != value))
				{
					if (this._Ins_ChaForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChaFormIdChanging(value);
					this.SendPropertyChanging();
					this._ChaFormId = value;
					this.SendPropertyChanged("ChaFormId");
					this.OnChaFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceMasterId", DbType="BigInt NOT NULL")]
		public long InvoiceMasterId
		{
			get
			{
				return this._InvoiceMasterId;
			}
			set
			{
				if ((this._InvoiceMasterId != value))
				{
					if (this._Inv_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceMasterIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMasterId = value;
					this.SendPropertyChanged("InvoiceMasterId");
					this.OnInvoiceMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_ChaFormInvoice", Storage="_Ins_ChaForm", ThisKey="ChaFormId", OtherKey="ID", IsForeignKey=true)]
		public Ins_ChaForm Ins_ChaForm
		{
			get
			{
				return this._Ins_ChaForm.Entity;
			}
			set
			{
				Ins_ChaForm previousValue = this._Ins_ChaForm.Entity;
				if (((previousValue != value) 
							|| (this._Ins_ChaForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_ChaForm.Entity = null;
						previousValue.Ins_ChaFormInvoices.Remove(this);
					}
					this._Ins_ChaForm.Entity = value;
					if ((value != null))
					{
						value.Ins_ChaFormInvoices.Add(this);
						this._ChaFormId = value.ID;
					}
					else
					{
						this._ChaFormId = default(long);
					}
					this.SendPropertyChanged("Ins_ChaForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Ins_ChaFormInvoice", Storage="_Inv_Master", ThisKey="InvoiceMasterId", OtherKey="IID", IsForeignKey=true)]
		public Inv_Master Inv_Master
		{
			get
			{
				return this._Inv_Master.Entity;
			}
			set
			{
				Inv_Master previousValue = this._Inv_Master.Entity;
				if (((previousValue != value) 
							|| (this._Inv_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inv_Master.Entity = null;
						previousValue.Ins_ChaFormInvoices.Remove(this);
					}
					this._Inv_Master.Entity = value;
					if ((value != null))
					{
						value.Ins_ChaFormInvoices.Add(this);
						this._InvoiceMasterId = value.IID;
					}
					else
					{
						this._InvoiceMasterId = default(long);
					}
					this.SendPropertyChanged("Inv_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_ChaFormDeclineReson")]
	public partial class Ins_ChaFormDeclineReson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChaFormID;
		
		private System.DateTime _Date;
		
		private string _Reason;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Ins_ChaForm> _Ins_ChaForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChaFormIDChanging(long value);
    partial void OnChaFormIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_ChaFormDeclineReson()
		{
			this._Ins_ChaForm = default(EntityRef<Ins_ChaForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaFormID", DbType="BigInt NOT NULL")]
		public long ChaFormID
		{
			get
			{
				return this._ChaFormID;
			}
			set
			{
				if ((this._ChaFormID != value))
				{
					if (this._Ins_ChaForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChaFormIDChanging(value);
					this.SendPropertyChanging();
					this._ChaFormID = value;
					this.SendPropertyChanged("ChaFormID");
					this.OnChaFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_ChaFormDeclineReson", Storage="_Ins_ChaForm", ThisKey="ChaFormID", OtherKey="ID", IsForeignKey=true)]
		public Ins_ChaForm Ins_ChaForm
		{
			get
			{
				return this._Ins_ChaForm.Entity;
			}
			set
			{
				Ins_ChaForm previousValue = this._Ins_ChaForm.Entity;
				if (((previousValue != value) 
							|| (this._Ins_ChaForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_ChaForm.Entity = null;
						previousValue.Ins_ChaFormDeclineResons.Remove(this);
					}
					this._Ins_ChaForm.Entity = value;
					if ((value != null))
					{
						value.Ins_ChaFormDeclineResons.Add(this);
						this._ChaFormID = value.ID;
					}
					else
					{
						this._ChaFormID = default(long);
					}
					this.SendPropertyChanged("Ins_ChaForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_BapaIncome")]
	public partial class Ins_BapaIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private int _Type;
		
		private System.Nullable<long> _ChaFromID;
		
		private decimal _Amount;
		
		private System.DateTime _Date;
		
		private int _PaymentStatus;
		
		private System.Nullable<decimal> _PartialPaymentAmount;
		
		private System.Nullable<decimal> _RemainingPaymentAmount;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Ins_MemberPaymentDetail> _Ins_MemberPaymentDetails;
		
		private EntityRef<Ins_ChaForm> _Ins_ChaForm;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnChaFromIDChanging(System.Nullable<long> value);
    partial void OnChaFromIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPaymentStatusChanging(int value);
    partial void OnPaymentStatusChanged();
    partial void OnPartialPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPartialPaymentAmountChanged();
    partial void OnRemainingPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnRemainingPaymentAmountChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_BapaIncome()
		{
			this._Ins_MemberPaymentDetails = new EntitySet<Ins_MemberPaymentDetail>(new Action<Ins_MemberPaymentDetail>(this.attach_Ins_MemberPaymentDetails), new Action<Ins_MemberPaymentDetail>(this.detach_Ins_MemberPaymentDetails));
			this._Ins_ChaForm = default(EntityRef<Ins_ChaForm>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaFromID", DbType="BigInt")]
		public System.Nullable<long> ChaFromID
		{
			get
			{
				return this._ChaFromID;
			}
			set
			{
				if ((this._ChaFromID != value))
				{
					if (this._Ins_ChaForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChaFromIDChanging(value);
					this.SendPropertyChanging();
					this._ChaFromID = value;
					this.SendPropertyChanged("ChaFromID");
					this.OnChaFromIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="Int NOT NULL")]
		public int PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartialPaymentAmount", DbType="Money")]
		public System.Nullable<decimal> PartialPaymentAmount
		{
			get
			{
				return this._PartialPaymentAmount;
			}
			set
			{
				if ((this._PartialPaymentAmount != value))
				{
					this.OnPartialPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PartialPaymentAmount = value;
					this.SendPropertyChanged("PartialPaymentAmount");
					this.OnPartialPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingPaymentAmount", DbType="Money")]
		public System.Nullable<decimal> RemainingPaymentAmount
		{
			get
			{
				return this._RemainingPaymentAmount;
			}
			set
			{
				if ((this._RemainingPaymentAmount != value))
				{
					this.OnRemainingPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._RemainingPaymentAmount = value;
					this.SendPropertyChanged("RemainingPaymentAmount");
					this.OnRemainingPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_BapaIncome_Ins_MemberPaymentDetail", Storage="_Ins_MemberPaymentDetails", ThisKey="IID", OtherKey="BapaIncomeID")]
		public EntitySet<Ins_MemberPaymentDetail> Ins_MemberPaymentDetails
		{
			get
			{
				return this._Ins_MemberPaymentDetails;
			}
			set
			{
				this._Ins_MemberPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_BapaIncome", Storage="_Ins_ChaForm", ThisKey="ChaFromID", OtherKey="ID", IsForeignKey=true)]
		public Ins_ChaForm Ins_ChaForm
		{
			get
			{
				return this._Ins_ChaForm.Entity;
			}
			set
			{
				Ins_ChaForm previousValue = this._Ins_ChaForm.Entity;
				if (((previousValue != value) 
							|| (this._Ins_ChaForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_ChaForm.Entity = null;
						previousValue.Ins_BapaIncomes.Remove(this);
					}
					this._Ins_ChaForm.Entity = value;
					if ((value != null))
					{
						value.Ins_BapaIncomes.Add(this);
						this._ChaFromID = value.ID;
					}
					else
					{
						this._ChaFromID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Ins_ChaForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_BapaIncome", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_BapaIncomes.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_BapaIncomes.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_MemberPaymentDetails(Ins_MemberPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_BapaIncome = this;
		}
		
		private void detach_Ins_MemberPaymentDetails(Ins_MemberPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_BapaIncome = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberPayment")]
	public partial class Ins_MemberPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private System.DateTime _Date;
		
		private decimal _Amount;
		
		private string _Description;
		
		private int _PaymentType;
		
		private string _ChequeNo;
		
		private System.Nullable<System.DateTime> _ChequeDate;
		
		private string _BankName;
		
		private System.Nullable<long> _ReceivedBy;
		
		private string _ReceverName;
		
		private int _Status;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Ins_MemberPaymentDetail> _Ins_MemberPaymentDetails;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnChequeNoChanging(string value);
    partial void OnChequeNoChanged();
    partial void OnChequeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChequeDateChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnReceivedByChanging(System.Nullable<long> value);
    partial void OnReceivedByChanged();
    partial void OnReceverNameChanging(string value);
    partial void OnReceverNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_MemberPayment()
		{
			this._Ins_MemberPaymentDetails = new EntitySet<Ins_MemberPaymentDetail>(new Action<Ins_MemberPaymentDetail>(this.attach_Ins_MemberPaymentDetails), new Action<Ins_MemberPaymentDetail>(this.detach_Ins_MemberPaymentDetails));
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNo", DbType="NVarChar(100)")]
		public string ChequeNo
		{
			get
			{
				return this._ChequeNo;
			}
			set
			{
				if ((this._ChequeNo != value))
				{
					this.OnChequeNoChanging(value);
					this.SendPropertyChanging();
					this._ChequeNo = value;
					this.SendPropertyChanged("ChequeNo");
					this.OnChequeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChequeDate
		{
			get
			{
				return this._ChequeDate;
			}
			set
			{
				if ((this._ChequeDate != value))
				{
					this.OnChequeDateChanging(value);
					this.SendPropertyChanging();
					this._ChequeDate = value;
					this.SendPropertyChanged("ChequeDate");
					this.OnChequeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(200)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedBy", DbType="BigInt")]
		public System.Nullable<long> ReceivedBy
		{
			get
			{
				return this._ReceivedBy;
			}
			set
			{
				if ((this._ReceivedBy != value))
				{
					this.OnReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ReceivedBy = value;
					this.SendPropertyChanged("ReceivedBy");
					this.OnReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceverName", DbType="NVarChar(200)")]
		public string ReceverName
		{
			get
			{
				return this._ReceverName;
			}
			set
			{
				if ((this._ReceverName != value))
				{
					this.OnReceverNameChanging(value);
					this.SendPropertyChanging();
					this._ReceverName = value;
					this.SendPropertyChanged("ReceverName");
					this.OnReceverNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_MemberPayment_Ins_MemberPaymentDetail", Storage="_Ins_MemberPaymentDetails", ThisKey="IID", OtherKey="MemberPaymentID")]
		public EntitySet<Ins_MemberPaymentDetail> Ins_MemberPaymentDetails
		{
			get
			{
				return this._Ins_MemberPaymentDetails;
			}
			set
			{
				this._Ins_MemberPaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberPayment", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MemberPayments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberPayments.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_MemberPaymentDetails(Ins_MemberPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_MemberPayment = this;
		}
		
		private void detach_Ins_MemberPaymentDetails(Ins_MemberPaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_MemberPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberPaymentDetail")]
	public partial class Ins_MemberPaymentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberPaymentID;
		
		private long _BapaIncomeID;
		
		private int _IsPertial;
		
		private decimal _Amount;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Ins_BapaIncome> _Ins_BapaIncome;
		
		private EntityRef<Ins_MemberPayment> _Ins_MemberPayment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberPaymentIDChanging(long value);
    partial void OnMemberPaymentIDChanged();
    partial void OnBapaIncomeIDChanging(long value);
    partial void OnBapaIncomeIDChanged();
    partial void OnIsPertialChanging(int value);
    partial void OnIsPertialChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_MemberPaymentDetail()
		{
			this._Ins_BapaIncome = default(EntityRef<Ins_BapaIncome>);
			this._Ins_MemberPayment = default(EntityRef<Ins_MemberPayment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberPaymentID", DbType="BigInt NOT NULL")]
		public long MemberPaymentID
		{
			get
			{
				return this._MemberPaymentID;
			}
			set
			{
				if ((this._MemberPaymentID != value))
				{
					if (this._Ins_MemberPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._MemberPaymentID = value;
					this.SendPropertyChanged("MemberPaymentID");
					this.OnMemberPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BapaIncomeID", DbType="BigInt NOT NULL")]
		public long BapaIncomeID
		{
			get
			{
				return this._BapaIncomeID;
			}
			set
			{
				if ((this._BapaIncomeID != value))
				{
					if (this._Ins_BapaIncome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBapaIncomeIDChanging(value);
					this.SendPropertyChanging();
					this._BapaIncomeID = value;
					this.SendPropertyChanged("BapaIncomeID");
					this.OnBapaIncomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPertial", DbType="Int NOT NULL")]
		public int IsPertial
		{
			get
			{
				return this._IsPertial;
			}
			set
			{
				if ((this._IsPertial != value))
				{
					this.OnIsPertialChanging(value);
					this.SendPropertyChanging();
					this._IsPertial = value;
					this.SendPropertyChanged("IsPertial");
					this.OnIsPertialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_BapaIncome_Ins_MemberPaymentDetail", Storage="_Ins_BapaIncome", ThisKey="BapaIncomeID", OtherKey="IID", IsForeignKey=true)]
		public Ins_BapaIncome Ins_BapaIncome
		{
			get
			{
				return this._Ins_BapaIncome.Entity;
			}
			set
			{
				Ins_BapaIncome previousValue = this._Ins_BapaIncome.Entity;
				if (((previousValue != value) 
							|| (this._Ins_BapaIncome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_BapaIncome.Entity = null;
						previousValue.Ins_MemberPaymentDetails.Remove(this);
					}
					this._Ins_BapaIncome.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberPaymentDetails.Add(this);
						this._BapaIncomeID = value.IID;
					}
					else
					{
						this._BapaIncomeID = default(long);
					}
					this.SendPropertyChanged("Ins_BapaIncome");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_MemberPayment_Ins_MemberPaymentDetail", Storage="_Ins_MemberPayment", ThisKey="MemberPaymentID", OtherKey="IID", IsForeignKey=true)]
		public Ins_MemberPayment Ins_MemberPayment
		{
			get
			{
				return this._Ins_MemberPayment.Entity;
			}
			set
			{
				Ins_MemberPayment previousValue = this._Ins_MemberPayment.Entity;
				if (((previousValue != value) 
							|| (this._Ins_MemberPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_MemberPayment.Entity = null;
						previousValue.Ins_MemberPaymentDetails.Remove(this);
					}
					this._Ins_MemberPayment.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberPaymentDetails.Add(this);
						this._MemberPaymentID = value.IID;
					}
					else
					{
						this._MemberPaymentID = default(long);
					}
					this.SendPropertyChanged("Ins_MemberPayment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MembershipExpireInfo")]
	public partial class Ins_MembershipExpireInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _MemberID;
		
		private System.DateTime _ExpireDate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnExpireDateChanging(System.DateTime value);
    partial void OnExpireDateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_MembershipExpireInfo()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MembershipExpireInfo", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MembershipExpireInfos.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MembershipExpireInfos.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acc_ChartOfAccountMember")]
	public partial class Acc_ChartOfAccountMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _ChartofAccountID;
		
		private long _MemberID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntityRef<Acc_ChartOfAccount> _Acc_ChartOfAccount;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnChartofAccountIDChanging(long value);
    partial void OnChartofAccountIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Acc_ChartOfAccountMember()
		{
			this._Acc_ChartOfAccount = default(EntityRef<Acc_ChartOfAccount>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartofAccountID", DbType="BigInt NOT NULL")]
		public long ChartofAccountID
		{
			get
			{
				return this._ChartofAccountID;
			}
			set
			{
				if ((this._ChartofAccountID != value))
				{
					if (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChartofAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ChartofAccountID = value;
					this.SendPropertyChanged("ChartofAccountID");
					this.OnChartofAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acc_ChartOfAccount_Acc_ChartOfAccountMember", Storage="_Acc_ChartOfAccount", ThisKey="ChartofAccountID", OtherKey="IID", IsForeignKey=true)]
		public Acc_ChartOfAccount Acc_ChartOfAccount
		{
			get
			{
				return this._Acc_ChartOfAccount.Entity;
			}
			set
			{
				Acc_ChartOfAccount previousValue = this._Acc_ChartOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._Acc_ChartOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acc_ChartOfAccount.Entity = null;
						previousValue.Acc_ChartOfAccountMembers.Remove(this);
					}
					this._Acc_ChartOfAccount.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountMembers.Add(this);
						this._ChartofAccountID = value.IID;
					}
					else
					{
						this._ChartofAccountID = default(long);
					}
					this.SendPropertyChanged("Acc_ChartOfAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Acc_ChartOfAccountMember", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Acc_ChartOfAccountMembers.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Acc_ChartOfAccountMembers.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_ChaForm")]
	public partial class Ins_ChaForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _MemberID;
		
		private string _ExportLCNo;
		
		private System.DateTime _LCDate;
		
		private decimal _ExportValuation;
		
		private string _ForignCustomerName;
		
		private string _ForignCustomerAddress;
		
		private string _ForignCustomerBankAddress;
		
		private string _ForignCustomerBankName;
		
		private int _CurrencyId;
		
		private System.DateTime _ShipmentDate;
		
		private string _DestinationPort;
		
		private string _EKIMPNumber;
		
		private System.DateTime _EKIMPDate;
		
		private decimal _EKIMPAmount;
		
		private decimal _ProposedExportedAmount;
		
		private string _ProposedExportedCertificateNo;
		
		private System.DateTime _ProposedExportedCertificateDate;
		
		private decimal _NetFOBAmount;
		
		private string _ChaFormNo;
		
		private int _Status;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private EntitySet<Ins_ChaFormInvoice> _Ins_ChaFormInvoices;
		
		private EntitySet<Ins_ChaFormDeclineReson> _Ins_ChaFormDeclineResons;
		
		private EntitySet<Ins_BapaIncome> _Ins_BapaIncomes;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnExportLCNoChanging(string value);
    partial void OnExportLCNoChanged();
    partial void OnLCDateChanging(System.DateTime value);
    partial void OnLCDateChanged();
    partial void OnExportValuationChanging(decimal value);
    partial void OnExportValuationChanged();
    partial void OnForignCustomerNameChanging(string value);
    partial void OnForignCustomerNameChanged();
    partial void OnForignCustomerAddressChanging(string value);
    partial void OnForignCustomerAddressChanged();
    partial void OnForignCustomerBankAddressChanging(string value);
    partial void OnForignCustomerBankAddressChanged();
    partial void OnForignCustomerBankNameChanging(string value);
    partial void OnForignCustomerBankNameChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnShipmentDateChanging(System.DateTime value);
    partial void OnShipmentDateChanged();
    partial void OnDestinationPortChanging(string value);
    partial void OnDestinationPortChanged();
    partial void OnEKIMPNumberChanging(string value);
    partial void OnEKIMPNumberChanged();
    partial void OnEKIMPDateChanging(System.DateTime value);
    partial void OnEKIMPDateChanged();
    partial void OnEKIMPAmountChanging(decimal value);
    partial void OnEKIMPAmountChanged();
    partial void OnProposedExportedAmountChanging(decimal value);
    partial void OnProposedExportedAmountChanged();
    partial void OnProposedExportedCertificateNoChanging(string value);
    partial void OnProposedExportedCertificateNoChanged();
    partial void OnProposedExportedCertificateDateChanging(System.DateTime value);
    partial void OnProposedExportedCertificateDateChanged();
    partial void OnNetFOBAmountChanging(decimal value);
    partial void OnNetFOBAmountChanged();
    partial void OnChaFormNoChanging(string value);
    partial void OnChaFormNoChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    #endregion
		
		public Ins_ChaForm()
		{
			this._Ins_ChaFormInvoices = new EntitySet<Ins_ChaFormInvoice>(new Action<Ins_ChaFormInvoice>(this.attach_Ins_ChaFormInvoices), new Action<Ins_ChaFormInvoice>(this.detach_Ins_ChaFormInvoices));
			this._Ins_ChaFormDeclineResons = new EntitySet<Ins_ChaFormDeclineReson>(new Action<Ins_ChaFormDeclineReson>(this.attach_Ins_ChaFormDeclineResons), new Action<Ins_ChaFormDeclineReson>(this.detach_Ins_ChaFormDeclineResons));
			this._Ins_BapaIncomes = new EntitySet<Ins_BapaIncome>(new Action<Ins_BapaIncome>(this.attach_Ins_BapaIncomes), new Action<Ins_BapaIncome>(this.detach_Ins_BapaIncomes));
			this._Currency = default(EntityRef<Currency>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportLCNo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ExportLCNo
		{
			get
			{
				return this._ExportLCNo;
			}
			set
			{
				if ((this._ExportLCNo != value))
				{
					this.OnExportLCNoChanging(value);
					this.SendPropertyChanging();
					this._ExportLCNo = value;
					this.SendPropertyChanged("ExportLCNo");
					this.OnExportLCNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCDate", DbType="DateTime NOT NULL")]
		public System.DateTime LCDate
		{
			get
			{
				return this._LCDate;
			}
			set
			{
				if ((this._LCDate != value))
				{
					this.OnLCDateChanging(value);
					this.SendPropertyChanging();
					this._LCDate = value;
					this.SendPropertyChanged("LCDate");
					this.OnLCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportValuation", DbType="Decimal(18,2) NOT NULL")]
		public decimal ExportValuation
		{
			get
			{
				return this._ExportValuation;
			}
			set
			{
				if ((this._ExportValuation != value))
				{
					this.OnExportValuationChanging(value);
					this.SendPropertyChanging();
					this._ExportValuation = value;
					this.SendPropertyChanged("ExportValuation");
					this.OnExportValuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForignCustomerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ForignCustomerName
		{
			get
			{
				return this._ForignCustomerName;
			}
			set
			{
				if ((this._ForignCustomerName != value))
				{
					this.OnForignCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._ForignCustomerName = value;
					this.SendPropertyChanged("ForignCustomerName");
					this.OnForignCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForignCustomerAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ForignCustomerAddress
		{
			get
			{
				return this._ForignCustomerAddress;
			}
			set
			{
				if ((this._ForignCustomerAddress != value))
				{
					this.OnForignCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._ForignCustomerAddress = value;
					this.SendPropertyChanged("ForignCustomerAddress");
					this.OnForignCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForignCustomerBankAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ForignCustomerBankAddress
		{
			get
			{
				return this._ForignCustomerBankAddress;
			}
			set
			{
				if ((this._ForignCustomerBankAddress != value))
				{
					this.OnForignCustomerBankAddressChanging(value);
					this.SendPropertyChanging();
					this._ForignCustomerBankAddress = value;
					this.SendPropertyChanged("ForignCustomerBankAddress");
					this.OnForignCustomerBankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForignCustomerBankName", DbType="NVarChar(500)")]
		public string ForignCustomerBankName
		{
			get
			{
				return this._ForignCustomerBankName;
			}
			set
			{
				if ((this._ForignCustomerBankName != value))
				{
					this.OnForignCustomerBankNameChanging(value);
					this.SendPropertyChanging();
					this._ForignCustomerBankName = value;
					this.SendPropertyChanged("ForignCustomerBankName");
					this.OnForignCustomerBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPort", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DestinationPort
		{
			get
			{
				return this._DestinationPort;
			}
			set
			{
				if ((this._DestinationPort != value))
				{
					this.OnDestinationPortChanging(value);
					this.SendPropertyChanging();
					this._DestinationPort = value;
					this.SendPropertyChanged("DestinationPort");
					this.OnDestinationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKIMPNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EKIMPNumber
		{
			get
			{
				return this._EKIMPNumber;
			}
			set
			{
				if ((this._EKIMPNumber != value))
				{
					this.OnEKIMPNumberChanging(value);
					this.SendPropertyChanging();
					this._EKIMPNumber = value;
					this.SendPropertyChanged("EKIMPNumber");
					this.OnEKIMPNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKIMPDate", DbType="DateTime NOT NULL")]
		public System.DateTime EKIMPDate
		{
			get
			{
				return this._EKIMPDate;
			}
			set
			{
				if ((this._EKIMPDate != value))
				{
					this.OnEKIMPDateChanging(value);
					this.SendPropertyChanging();
					this._EKIMPDate = value;
					this.SendPropertyChanged("EKIMPDate");
					this.OnEKIMPDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKIMPAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal EKIMPAmount
		{
			get
			{
				return this._EKIMPAmount;
			}
			set
			{
				if ((this._EKIMPAmount != value))
				{
					this.OnEKIMPAmountChanging(value);
					this.SendPropertyChanging();
					this._EKIMPAmount = value;
					this.SendPropertyChanged("EKIMPAmount");
					this.OnEKIMPAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedExportedAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal ProposedExportedAmount
		{
			get
			{
				return this._ProposedExportedAmount;
			}
			set
			{
				if ((this._ProposedExportedAmount != value))
				{
					this.OnProposedExportedAmountChanging(value);
					this.SendPropertyChanging();
					this._ProposedExportedAmount = value;
					this.SendPropertyChanged("ProposedExportedAmount");
					this.OnProposedExportedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedExportedCertificateNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProposedExportedCertificateNo
		{
			get
			{
				return this._ProposedExportedCertificateNo;
			}
			set
			{
				if ((this._ProposedExportedCertificateNo != value))
				{
					this.OnProposedExportedCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._ProposedExportedCertificateNo = value;
					this.SendPropertyChanged("ProposedExportedCertificateNo");
					this.OnProposedExportedCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedExportedCertificateDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProposedExportedCertificateDate
		{
			get
			{
				return this._ProposedExportedCertificateDate;
			}
			set
			{
				if ((this._ProposedExportedCertificateDate != value))
				{
					this.OnProposedExportedCertificateDateChanging(value);
					this.SendPropertyChanging();
					this._ProposedExportedCertificateDate = value;
					this.SendPropertyChanged("ProposedExportedCertificateDate");
					this.OnProposedExportedCertificateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetFOBAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal NetFOBAmount
		{
			get
			{
				return this._NetFOBAmount;
			}
			set
			{
				if ((this._NetFOBAmount != value))
				{
					this.OnNetFOBAmountChanging(value);
					this.SendPropertyChanging();
					this._NetFOBAmount = value;
					this.SendPropertyChanged("NetFOBAmount");
					this.OnNetFOBAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaFormNo", DbType="NVarChar(50)")]
		public string ChaFormNo
		{
			get
			{
				return this._ChaFormNo;
			}
			set
			{
				if ((this._ChaFormNo != value))
				{
					this.OnChaFormNoChanging(value);
					this.SendPropertyChanging();
					this._ChaFormNo = value;
					this.SendPropertyChanged("ChaFormNo");
					this.OnChaFormNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_ChaFormInvoice", Storage="_Ins_ChaFormInvoices", ThisKey="ID", OtherKey="ChaFormId")]
		public EntitySet<Ins_ChaFormInvoice> Ins_ChaFormInvoices
		{
			get
			{
				return this._Ins_ChaFormInvoices;
			}
			set
			{
				this._Ins_ChaFormInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_ChaFormDeclineReson", Storage="_Ins_ChaFormDeclineResons", ThisKey="ID", OtherKey="ChaFormID")]
		public EntitySet<Ins_ChaFormDeclineReson> Ins_ChaFormDeclineResons
		{
			get
			{
				return this._Ins_ChaFormDeclineResons;
			}
			set
			{
				this._Ins_ChaFormDeclineResons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_ChaForm_Ins_BapaIncome", Storage="_Ins_BapaIncomes", ThisKey="ID", OtherKey="ChaFromID")]
		public EntitySet<Ins_BapaIncome> Ins_BapaIncomes
		{
			get
			{
				return this._Ins_BapaIncomes;
			}
			set
			{
				this._Ins_BapaIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Ins_ChaForm", Storage="_Currency", ThisKey="CurrencyId", OtherKey="IID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Ins_ChaForms.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Ins_ChaForms.Add(this);
						this._CurrencyId = value.IID;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_ChaForm", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_ChaForms.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_ChaForms.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_ChaFormInvoices(Ins_ChaFormInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = this;
		}
		
		private void detach_Ins_ChaFormInvoices(Ins_ChaFormInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = null;
		}
		
		private void attach_Ins_ChaFormDeclineResons(Ins_ChaFormDeclineReson entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = this;
		}
		
		private void detach_Ins_ChaFormDeclineResons(Ins_ChaFormDeclineReson entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = null;
		}
		
		private void attach_Ins_BapaIncomes(Ins_BapaIncome entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = this;
		}
		
		private void detach_Ins_BapaIncomes(Ins_BapaIncome entity)
		{
			this.SendPropertyChanging();
			entity.Ins_ChaForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_MemberItem")]
	public partial class Ins_MemberItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private string _Name;
		
		private long _MemberID;
		
		private long _ItemID;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private string _Code;
		
		private System.Nullable<decimal> _ItemWeight;
		
		private EntitySet<Inv_Detail> _Inv_Details;
		
		private EntityRef<Ins_Item> _Ins_Item;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMemberIDChanging(long value);
    partial void OnMemberIDChanged();
    partial void OnItemIDChanging(long value);
    partial void OnItemIDChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnItemWeightChanging(System.Nullable<decimal> value);
    partial void OnItemWeightChanged();
    #endregion
		
		public Ins_MemberItem()
		{
			this._Inv_Details = new EntitySet<Inv_Detail>(new Action<Inv_Detail>(this.attach_Inv_Details), new Action<Inv_Detail>(this.detach_Inv_Details));
			this._Ins_Item = default(EntityRef<Ins_Item>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="BigInt NOT NULL")]
		public long MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="BigInt NOT NULL")]
		public long ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Ins_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemWeight", DbType="Money")]
		public System.Nullable<decimal> ItemWeight
		{
			get
			{
				return this._ItemWeight;
			}
			set
			{
				if ((this._ItemWeight != value))
				{
					this.OnItemWeightChanging(value);
					this.SendPropertyChanging();
					this._ItemWeight = value;
					this.SendPropertyChanged("ItemWeight");
					this.OnItemWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_MemberItem_Inv_Detail", Storage="_Inv_Details", ThisKey="IID", OtherKey="InsMemberItemId")]
		public EntitySet<Inv_Detail> Inv_Details
		{
			get
			{
				return this._Inv_Details;
			}
			set
			{
				this._Inv_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_Item_Ins_MemberItem", Storage="_Ins_Item", ThisKey="ItemID", OtherKey="IID", IsForeignKey=true)]
		public Ins_Item Ins_Item
		{
			get
			{
				return this._Ins_Item.Entity;
			}
			set
			{
				Ins_Item previousValue = this._Ins_Item.Entity;
				if (((previousValue != value) 
							|| (this._Ins_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_Item.Entity = null;
						previousValue.Ins_MemberItems.Remove(this);
					}
					this._Ins_Item.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberItems.Add(this);
						this._ItemID = value.IID;
					}
					else
					{
						this._ItemID = default(long);
					}
					this.SendPropertyChanged("Ins_Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberItem", Storage="_Member", ThisKey="MemberID", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Ins_MemberItems.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Ins_MemberItems.Add(this);
						this._MemberID = value.ID;
					}
					else
					{
						this._MemberID = default(long);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inv_Details(Inv_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_MemberItem = this;
		}
		
		private void detach_Inv_Details(Inv_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ins_MemberItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inv_Detail")]
	public partial class Inv_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _InvMasterId;
		
		private long _InsMemberItemId;
		
		private decimal _UnitPrice;
		
		private int _Quantity;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private int _CartonSize;
		
		private int _TotalItemCount;
		
		private decimal _TotalAmount;
		
		private decimal _TotalWeight;
		
		private decimal _GrossWeight;
		
		private EntityRef<Ins_MemberItem> _Ins_MemberItem;
		
		private EntityRef<Inv_Master> _Inv_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnInvMasterIdChanging(long value);
    partial void OnInvMasterIdChanged();
    partial void OnInsMemberItemIdChanging(long value);
    partial void OnInsMemberItemIdChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnCartonSizeChanging(int value);
    partial void OnCartonSizeChanged();
    partial void OnTotalItemCountChanging(int value);
    partial void OnTotalItemCountChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnTotalWeightChanging(decimal value);
    partial void OnTotalWeightChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    #endregion
		
		public Inv_Detail()
		{
			this._Ins_MemberItem = default(EntityRef<Ins_MemberItem>);
			this._Inv_Master = default(EntityRef<Inv_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvMasterId", DbType="BigInt NOT NULL")]
		public long InvMasterId
		{
			get
			{
				return this._InvMasterId;
			}
			set
			{
				if ((this._InvMasterId != value))
				{
					if (this._Inv_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvMasterIdChanging(value);
					this.SendPropertyChanging();
					this._InvMasterId = value;
					this.SendPropertyChanged("InvMasterId");
					this.OnInvMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsMemberItemId", DbType="BigInt NOT NULL")]
		public long InsMemberItemId
		{
			get
			{
				return this._InsMemberItemId;
			}
			set
			{
				if ((this._InsMemberItemId != value))
				{
					if (this._Ins_MemberItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsMemberItemIdChanging(value);
					this.SendPropertyChanging();
					this._InsMemberItemId = value;
					this.SendPropertyChanged("InsMemberItemId");
					this.OnInsMemberItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="Date NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartonSize", DbType="Int NOT NULL")]
		public int CartonSize
		{
			get
			{
				return this._CartonSize;
			}
			set
			{
				if ((this._CartonSize != value))
				{
					this.OnCartonSizeChanging(value);
					this.SendPropertyChanging();
					this._CartonSize = value;
					this.SendPropertyChanged("CartonSize");
					this.OnCartonSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalItemCount", DbType="Int NOT NULL")]
		public int TotalItemCount
		{
			get
			{
				return this._TotalItemCount;
			}
			set
			{
				if ((this._TotalItemCount != value))
				{
					this.OnTotalItemCountChanging(value);
					this.SendPropertyChanging();
					this._TotalItemCount = value;
					this.SendPropertyChanged("TotalItemCount");
					this.OnTotalItemCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalWeight
		{
			get
			{
				return this._TotalWeight;
			}
			set
			{
				if ((this._TotalWeight != value))
				{
					this.OnTotalWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight = value;
					this.SendPropertyChanged("TotalWeight");
					this.OnTotalWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,2) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ins_MemberItem_Inv_Detail", Storage="_Ins_MemberItem", ThisKey="InsMemberItemId", OtherKey="IID", IsForeignKey=true)]
		public Ins_MemberItem Ins_MemberItem
		{
			get
			{
				return this._Ins_MemberItem.Entity;
			}
			set
			{
				Ins_MemberItem previousValue = this._Ins_MemberItem.Entity;
				if (((previousValue != value) 
							|| (this._Ins_MemberItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ins_MemberItem.Entity = null;
						previousValue.Inv_Details.Remove(this);
					}
					this._Ins_MemberItem.Entity = value;
					if ((value != null))
					{
						value.Inv_Details.Add(this);
						this._InsMemberItemId = value.IID;
					}
					else
					{
						this._InsMemberItemId = default(long);
					}
					this.SendPropertyChanged("Ins_MemberItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Inv_Detail", Storage="_Inv_Master", ThisKey="InvMasterId", OtherKey="IID", IsForeignKey=true)]
		public Inv_Master Inv_Master
		{
			get
			{
				return this._Inv_Master.Entity;
			}
			set
			{
				Inv_Master previousValue = this._Inv_Master.Entity;
				if (((previousValue != value) 
							|| (this._Inv_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inv_Master.Entity = null;
						previousValue.Inv_Details.Remove(this);
					}
					this._Inv_Master.Entity = value;
					if ((value != null))
					{
						value.Inv_Details.Add(this);
						this._InvMasterId = value.IID;
					}
					else
					{
						this._InvMasterId = default(long);
					}
					this.SendPropertyChanged("Inv_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ins_InvoiceEnclosedDocument")]
	public partial class Ins_InvoiceEnclosedDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private long _InvoiceID;
		
		private string _Name;
		
		private string _Path;
		
		private string _FileName;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<Inv_Master> _Inv_Master;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnInvoiceIDChanging(long value);
    partial void OnInvoiceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Ins_InvoiceEnclosedDocument()
		{
			this._Inv_Master = default(EntityRef<Inv_Master>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="BigInt NOT NULL")]
		public long InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Inv_Master.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Ins_InvoiceEnclosedDocument", Storage="_Inv_Master", ThisKey="InvoiceID", OtherKey="IID", IsForeignKey=true)]
		public Inv_Master Inv_Master
		{
			get
			{
				return this._Inv_Master.Entity;
			}
			set
			{
				Inv_Master previousValue = this._Inv_Master.Entity;
				if (((previousValue != value) 
							|| (this._Inv_Master.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inv_Master.Entity = null;
						previousValue.Ins_InvoiceEnclosedDocuments.Remove(this);
					}
					this._Inv_Master.Entity = value;
					if ((value != null))
					{
						value.Ins_InvoiceEnclosedDocuments.Add(this);
						this._InvoiceID = value.IID;
					}
					else
					{
						this._InvoiceID = default(long);
					}
					this.SendPropertyChanged("Inv_Master");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _NameBangla;
		
		private string _Address;
		
		private string _AddressBangla;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Fax;
		
		private string _Email;
		
		private string _IndustryLocation;
		
		private System.Nullable<int> _CompanyEstablishmentYear;
		
		private System.Nullable<int> _IndustryFoundationYear;
		
		private string _TypeOfBusiness;
		
		private int _CompanyTypeID;
		
		private int _CompanyCategoryID;
		
		private string _ManufacturedProducts;
		
		private string _ImportedProducts;
		
		private string _ExportedProducts;
		
		private string _NameOfTheAssociations;
		
		private int _MembershipStatus;
		
		private int _TypeOfSubmission;
		
		private string _MembershipCode;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private string _ProviderKey;
		
		private int _MemberVerificationStatus;
		
		private EntitySet<Ins_MemberVerification> _Ins_MemberVerifications;
		
		private EntitySet<Ins_MemberVerificationDetail> _Ins_MemberVerificationDetails;
		
		private EntitySet<MemberDocument> _MemberDocuments;
		
		private EntitySet<Ins_MemberShipFee> _Ins_MemberShipFees;
		
		private EntitySet<Ins_BapaIncome> _Ins_BapaIncomes;
		
		private EntitySet<Ins_MemberPayment> _Ins_MemberPayments;
		
		private EntitySet<Ins_MembershipExpireInfo> _Ins_MembershipExpireInfos;
		
		private EntitySet<Acc_ChartOfAccountMember> _Acc_ChartOfAccountMembers;
		
		private EntitySet<Ins_ChaForm> _Ins_ChaForms;
		
		private EntitySet<Ins_MemberItem> _Ins_MemberItems;
		
		private EntitySet<Inv_Master> _Inv_Masters;
		
		private EntityRef<CompanyCategory> _CompanyCategory;
		
		private EntityRef<CompanyType> _CompanyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameBanglaChanging(string value);
    partial void OnNameBanglaChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddressBanglaChanging(string value);
    partial void OnAddressBanglaChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIndustryLocationChanging(string value);
    partial void OnIndustryLocationChanged();
    partial void OnCompanyEstablishmentYearChanging(System.Nullable<int> value);
    partial void OnCompanyEstablishmentYearChanged();
    partial void OnIndustryFoundationYearChanging(System.Nullable<int> value);
    partial void OnIndustryFoundationYearChanged();
    partial void OnTypeOfBusinessChanging(string value);
    partial void OnTypeOfBusinessChanged();
    partial void OnCompanyTypeIDChanging(int value);
    partial void OnCompanyTypeIDChanged();
    partial void OnCompanyCategoryIDChanging(int value);
    partial void OnCompanyCategoryIDChanged();
    partial void OnManufacturedProductsChanging(string value);
    partial void OnManufacturedProductsChanged();
    partial void OnImportedProductsChanging(string value);
    partial void OnImportedProductsChanged();
    partial void OnExportedProductsChanging(string value);
    partial void OnExportedProductsChanged();
    partial void OnNameOfTheAssociationsChanging(string value);
    partial void OnNameOfTheAssociationsChanged();
    partial void OnMembershipStatusChanging(int value);
    partial void OnMembershipStatusChanged();
    partial void OnTypeOfSubmissionChanging(int value);
    partial void OnTypeOfSubmissionChanged();
    partial void OnMembershipCodeChanging(string value);
    partial void OnMembershipCodeChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnMemberVerificationStatusChanging(int value);
    partial void OnMemberVerificationStatusChanged();
    #endregion
		
		public Member()
		{
			this._Ins_MemberVerifications = new EntitySet<Ins_MemberVerification>(new Action<Ins_MemberVerification>(this.attach_Ins_MemberVerifications), new Action<Ins_MemberVerification>(this.detach_Ins_MemberVerifications));
			this._Ins_MemberVerificationDetails = new EntitySet<Ins_MemberVerificationDetail>(new Action<Ins_MemberVerificationDetail>(this.attach_Ins_MemberVerificationDetails), new Action<Ins_MemberVerificationDetail>(this.detach_Ins_MemberVerificationDetails));
			this._MemberDocuments = new EntitySet<MemberDocument>(new Action<MemberDocument>(this.attach_MemberDocuments), new Action<MemberDocument>(this.detach_MemberDocuments));
			this._Ins_MemberShipFees = new EntitySet<Ins_MemberShipFee>(new Action<Ins_MemberShipFee>(this.attach_Ins_MemberShipFees), new Action<Ins_MemberShipFee>(this.detach_Ins_MemberShipFees));
			this._Ins_BapaIncomes = new EntitySet<Ins_BapaIncome>(new Action<Ins_BapaIncome>(this.attach_Ins_BapaIncomes), new Action<Ins_BapaIncome>(this.detach_Ins_BapaIncomes));
			this._Ins_MemberPayments = new EntitySet<Ins_MemberPayment>(new Action<Ins_MemberPayment>(this.attach_Ins_MemberPayments), new Action<Ins_MemberPayment>(this.detach_Ins_MemberPayments));
			this._Ins_MembershipExpireInfos = new EntitySet<Ins_MembershipExpireInfo>(new Action<Ins_MembershipExpireInfo>(this.attach_Ins_MembershipExpireInfos), new Action<Ins_MembershipExpireInfo>(this.detach_Ins_MembershipExpireInfos));
			this._Acc_ChartOfAccountMembers = new EntitySet<Acc_ChartOfAccountMember>(new Action<Acc_ChartOfAccountMember>(this.attach_Acc_ChartOfAccountMembers), new Action<Acc_ChartOfAccountMember>(this.detach_Acc_ChartOfAccountMembers));
			this._Ins_ChaForms = new EntitySet<Ins_ChaForm>(new Action<Ins_ChaForm>(this.attach_Ins_ChaForms), new Action<Ins_ChaForm>(this.detach_Ins_ChaForms));
			this._Ins_MemberItems = new EntitySet<Ins_MemberItem>(new Action<Ins_MemberItem>(this.attach_Ins_MemberItems), new Action<Ins_MemberItem>(this.detach_Ins_MemberItems));
			this._Inv_Masters = new EntitySet<Inv_Master>(new Action<Inv_Master>(this.attach_Inv_Masters), new Action<Inv_Master>(this.detach_Inv_Masters));
			this._CompanyCategory = default(EntityRef<CompanyCategory>);
			this._CompanyType = default(EntityRef<CompanyType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameBangla", DbType="NVarChar(500)")]
		public string NameBangla
		{
			get
			{
				return this._NameBangla;
			}
			set
			{
				if ((this._NameBangla != value))
				{
					this.OnNameBanglaChanging(value);
					this.SendPropertyChanging();
					this._NameBangla = value;
					this.SendPropertyChanged("NameBangla");
					this.OnNameBanglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressBangla", DbType="NVarChar(500)")]
		public string AddressBangla
		{
			get
			{
				return this._AddressBangla;
			}
			set
			{
				if ((this._AddressBangla != value))
				{
					this.OnAddressBanglaChanging(value);
					this.SendPropertyChanging();
					this._AddressBangla = value;
					this.SendPropertyChanged("AddressBangla");
					this.OnAddressBanglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryLocation", DbType="NVarChar(500)")]
		public string IndustryLocation
		{
			get
			{
				return this._IndustryLocation;
			}
			set
			{
				if ((this._IndustryLocation != value))
				{
					this.OnIndustryLocationChanging(value);
					this.SendPropertyChanging();
					this._IndustryLocation = value;
					this.SendPropertyChanged("IndustryLocation");
					this.OnIndustryLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEstablishmentYear", DbType="Int")]
		public System.Nullable<int> CompanyEstablishmentYear
		{
			get
			{
				return this._CompanyEstablishmentYear;
			}
			set
			{
				if ((this._CompanyEstablishmentYear != value))
				{
					this.OnCompanyEstablishmentYearChanging(value);
					this.SendPropertyChanging();
					this._CompanyEstablishmentYear = value;
					this.SendPropertyChanged("CompanyEstablishmentYear");
					this.OnCompanyEstablishmentYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryFoundationYear", DbType="Int")]
		public System.Nullable<int> IndustryFoundationYear
		{
			get
			{
				return this._IndustryFoundationYear;
			}
			set
			{
				if ((this._IndustryFoundationYear != value))
				{
					this.OnIndustryFoundationYearChanging(value);
					this.SendPropertyChanging();
					this._IndustryFoundationYear = value;
					this.SendPropertyChanged("IndustryFoundationYear");
					this.OnIndustryFoundationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfBusiness", DbType="NVarChar(50)")]
		public string TypeOfBusiness
		{
			get
			{
				return this._TypeOfBusiness;
			}
			set
			{
				if ((this._TypeOfBusiness != value))
				{
					this.OnTypeOfBusinessChanging(value);
					this.SendPropertyChanging();
					this._TypeOfBusiness = value;
					this.SendPropertyChanged("TypeOfBusiness");
					this.OnTypeOfBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTypeID", DbType="Int NOT NULL")]
		public int CompanyTypeID
		{
			get
			{
				return this._CompanyTypeID;
			}
			set
			{
				if ((this._CompanyTypeID != value))
				{
					if (this._CompanyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyTypeID = value;
					this.SendPropertyChanged("CompanyTypeID");
					this.OnCompanyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCategoryID", DbType="Int NOT NULL")]
		public int CompanyCategoryID
		{
			get
			{
				return this._CompanyCategoryID;
			}
			set
			{
				if ((this._CompanyCategoryID != value))
				{
					if (this._CompanyCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyCategoryID = value;
					this.SendPropertyChanged("CompanyCategoryID");
					this.OnCompanyCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturedProducts", DbType="NVarChar(500)")]
		public string ManufacturedProducts
		{
			get
			{
				return this._ManufacturedProducts;
			}
			set
			{
				if ((this._ManufacturedProducts != value))
				{
					this.OnManufacturedProductsChanging(value);
					this.SendPropertyChanging();
					this._ManufacturedProducts = value;
					this.SendPropertyChanged("ManufacturedProducts");
					this.OnManufacturedProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedProducts", DbType="NVarChar(500)")]
		public string ImportedProducts
		{
			get
			{
				return this._ImportedProducts;
			}
			set
			{
				if ((this._ImportedProducts != value))
				{
					this.OnImportedProductsChanging(value);
					this.SendPropertyChanging();
					this._ImportedProducts = value;
					this.SendPropertyChanged("ImportedProducts");
					this.OnImportedProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedProducts", DbType="NVarChar(500)")]
		public string ExportedProducts
		{
			get
			{
				return this._ExportedProducts;
			}
			set
			{
				if ((this._ExportedProducts != value))
				{
					this.OnExportedProductsChanging(value);
					this.SendPropertyChanging();
					this._ExportedProducts = value;
					this.SendPropertyChanged("ExportedProducts");
					this.OnExportedProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfTheAssociations", DbType="NVarChar(500)")]
		public string NameOfTheAssociations
		{
			get
			{
				return this._NameOfTheAssociations;
			}
			set
			{
				if ((this._NameOfTheAssociations != value))
				{
					this.OnNameOfTheAssociationsChanging(value);
					this.SendPropertyChanging();
					this._NameOfTheAssociations = value;
					this.SendPropertyChanged("NameOfTheAssociations");
					this.OnNameOfTheAssociationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipStatus", DbType="Int NOT NULL")]
		public int MembershipStatus
		{
			get
			{
				return this._MembershipStatus;
			}
			set
			{
				if ((this._MembershipStatus != value))
				{
					this.OnMembershipStatusChanging(value);
					this.SendPropertyChanging();
					this._MembershipStatus = value;
					this.SendPropertyChanged("MembershipStatus");
					this.OnMembershipStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfSubmission", DbType="Int NOT NULL")]
		public int TypeOfSubmission
		{
			get
			{
				return this._TypeOfSubmission;
			}
			set
			{
				if ((this._TypeOfSubmission != value))
				{
					this.OnTypeOfSubmissionChanging(value);
					this.SendPropertyChanging();
					this._TypeOfSubmission = value;
					this.SendPropertyChanged("TypeOfSubmission");
					this.OnTypeOfSubmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipCode", DbType="NVarChar(50)")]
		public string MembershipCode
		{
			get
			{
				return this._MembershipCode;
			}
			set
			{
				if ((this._MembershipCode != value))
				{
					this.OnMembershipCodeChanging(value);
					this.SendPropertyChanging();
					this._MembershipCode = value;
					this.SendPropertyChanged("MembershipCode");
					this.OnMembershipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(50)")]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberVerificationStatus", DbType="Int NOT NULL")]
		public int MemberVerificationStatus
		{
			get
			{
				return this._MemberVerificationStatus;
			}
			set
			{
				if ((this._MemberVerificationStatus != value))
				{
					this.OnMemberVerificationStatusChanging(value);
					this.SendPropertyChanging();
					this._MemberVerificationStatus = value;
					this.SendPropertyChanged("MemberVerificationStatus");
					this.OnMemberVerificationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberVerification", Storage="_Ins_MemberVerifications", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MemberVerification> Ins_MemberVerifications
		{
			get
			{
				return this._Ins_MemberVerifications;
			}
			set
			{
				this._Ins_MemberVerifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberVerificationDetail", Storage="_Ins_MemberVerificationDetails", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MemberVerificationDetail> Ins_MemberVerificationDetails
		{
			get
			{
				return this._Ins_MemberVerificationDetails;
			}
			set
			{
				this._Ins_MemberVerificationDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberDocument", Storage="_MemberDocuments", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<MemberDocument> MemberDocuments
		{
			get
			{
				return this._MemberDocuments;
			}
			set
			{
				this._MemberDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberShipFee", Storage="_Ins_MemberShipFees", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MemberShipFee> Ins_MemberShipFees
		{
			get
			{
				return this._Ins_MemberShipFees;
			}
			set
			{
				this._Ins_MemberShipFees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_BapaIncome", Storage="_Ins_BapaIncomes", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_BapaIncome> Ins_BapaIncomes
		{
			get
			{
				return this._Ins_BapaIncomes;
			}
			set
			{
				this._Ins_BapaIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberPayment", Storage="_Ins_MemberPayments", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MemberPayment> Ins_MemberPayments
		{
			get
			{
				return this._Ins_MemberPayments;
			}
			set
			{
				this._Ins_MemberPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MembershipExpireInfo", Storage="_Ins_MembershipExpireInfos", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MembershipExpireInfo> Ins_MembershipExpireInfos
		{
			get
			{
				return this._Ins_MembershipExpireInfos;
			}
			set
			{
				this._Ins_MembershipExpireInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Acc_ChartOfAccountMember", Storage="_Acc_ChartOfAccountMembers", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Acc_ChartOfAccountMember> Acc_ChartOfAccountMembers
		{
			get
			{
				return this._Acc_ChartOfAccountMembers;
			}
			set
			{
				this._Acc_ChartOfAccountMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_ChaForm", Storage="_Ins_ChaForms", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_ChaForm> Ins_ChaForms
		{
			get
			{
				return this._Ins_ChaForms;
			}
			set
			{
				this._Ins_ChaForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Ins_MemberItem", Storage="_Ins_MemberItems", ThisKey="ID", OtherKey="MemberID")]
		public EntitySet<Ins_MemberItem> Ins_MemberItems
		{
			get
			{
				return this._Ins_MemberItems;
			}
			set
			{
				this._Ins_MemberItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Inv_Master", Storage="_Inv_Masters", ThisKey="ID", OtherKey="MemberId")]
		public EntitySet<Inv_Master> Inv_Masters
		{
			get
			{
				return this._Inv_Masters;
			}
			set
			{
				this._Inv_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyCategory_Member", Storage="_CompanyCategory", ThisKey="CompanyCategoryID", OtherKey="ID", IsForeignKey=true)]
		public CompanyCategory CompanyCategory
		{
			get
			{
				return this._CompanyCategory.Entity;
			}
			set
			{
				CompanyCategory previousValue = this._CompanyCategory.Entity;
				if (((previousValue != value) 
							|| (this._CompanyCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyCategory.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._CompanyCategory.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._CompanyCategoryID = value.ID;
					}
					else
					{
						this._CompanyCategoryID = default(int);
					}
					this.SendPropertyChanged("CompanyCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyType_Member", Storage="_CompanyType", ThisKey="CompanyTypeID", OtherKey="ID", IsForeignKey=true)]
		public CompanyType CompanyType
		{
			get
			{
				return this._CompanyType.Entity;
			}
			set
			{
				CompanyType previousValue = this._CompanyType.Entity;
				if (((previousValue != value) 
							|| (this._CompanyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyType.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._CompanyType.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._CompanyTypeID = value.ID;
					}
					else
					{
						this._CompanyTypeID = default(int);
					}
					this.SendPropertyChanged("CompanyType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_MemberVerifications(Ins_MemberVerification entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MemberVerifications(Ins_MemberVerification entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_MemberVerificationDetails(Ins_MemberVerificationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MemberVerificationDetails(Ins_MemberVerificationDetail entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberDocuments(MemberDocument entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberDocuments(MemberDocument entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_MemberShipFees(Ins_MemberShipFee entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MemberShipFees(Ins_MemberShipFee entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_BapaIncomes(Ins_BapaIncome entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_BapaIncomes(Ins_BapaIncome entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_MemberPayments(Ins_MemberPayment entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MemberPayments(Ins_MemberPayment entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_MembershipExpireInfos(Ins_MembershipExpireInfo entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MembershipExpireInfos(Ins_MembershipExpireInfo entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Acc_ChartOfAccountMembers(Acc_ChartOfAccountMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Acc_ChartOfAccountMembers(Acc_ChartOfAccountMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_ChaForms(Ins_ChaForm entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_ChaForms(Ins_ChaForm entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Ins_MemberItems(Ins_MemberItem entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Ins_MemberItems(Ins_MemberItem entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Inv_Masters(Inv_Master entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inv_Master")]
	public partial class Inv_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IID;
		
		private System.DateTime _Date;
		
		private string _Number;
		
		private decimal _DollarAmount;
		
		private int _CurrencyId;
		
		private decimal _DollarCounversionRate;
		
		private long _CreateBy;
		
		private long _UpdateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private int _IsRemoved;
		
		private string _ExportedLocalItemDescription;
		
		private string _ExportedLocalItemQuantity;
		
		private System.Nullable<decimal> _ExportedLocalItemAmount;
		
		private System.Nullable<long> _MemberId;
		
		private string _ExportedLocalDistrubuterNameAndAddress;
		
		private System.Nullable<decimal> _CurrencyAmount;
		
		private long _CountryID;
		
		private EntitySet<Ins_ChaFormInvoice> _Ins_ChaFormInvoices;
		
		private EntitySet<Inv_Detail> _Inv_Details;
		
		private EntitySet<Ins_InvoiceEnclosedDocument> _Ins_InvoiceEnclosedDocuments;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(long value);
    partial void OnIIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDollarAmountChanging(decimal value);
    partial void OnDollarAmountChanged();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnDollarCounversionRateChanging(decimal value);
    partial void OnDollarCounversionRateChanged();
    partial void OnCreateByChanging(long value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(long value);
    partial void OnUpdateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIsRemovedChanging(int value);
    partial void OnIsRemovedChanged();
    partial void OnExportedLocalItemDescriptionChanging(string value);
    partial void OnExportedLocalItemDescriptionChanged();
    partial void OnExportedLocalItemQuantityChanging(string value);
    partial void OnExportedLocalItemQuantityChanged();
    partial void OnExportedLocalItemAmountChanging(System.Nullable<decimal> value);
    partial void OnExportedLocalItemAmountChanged();
    partial void OnMemberIdChanging(System.Nullable<long> value);
    partial void OnMemberIdChanged();
    partial void OnExportedLocalDistrubuterNameAndAddressChanging(string value);
    partial void OnExportedLocalDistrubuterNameAndAddressChanged();
    partial void OnCurrencyAmountChanging(System.Nullable<decimal> value);
    partial void OnCurrencyAmountChanged();
    partial void OnCountryIDChanging(long value);
    partial void OnCountryIDChanged();
    #endregion
		
		public Inv_Master()
		{
			this._Ins_ChaFormInvoices = new EntitySet<Ins_ChaFormInvoice>(new Action<Ins_ChaFormInvoice>(this.attach_Ins_ChaFormInvoices), new Action<Ins_ChaFormInvoice>(this.detach_Ins_ChaFormInvoices));
			this._Inv_Details = new EntitySet<Inv_Detail>(new Action<Inv_Detail>(this.attach_Inv_Details), new Action<Inv_Detail>(this.detach_Inv_Details));
			this._Ins_InvoiceEnclosedDocuments = new EntitySet<Ins_InvoiceEnclosedDocument>(new Action<Ins_InvoiceEnclosedDocument>(this.attach_Ins_InvoiceEnclosedDocuments), new Action<Ins_InvoiceEnclosedDocument>(this.detach_Ins_InvoiceEnclosedDocuments));
			this._Country = default(EntityRef<Country>);
			this._Currency = default(EntityRef<Currency>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarAmount", DbType="Money NOT NULL")]
		public decimal DollarAmount
		{
			get
			{
				return this._DollarAmount;
			}
			set
			{
				if ((this._DollarAmount != value))
				{
					this.OnDollarAmountChanging(value);
					this.SendPropertyChanging();
					this._DollarAmount = value;
					this.SendPropertyChanged("DollarAmount");
					this.OnDollarAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="Int NOT NULL")]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarCounversionRate", DbType="Money NOT NULL")]
		public decimal DollarCounversionRate
		{
			get
			{
				return this._DollarCounversionRate;
			}
			set
			{
				if ((this._DollarCounversionRate != value))
				{
					this.OnDollarCounversionRateChanging(value);
					this.SendPropertyChanging();
					this._DollarCounversionRate = value;
					this.SendPropertyChanged("DollarCounversionRate");
					this.OnDollarCounversionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="BigInt NOT NULL")]
		public long CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="BigInt NOT NULL")]
		public long UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="Date NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRemoved", DbType="Int NOT NULL")]
		public int IsRemoved
		{
			get
			{
				return this._IsRemoved;
			}
			set
			{
				if ((this._IsRemoved != value))
				{
					this.OnIsRemovedChanging(value);
					this.SendPropertyChanging();
					this._IsRemoved = value;
					this.SendPropertyChanged("IsRemoved");
					this.OnIsRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedLocalItemDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExportedLocalItemDescription
		{
			get
			{
				return this._ExportedLocalItemDescription;
			}
			set
			{
				if ((this._ExportedLocalItemDescription != value))
				{
					this.OnExportedLocalItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ExportedLocalItemDescription = value;
					this.SendPropertyChanged("ExportedLocalItemDescription");
					this.OnExportedLocalItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedLocalItemQuantity", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExportedLocalItemQuantity
		{
			get
			{
				return this._ExportedLocalItemQuantity;
			}
			set
			{
				if ((this._ExportedLocalItemQuantity != value))
				{
					this.OnExportedLocalItemQuantityChanging(value);
					this.SendPropertyChanging();
					this._ExportedLocalItemQuantity = value;
					this.SendPropertyChanged("ExportedLocalItemQuantity");
					this.OnExportedLocalItemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedLocalItemAmount", DbType="Money")]
		public System.Nullable<decimal> ExportedLocalItemAmount
		{
			get
			{
				return this._ExportedLocalItemAmount;
			}
			set
			{
				if ((this._ExportedLocalItemAmount != value))
				{
					this.OnExportedLocalItemAmountChanging(value);
					this.SendPropertyChanging();
					this._ExportedLocalItemAmount = value;
					this.SendPropertyChanged("ExportedLocalItemAmount");
					this.OnExportedLocalItemAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="BigInt")]
		public System.Nullable<long> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedLocalDistrubuterNameAndAddress", DbType="NVarChar(500)")]
		public string ExportedLocalDistrubuterNameAndAddress
		{
			get
			{
				return this._ExportedLocalDistrubuterNameAndAddress;
			}
			set
			{
				if ((this._ExportedLocalDistrubuterNameAndAddress != value))
				{
					this.OnExportedLocalDistrubuterNameAndAddressChanging(value);
					this.SendPropertyChanging();
					this._ExportedLocalDistrubuterNameAndAddress = value;
					this.SendPropertyChanged("ExportedLocalDistrubuterNameAndAddress");
					this.OnExportedLocalDistrubuterNameAndAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyAmount", DbType="Money")]
		public System.Nullable<decimal> CurrencyAmount
		{
			get
			{
				return this._CurrencyAmount;
			}
			set
			{
				if ((this._CurrencyAmount != value))
				{
					this.OnCurrencyAmountChanging(value);
					this.SendPropertyChanging();
					this._CurrencyAmount = value;
					this.SendPropertyChanged("CurrencyAmount");
					this.OnCurrencyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="BigInt NOT NULL")]
		public long CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Ins_ChaFormInvoice", Storage="_Ins_ChaFormInvoices", ThisKey="IID", OtherKey="InvoiceMasterId")]
		public EntitySet<Ins_ChaFormInvoice> Ins_ChaFormInvoices
		{
			get
			{
				return this._Ins_ChaFormInvoices;
			}
			set
			{
				this._Ins_ChaFormInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Inv_Detail", Storage="_Inv_Details", ThisKey="IID", OtherKey="InvMasterId")]
		public EntitySet<Inv_Detail> Inv_Details
		{
			get
			{
				return this._Inv_Details;
			}
			set
			{
				this._Inv_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inv_Master_Ins_InvoiceEnclosedDocument", Storage="_Ins_InvoiceEnclosedDocuments", ThisKey="IID", OtherKey="InvoiceID")]
		public EntitySet<Ins_InvoiceEnclosedDocument> Ins_InvoiceEnclosedDocuments
		{
			get
			{
				return this._Ins_InvoiceEnclosedDocuments;
			}
			set
			{
				this._Ins_InvoiceEnclosedDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Inv_Master", Storage="_Country", ThisKey="CountryID", OtherKey="IID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Inv_Masters.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Inv_Masters.Add(this);
						this._CountryID = value.IID;
					}
					else
					{
						this._CountryID = default(long);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Inv_Master", Storage="_Currency", ThisKey="CurrencyId", OtherKey="IID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Inv_Masters.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Inv_Masters.Add(this);
						this._CurrencyId = value.IID;
					}
					else
					{
						this._CurrencyId = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Inv_Master", Storage="_Member", ThisKey="MemberId", OtherKey="ID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Inv_Masters.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Inv_Masters.Add(this);
						this._MemberId = value.ID;
					}
					else
					{
						this._MemberId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ins_ChaFormInvoices(Ins_ChaFormInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = this;
		}
		
		private void detach_Ins_ChaFormInvoices(Ins_ChaFormInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = null;
		}
		
		private void attach_Inv_Details(Inv_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = this;
		}
		
		private void detach_Inv_Details(Inv_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = null;
		}
		
		private void attach_Ins_InvoiceEnclosedDocuments(Ins_InvoiceEnclosedDocument entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = this;
		}
		
		private void detach_Ins_InvoiceEnclosedDocuments(Ins_InvoiceEnclosedDocument entity)
		{
			this.SendPropertyChanging();
			entity.Inv_Master = null;
		}
	}
}
#pragma warning restore 1591
